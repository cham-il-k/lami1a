{"version":3,"sources":["config/dev.js","config/testing.js","config/index.js","util/db/db.js","store/api/selections.js","util/validators.js","store/api/profils.js","store/actions/profil.js","store/actions/cart.js","store/selectors/cart.js","components/variables.js","components/Cart-Icon/cart-icon.styled.jsx","components/Cart-Icon/Cart-Icon.jsx","components/Cart-Item/cart-item.styled.jsx","components/Cart-Item/Cart-Item.jsx","components/CustomButton/CustomButton.styled.jsx","components/CustomButton/CustomButton.jsx","components/Cart-Dropdown/cart.dropdown.styled.jsx","components/Cart-Dropdown/Cart-Dropdown.jsx","components/Logo/logo.styled.jsx","components/Logo/Logo.jsx","store/selectors/profil.js","components/Header/header-styled.jsx","components/Header/Header.jsx","store/selectors/selection.js","components/SelectionItem/selection-item-styled.jsx","components/SelectionItem/Selection-Item.jsx","components/Selection/selection.styled.jsx","store/actions/selection.js","components/Selection/Selection.jsx","pages/about/about-styled.jsx","pages/about/about.jsx","components/Stripe-Button/Stripe-Button.jsx","components/Checkout-Item/checkout.item.styled.jsx","components/Checkout-Item/Checkout-Item.jsx","pages/checkout/checkout.styled.jsx","pages/checkout/checkout.jsx","components/Collection-Item/collection-item.styled.jsx","components/Collection-Item/Collection-Item.jsx","components/Collection-Preview/collection-preview.styled.jsx","components/Collection-Preview/Collection-Preview.jsx","components/With-Spinner/with-spinner.styles.jsx","components/With-Spinner/With-Spinner.jsx","components/Collections-Overview/collections.overview.styled.jsx","components/Collections-Overview/Collections-Overview.jsx","pages/collectionPage/collection.styled.jsx","pages/collectionPage/collectionPage.jsx","pages/shop/shop.jsx","components/Product-Item/product-item.styled.jsx","components/Product-Item/Product-Item.jsx","pages/productsPage/products-styled.jsx","pages/productsPage/productsPage.jsx","pages/productsPage/productPage.jsx","pages/productsPage/productsRoute.jsx","pages/profil/profil.styled.jsx","pages/profil/collection.styled.jsx","components/FormInput/FormInput-styled.jsx","components/FormInput/FormInput.jsx","components/WithAuthorization/withAuthorization.jsx","pages/profil/profilProducts.jsx","pages/profil/profil.jsx","pages/profil/profilMessages.jsx","store/actions/message.js","pages/contact/contact.styled.jsx","pages/contact/contact.jsx","components/SignUp/signUp.styled.jsx","components/SignUp/SignUp.jsx","components/SignIn/signIn.styled.jsx","components/SignIn/SignIn.jsx","pages/main/main.styled.jsx","pages/main/main.jsx","components/Footer/Footer-styled.jsx","components/Footer/Footer.jsx","app-styled.jsx","components/CustomButton/CustomButtonSearch.styled.jsx","components/CustomButton/CustomButtonSearch.jsx","pages/collectionPage/collectionPageResult.jsx","components/Header/searchHeader.styled.jsx","components/Header/SearchHeader.jsx","App.jsx","Global.styling.jsx","serviceWorker.js","store/reducers/reducersUtils.js","store/reducers/profil.js","store/reducers/cartUtils.js","store/reducers/cart.js","store/reducers/selection.js","store/reducers/index.js","util/db/auth.firebase.js","store/sagas/profil.js","store/api/product.js","store/sagas/selection.js","store/sagas/cart.js","store/rootSaga.js","store/store.js","index.js"],"names":["config","secrets","jwt","adminEmail","mapKey","apiUrl","cert","key","stripe_key","stripe_pass","store1","dbCompass","dbUrl","env","process","baseConfig","isDev","isTest","port","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","JWT_SECRET","jwtExp","envConfig","require","merge","firebase","options","auth","firestore","storageRef","ref","productImageRef","child","firebaseTimestamp","FieldValue","serverTimestamp","transformCollectionSnapshotToMap","selectionsSnapshot","docs","map","selection","console","log","data","title","collections","id","imageUrl","routeName","encodeURI","reduce","accumulator","collection","toLowerCase","apifetchCollections","a","get","selectionSnapshot","onSnapshot","snapshot","docRef","isEmpty","value","undefined","Object","keys","length","trim","apiGetCurrentProfil","Promise","resolve","reject","unsubscribe","onAuthStateChanged","userAuth","apiUpdateCredential","updateCred","uid","login","email","address","city","country","currentUser","updateProfile","displayName","doc","update","error","getProfilDocument","type","payload","setCurrentProfil","profil","signUpSuccess","userCred","signUpFail","warn","signInSuccess","signInFail","updateProfilStart","credential","toggleCartHidden","addItem","item","clearCart","selectCart","state","cart","selectCartItems","createSelector","cartItems","selectCartHidden","hidden","selectCartItemsCount","accumalatedQuantity","cartItem","quantity","selectCartTotal","price","blue1","blue2","blue3","blue4","blanc","green1","green2","green4","textBlue","CartContainer","styled","div","ShoppingIcon","ItemCountContainer","span","mapStateToProps","createStructuredSelector","itemCount","connect","dispatch","onClick","className","icon","faShoppingCart","CartItemContainer","CartItemImage","img","ItemDetailsContainer","CartItem","name","src","alt","buttonStyles","css","invertedButtonStyles","googleSignInStyles","getButtonStyles","props","isGoogleSignIn","inverted","buttonCommon","CustomButtonContainer","button","CustomLinkContainer","Link","CustomInputContainer","input","CustomButton","children","link","CartDropdownContainer","CartDropdownButton","EmptyMessageContainer","CartItemsContainer","withRouter","history","push","animate","keyframes","Contain","NameSite","LogoBox","to","selectProfil","selectCurrentProfil","currentProfil","selectErrorProfil","authenticated","selectCurrentCollection","selectCurrentProducts","products","selectCurrentMessages","messages","selectCurrentUsers","users","HeaderContainer","LogoContainer","OptionsContainer","OptionLink","HeaderContain","compose","logOutStart","selectSelectedSelections","selections","selectSelections","entries","selectIsLoading","selectBooks","books","collectionBooks","val","items","booksArray","elm","i","forEach","selectProducts","collectionproducts","productsArray","SelectionItemContainer","BackgroundImageContainer","ContentContainer","ContentTitle","ContentSubtitle","size","imageUrlrep","linkUrl","match","toUpperCase","SelectionMenuContainer","fetchCollectionsSuccess","errors","fetchProductsSuccess","addProductSuccess","product","addProductStart","productToAdd","fetchSelections","menus","otherProps","AboutContainer","about","StripeCheckoutButton","priceForStripe","publishableKey","PUBLIC_KEY","label","billingAddress","shippingAddress","description","currency","amount","panelLabel","token","axios","post","url","method","then","response","alert","catch","JSON","parse","stripeKey","CheckoutItemContainer","ImageContainer","TextContainer","QuantityContainer","RemoveButtonContainer","clearItem","clearItemFromCart","removeItem","CheckoutPageContainer","CheckoutHeaderContainer","HeaderBlockContainer","TotalContainer","WarningContainer","total","CollectionItemContainer","BackgroundImage","CollectionFooterContainer","NameContainer","PriceContainer","LinkProduct","addProduct","urlName","faStar","CollectionPreviewContainer","TitleContainer","h1","PreviewCollections","PreviewCollection","path","colRouteName","colTitle","colImageUrl","SpinnerOverlay","SpinnerContainer","WithSpinner","WrappedComponent","isLoading","CollectionsOverviewContainer","CollectionsOverviewContain","index","otherCollectionProps","CollectionPageContainer","CollectionTitle","h2","CollectionItemsContainer","CollectionPageContain","ownProps","selectionId","params","collectionsObject","filter","col","slug","shopPage","fetchProductsStart","exact","render","ProductItemContainer","AddButton","ProductFooterContainer","ProductItemCompose","nameSlug","desc","edition","location","ProductsPageContainer","ProductsTitle","ProductsItemsContainer","ProductsPageContain","productCollection","productsAffichable","prod","term","productSlug","ProductRoute","MainContainer","ProfilContainer","CollectionContainer","ProfilTitle","ButtonsBarContainer","Message","ProductContainer","FileContainer","ProductTitle","AddProductContainer","SelectContainer","shrinkLabelStyles","GroupContainer","FormInputContainer","FormTextAreaContainer","textarea","FormInputLabel","FormInput","withAuthorization","ComposedComponent","rest","initialSelections","composedProductEdit","createProduct","updateProduct","updateProfil","favourites","useState","setCredential","selec","setSelec","collec","setCollec","setProduct","notify","message","toast","useEffect","handleSubmitProduct","event","preventDefault","handleChangeProduct","target","onSubmit","placeholder","onChange","selecOption","required","rows","cols","min","collecOption","stopPropagation","file","files","image","accept","composedProfilProductPage","handleUpdateProfil","handleChangeProfil","e","composedProfilMessages","createMessageStart","setMessage","handleSubmitMessage","handleChangeMessage","monMessage","user","ContactContainer","ContactTitle","sendMessage","createMessage","text","handleSubmit","messageRefdb","appearance","handleChange","SignUpContainer","fieldset","SignUpTitle","ShowPasswordInput","ShowPasswordContainer","SignUpContain","signUpStart","userCredential","document","setEmail","setLogin","password","setPassword","retypePassword","setRetypePassword","showPassword","setShowPassword","setRedirect","cred","defaultChecked","SignInContainer","SignInContain","googleSigninStart","emailSigninStart","getUser","component","Selection","Contact","ProfilProductsPage","extact","About","CheckoutPage","FooterContainer","NavigationContainer","CopyRight","Footer","loading","href","AppContainer","CustomClearContainer","clear","searchTerm","FormSearch","form","FormInputSearch","initialResult","SearchHeaderContain","callback","useRef","setSearchTerm","setResultProds","setIsLoading","setError","re","resultProd","tag","rsltBooks","bookMatch","fetchArticle","CustomButtonSearch","AppContain","checkProfilSession","fetchSelectionsStart","createGlobalStyle","Boolean","window","hostname","removeProductsFromProfil","initialState","status","admin","profilReducer","action","profils","addItemToCart","cartItemToAdd","find","removeItemFromCart","cartItemToRemove","INITIAL_STATE","cartReducer","collectionsTitle","selectionReducer","persistConfig","storage","whitelist","rootReducer","combineReducers","persistReducer","googleProvider","GoogleAuthProvider","setCustomParameters","prompt","asyncGetProfilDocument","googleSignIn","signInAfterSignUP","signUp","emailSignIn","logout","updateProfilAsync","isAuthenticated","onUpdateProfilStart","onGoogleSignInStart","onEmailSignInStart","onSignUpSuccess","onSignUpStart","onLogoutStart","onCheckProfilSession","onGetProfilDocument","profilSagas","profilData","put","signInWithPopup","profilRef","exists","createdAt","Date","userProfil","favoutites","comments","set","profilSnapshot","createUserWithEmailAndPassword","sendEmailVerification","signInWithEmailAndPassword","signOut","call","takeLatest","all","fork","apiCreateProduct","parseInt","addProductToSelection","newProduct","selectionSnaps","fetchSelectionsAsync","onfetchSelectionsStart","fetchCollectionsAsync","onfetchCollectionsStart","fetchProductsAsync","onfetchProductsStart","onAddProductStart","getCollectionsTitleAsync","onGetCollectionsTitle","selectionSagas","collectionsMap","selectionRef","collectionRef","snapShot","concat","fileStorage","productRegistred","clearCartOnSignOutSuccess","clearCartOnStart","onSignOutSuccess","onDelCartOnStart","cartSagas","rootSaga","sagaMiddleware","createSagaMiddleware","middleware","store","createStore","composeWithDevTools","applyMiddleware","persistor","persistStore","run","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0281a782.chunk.js","sourcesContent":["export const config = {\n  secrets: {\n    jwt: 'think!:/'\n  },\n  adminEmail: 'kazdhicham@gmail.com',\n\n  \n  mapKey: '5bd2LX5CpNr3dyBk8VXg9WA8lzpA4vEy',\n  apiUrl: 'http://localhost:4111',\n  cert:'/cert/liil_rest.cert',\n  key:'/cert/liil_rest.key',\n  stripe_key:'pk_test_E2lsq4J7vVsSAsCdu5lsM0PW009pnudKPw',\n  stripe_pass:'sk_test_apkqAnEZpfDCfZNxSYkmO2Jy00qwgPWGB5',\n  store1: 'gs://liism-2a462.appspot.com/',\n  dbCompass:\n  'mongodb+srv://kazdhicham:1AllaHouAkbar@cluster0-jo1bg.mongodb.net/lami1a?retryWrites=true&w=majority',\n\n}\n","export const config = {\n  secrets: {\n    jwt: 'learneverything'\n  },\n  dbUrl: 'mongodb://localhost:27017/api-design-test'\n}\n","import { merge } from 'lodash'\nconst env = process.env.NODE_ENV || 'development'\n\nconst baseConfig = {\n  env,\n  isDev: env === 'development',\n  isTest: env === 'testing',\n  port: 8080,\n  firebaseConfig :{\n    apiKey: \"AIzaSyBK6_uM1AeQgPGL7e6qowyoeB6-sK2sQr0\",\n    authDomain: \"liism-2a462.firebaseapp.com\",\n    databaseURL: \"https://liism-2a462.firebaseio.com\",\n    projectId: \"liism-2a462\",\n    storageBucket: \"liism-2a462.appspot.com\",\n    messagingSenderId: \"135614317013\",\n    appId: \"1:135614317013:web:c0392d3131b359c6b23d5c\"\n  },\n  secrets: {\n    jwt: process.env.JWT_SECRET,\n    jwtExp: '100d'\n  }\n}\n\nlet envConfig = {}\n\nswitch (env) {\n  case 'dev':\n  case 'development':\n    envConfig = require('./dev').config\n    break\n  case 'test':\n  case 'testing':\n    envConfig = require('./testing').config\n    break\n  default:\n    envConfig = require('./dev').config\n}\n\nexport default merge(baseConfig, envConfig)\n","import * as firebase from 'firebase/app'\n//import * as firebaseui from 'firebaseui'\nimport 'firebase/auth'\nimport 'firebase/firestore'\nimport 'firebase/functions'\nimport 'firebase/storage'\nimport options from './../../config'\nconst slug = require('slug')\n\n/* firebaseApp.onLog((level='error')=> {\n  console.log(firebaseApp)\n})\n*/\nfirebase.initializeApp(options.firebaseConfig) \nexport const auth = firebase.auth()\nexport const firestore = firebase.firestore()\n const storage = firebase.storage()\nexport const storageRef = storage.ref()\nexport const productImageRef = storageRef.child('/productImages')\nexport const functions =  firebase.functions()\n//auth.functions().useFunctionsEmulator('http://localhost:5001')\nexport default firebase\nexport const firebaseTimestamp = firebase.firestore.FieldValue.serverTimestamp\n\n\n/**\n * tools \n * @param {string} selectionName \n */\n export const addSelection = async (selectionName) => {\n   const objectToAdd = Object.entries([])\n   let writeBatch = firestore.batch()\n   try {\n     // recup collection Ref \n     const collectionRef = await firestore.collection(selectionName)\n     //init le write batch \n     // la boucle de credations des collections  \n     const querySnapshot = await collectionRef.get()\n     if (querySnapshot.empty) {\n       objectToAdd.forEach(async entry => {\n         // creation des objects lié  la clé  key  \n         const newDocRef = collectionRef.doc(`${entry[0]}`)\n         writeBatch.set(newDocRef, entry[1])\n       })\n     }\n      writeBatch.commit().then(res => ({\n       error: null,\n       message: `batch commit ${res}`\n     }))\n   } catch (error) {\n     return {\n       error: true,\n       message: `batch commit error  ${error}`\n     }\n   }\n }\n export const transformCollectionSnapshotToMap = (selectionsSnapshot) => {\n  const transformedCollection = selectionsSnapshot.docs.map(selection => {\n    console.log({selection})\n    const { title, collections, id, imageUrl} = selection.data()\n    return {\n      routeName: encodeURI(title),\n      id,\n      title,\n      imageUrl,\n      collections\n    }\n  })\n     return  transformedCollection.reduce((accumulator, collection) => {\n        accumulator[collection.title.toLowerCase()]= collection\n        return accumulator\n    },{})\n}\n\nexport const createContatctDocument = (country, email, message) => {\n  if(email) {\n    firestore.collection('contact').get().then(snapshot => {\n      snapshot.docs.map(emailent => (emailent===email))\n    })\n  }  \n  const collectionRef = firestore.collection('contact')\n}\n\n/**\n * @augments (collectionRef, [IdsRef])\n */\nexport  const  readConcurrently = async (collection, ids) => {\n\n  const docSnap =  ids.map(id => collection.doc(id).get())\n  const result = await Promise.all(docSnap)\n  return result.map(v => v.data())  \n}\n\n/**\n * Call admin privileges token\n * @param {email} param0 \n */\n\nexport const adminCheck =(userRef) => {\n  userRef.getIdTokenResult().then(idTokenResult => {\n    if(idTokenResult.claims.admin) {\n      /**\n       * @todo setProfilAdmin links \n       */\n    }else {\n\n\n    }\n  })\n\n}\n/***\n * manage products collection\n */\n\nexport const createProductsCollection = async () => {\n  const collectionSnapshot = await firestore.collection('collections').get()\n  const collectionMap = new Map()\n  collectionSnapshot.docs.forEach(async (docSnapShot) => {\n    const {title, selection, items } = await docSnapShot.data()\n    items.forEach(async (item ) => {\n      const product = {\n        ...item,\n        collection:title,\n        selection\n      }\n      dbCreateProduct(product)\n    } ) \n  })\n\n}\n\n\nexport const dbCreateProduct = async (doc) => {\n  const slugName = slug(doc.name)\n  await firestore.collection('products').doc(slugName).set({ ...doc})  \n}\n\nexport const dbDeletProduct = (doc) => {\n\n  firestore.collection('products').doc(doc).delete()  \n}\n\nexport const dbUpdateProduct = ({id, doc}) => {\n\n  firestore.collection('products').doc(id).update({doc})  \n}\n/**\n * reate galery products/ and Selections\n * @param {*} param0 \n */\nexport const storeImageRef = (user, url, fileName) =>  {\n  \n  firestore.collection('selectionGallery').add({\n    imageUrl:`${url}`,\n    admin:`${user.uid}`,\n    fileName:`selectionGallery/${fileName}`\n  }).then(() => ({message:'image is stored'}))\n  .catch((err) => ({\n    err\n  }))\n}\n\nconst deletImage = (imageId) => {\n  auth.currentUser.getIdTokenResult().then(idTokenResult => {\n    if(idTokenResult.claims.admin){\n      firestore.collection('selectionGallery').doc(imageId).delete()\n    }\n  } )\n}\n\n/**\n * Quries\n */\n\nconst querySelection = ({...arg}) => {\n\n\n  firestore.collection(arg.collection).orderBy('date', 'desc')\n  firestore.collection(arg.collection).orderBy('date', 'desc').limit(20)\n  firestore.collection(arg.collection).orderBy('date', 'desc').startAfter('las')\n  firestore.collection(arg.collection).orderBy('date', 'desc').startAt('lastweek')\n  firestore.collection(arg.collection).orderBy('date', 'desc').endAt('lastweek')\n  firestore.collection(arg.collection).orderBy('date', 'desc').endBeforet('lastweek')\n  firestore.collection(arg.collection).orderBy('date', 'desc').where('date','<=','today').where('name','==','ja')\n  firestore.collection(arg.collection).orderBy('date', 'desc').where('products','array-contains','tivres').where('name','==','ja')\n  /**\n   * thinking aboutcomposites indexe\n   */\n  firestore.collection(arg.collection).orderBy('date', 'desc').where('autor','array-contains','hicam').where('livre','==','tafsir')\n  /**\n   * Roles\n    match /posts/{documents} {\n     getRole() {\n      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles\n  }\n\n    allow read;\n    allow update: if  getRoles().hasAny (['edit','admin']) == true\n    allow write: if  getRoles().hasAny (['admin']) == true\n/// ACL\n  match /securedata/{document}\n  allow read ;\n  allow write: if resource.data.members.hasAny(request.auth.uid)\n\n*/\n\n  /**\n   *  \n   * \n   * */ \n   }  ","import firebase, {\n    firestore, auth, storageRef, firebaseTimestamp\n} from '../../util/db/db'\nimport slug from 'slug'\n/**\n * Selections queries\n */\n\nexport const apifetchSelections = async () => {\n    try {\n        const selectionSnapshot = await firestore.collection('selections').get()\n        const selections = []\n        console.log({selectionSnapshot})\n        await selectionSnapshot.onSnapshot(async snapshot => {\n            console.log(`Api Fetch Selections ${snapshot.docs}`)\n             selections = await snapshot.docs.map(docRef => {\n                        return docRef.data()\n                    })\n        }) \n        return selections\n    } catch (error) {\n        throw error\n    }    \n}\n export const apiCreateCollections = async (collections) => {\n    try {\n        const collectionsRef = await firestore.collection('collections')\n        collections.forEach(collection => {\n                collectionsRef.onSnapshot(async snapshot => {\n                collectionsRef.doc(collection[0]).set(collection[1])\n           }) \n        })\n    } catch (error) {\n        throw error\n    }    \n}\n\nexport const apiProductsCollection = async ({collectionKey, products}) => {\n    try {\n        const productsRef = await firestore.collection('products')\n         const docRef = await productsRef.doc(collectionKey)     \n           const docSnapshot = docRef.get()\n           if(!docSnapshot.exists) {\n               docRef\n            .docRef.set(products)\n           } \n    \n    } catch (error) {\n        throw error\n    }    \n}\nexport const apiShopProducts = async () => {\n    try {\n        const productsRef = await firestore.collection('products')\n        const productsSnapshot = productsRef.get()\n        productsSnapshot.docs.map((colDoc) => {\n                const items = colDoc.data()\n                return items.reduce((acc, item) => {\n                    acc[item.id] = item\n                    return acc\n                }, {})\n            })\n         } catch (error) {\n        throw error\n    }\n}\n\nexport const apifetchCollections = async () => {\n    const selectionSnapshot = await firestore.collection('selections').get()\n    const collections = []\n\n    selectionSnapshot.onSnapshot(async snapshot => {\n       // console.log(`Api Fetch collections ${snapshot.docs}`)\n        collections = await snapshot.docs.map(docRef => {\n            const collection_Ref = docRef.get()\n            return collection_Ref.data()\n        })\n    })\n    return collections\n}\nexport const apifetchProductById = async (productId) => {\n     firestore.collection('products').doc(productId).get().then(snapshot => ({\n         id: snapshot.id,\n         ...snapshot.data()\n     }))\n}\nexport const apifetchProducts = async (productId) => {\n    firestore.collection('products').get().then(async snapshot => {\n        const products = await snapshot.docs.map(product => ({\n            id: product.id,\n            ...product.data()\n        }))\n        return products\n    })\n}\n\n/**Batch CRUD\n * product manageement \n * @param {string} productId \n */\n\nexport const apiaddCollectionAndDocuments = async (selectionKey, collection, items) => {\n    const collectionRef = firestore.collection(selectionKey)\n     const batch = firestore.batch()\n     /* //collections.forEach(object => {\n       const newCollRef = collectionRef.doc(object.title)\n       batch.set(newCollRef,object)  \n     })\n      */\n     return await batch.commit()  \n  }\n// create Product\n\n\n  //MANAGEMENT image storage\nexport const apiStoreImageGalleryDb = async (uid, url, file) => {\n try {\n    firestore.collection('selectionImages').add({\n        imageUrl:`${url}`,\n        uploadedBy:`${uid}`,\n        fileName:`selectionUploads /${file.name}`\n        }).then((fileDb) => {\n           Promise.resolve(fileDb) \n        })    \n } catch (error) {\n    Promise.reject(error)\n}\n}\nexport const apiDeleteImage = async(file) => {\n    try {\n        const storageRef = firebase.storage() \n    auth.currentUser.getIdTokenResult().then(async idTokenResult => {\n        if(idTokenResult.claims.admin) {\n             firestore.collection('selectionImages').doc(file.id).delete().then(res => {\n                return Promise.resolve('file deleted from database')    \n            }).catc(error => {\n                return Promise.reject(`cant delet file from database  ${file.name}`)\n\n             })\n            storageRef.child(`selectionUploads/${file.id}`).delete().then(res => {\n                return Promise.resolve('file deleted from storage')    \n            }).catc(error => {\n                return Promise.reject(`cant delet file ${file.name}`)\n\n            })  \n        }\n    })   \n    } catch (error) {\n        return Promise.reject(`cant delet file ${file.name}`)\n    }\n\n\n}\nexport const apiSelectionUploadsStorage = async (uid,file) => {\n    const metadata = {'contentType': file.type}\n    const storageRef = firebase.storage() \n    storageRef.child(`selectionUploads/${file.id}`).put(file, metadata).then(snapshot => {\n      const messageByteTransfered = snapshot.byteTransfered\n       const  uploaded =  snapshot.totalBytes\n        const snapshhorDownload =  snapshot.ref.getDownloadURL().then(url => {\n            apiStoreImageGalleryDb(uid, url, file)\n            return url \n        })\n})}   \n  ","export const isEmpty = (value) => {\n    return ( value === undefined || \n        value === null ||\n        (typeof value === 'object' && Object.keys(value).length === 0) ||\n        (typeof value === 'string' && value.trim().length === 0) \n        ) \n }\n\n export const isValidImage = value => {\n        if(!value) return true\n        if(typeof value !== 'string' ) return false\n        const img = ['jpg', 'jpeg', 'png', 'svg']\n        const ext = value.split('.').pop()\n        return (img.includes(ext)) \n }\n\n export const isSameAs = (getValues, field) => value => {\n    if(!value) return true\n    if(typeof value !== 'string' ) return false\n \n    const comparedValue = getValues()[field]\n    \n    return comparedValue === value\n}","import {\n    firestore, auth, functions\n} from '../../util/db/db'\nimport { isEmpty } from '../../util/validators'\nimport {setCurrentProfil} from './../actions/profil'\n\n\nexport const apiGetCurrentProfil = () => {\n    return new Promise((resolve, reject) => {\n      const unsubscribe =  auth.onAuthStateChanged(userAuth => {\n        unsubscribe()\n        \n        resolve(userAuth)\n      }, reject)\n  })\n  } \n  \n  export const apiRegister = async (cred) => {\n    try {\n    console.log({cred})\n    const email  = cred[0]\n    const password = cred[1]\n    const login = cred[2]\n    const {user }  = await auth.createUserWithEmailAndPassword(email,password)\n    const userProfil = {uid: user.uid, email, login,products:[], collections:[]}\n    return apiCreateUserProfilDocument([user.uid,email])\n    }\n    catch (error) {return Promise.reject(error)\n}}\n\nexport const apiCreateUserProfilDocument = async (profil) => {\n    if (isEmpty(profil)) return ;\n        try {\n        const uid = profil[0]\n        const email = profil[1]\n        const login = profil[2] || ''\n        const getOptions = {\n           source: 'server'\n        };\n       const createdAt = new Date();\n       const userProfil = { email, login,products:[], collections:[],createdAt}\n       const profilRef = await firestore.doc(`/profils/${uid}`)\n       console.log({profilRef}) \n       if(profilRef.get().exists) {\n           /* console.log({uid},{profilSnap:profilRef.get().data()})\n           return  ({uid:uid,profilCred:profilRef.get()}) */\n           console.log(({uid:uid,profilCred:profilRef.get()}))\n           return new Promise((resolve, reject) => {\n                resolve({error:{code:'auth/email-already-registred'}})\n           })\n        }else {\n            console.log({userProfil}) \n            return profilRef.set(userProfil).get()\n        }\n        } catch (error) {\n           return Promise.reject(error.message)\n       };\n}\n\nexport const apiGetAllProfils = async () => {\n\n    const profilsDocRefs  = firestore.collection('profils').get().docs\n    if(!!profilsDocRefs) {\n        const profils = await profilsDocRefs.map(profilRef => profilRef.data())\n        return {profils}\n    }else {\n        return {profils: []}\n    }\n} \nexport const apiUpdateCredential = async (updateCred) => {\n\n    const uid = updateCred[0] \n    const login = updateCred[1]\n    const email = updateCred[2]\n    const  address = updateCred[3]\n    const city = updateCred[4]\n    const country = updateCred[5]\n    try {\n      const updateUser = await auth.currentUser.updateProfile({displayName:login, email})\n        const updateDbProfil = await firestore.collection('profils').doc(uid).update({address,city,country,login})\n      //  console.log({updateUser}, {updateDbProfil})\n    } catch (error) {\n        return Promise.reject({error})\n    }\n}\n \nconst getUidFromEmail = async (email) => {\n        const getUidFromEmail= await functions.httpsCallable('getUidFromEmail')\n          getUidFromEmail({email}).then(async data => {\n           const userUid = data['data'] \n        const profilCred = await apiCreateUserProfilDocument([userUid, email])\n               console.log(profilCred)\n               return Promise.resolve(profilCred)\n           }).catch(error => {\n       console.log({error},{emplacement: 'catch apres apprl functions '})\n           \n    })\n} \nconst apiGetUserProfil = (uid) => {\n    firestore.collection('profils').doc(uid)\n    .get().then(snapshot => ({uid, ...snapshot.data()}))\n}","import {  apiGetAllProfils} from './../api'\n\nexport const EMAIL_SIGNIN_START = 'EMAIL_SIGNIN_START';\nexport const GOOGLE_SIGNIN_START = 'GOOGLE_SIGNIN_START';\n\nexport const SIGNIN_SUCCESS = 'SIGNIN_SUCCESS'\nexport const SIGNIN_FAIL = 'SIGNIN_FAIL'\n\nexport const SIGNUP_START = 'SIGNUP_START';\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS'\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL'\n\nexport const LOGOUT_START = 'LOGOUT_START'\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS'\nexport const LOGOUT_FAIL = 'LOGOUT_FAIL'\n\nexport const CHECK_PROFIL_SESSION = 'CHECK_PROFIL_SESSION'\n\nexport const GET_PROFIL_DOCUMENT = 'GET_PROFIL_DOCUMENT'\n\nexport const SET_CURRENT_PROFIL = 'SET_CURRENT_PROFIL'\nexport const SELECT_CURRENT_PROFIL = 'SELECT_CURRENT_PROFIL'\nexport const UPDATE_PROFIL_START = 'UPDATE_PROFIL_START'\nexport const UPDATE_PROFIL_SUCCESS = 'UPDATE_PROFIL_SUCCESS'\nexport const UPDATE_PROFIL_FAIL = 'UPDATE_PROFIL_FAIL'\nexport const ADD_USER_START = 'ADD_USER_START'\nexport const ADD_USER_SUCCESS = 'ADD_USER_SUCCESS'\nexport const ADD_USER_FAIL = 'ADD_USER_FAIL'\n\nexport const GET_COLLECTIONS_TITLE = 'GET_COLLECTIONS_TITLE'\nexport const GET_ALL_PROFILS = 'GET_ALL_PROFILS'\nexport const DEL_CART_ON_START = 'DEL_CART_ON_START'\nexport const ADD_TO_COLLECTION = 'ADD_TO_COLLECTION';\nexport const GET_COLLECTION = 'GET_COLLECTION';\nexport const REMOVE_FROM_COLLECTION = 'REMOVE_FROM_COLLECTION';\n\n \nexport const checkProfilSession = () => ({\n    type: CHECK_PROFIL_SESSION\n})\n\nexport const getProfilDocument = (uid) => ({\n    type: GET_PROFIL_DOCUMENT,\n    payload:uid\n})\n\nexport const setCurrentProfil = (profil) => {\n  // console.log({profil})\n    return { \n       type:SET_CURRENT_PROFIL,\n        payload: profil\n    }\n} \nexport const signUpStart = ({...cred}) => {\n    \n    return {\n        type:SIGNUP_START,\n        payload: cred \n    }\n}\nexport const  signUpSuccess = async (userCred) => {\n    console.log({userCred}) \n    return {\n            type: SIGNUP_SUCCESS,\n            payload:{...userCred}\n        }\n}  \nexport const signUpFail = (error) => {\n    console.warn({error})\n    return {\n        type:SIGNUP_FAIL,\n        error:{...error},\n    }\n}\nexport const emailSigninStart = ({...emailAndPassword}) => ({\n    type: EMAIL_SIGNIN_START,\n    payload:emailAndPassword\n})\n\nexport const signInSuccess = (profil) => {\n//console.log({profil})\n    return     {\n    type: SIGNIN_SUCCESS,\n    payload:profil\n}\n}\n\nexport const signInFail = (error) => ({\n    type: SIGNIN_FAIL,\n    payload: error\n    \n})\n\nexport const googleSigninStart = () => ({\n    type: GOOGLE_SIGNIN_START,\n    \n})\nexport const logOutStart = () => {\n    return {\n        type: LOGOUT_START,\n    }\n}\n\nexport const logOutSuccess = () => {\n    return {\n        type: LOGOUT_SUCCESS,\n        \n    }\n}\nexport const logOutFail = (error) => {\n    return {\n        type: LOGOUT_FAIL,\n        payload:error\n    }\n}\n\nexport const updateProfilStart = (credential) => {\n    console.log({credential})\n    return{\n      type: UPDATE_PROFIL_START,\n        payload:credential\n    }\n}\n\n\nexport const updateProfilSuccess = (profil) => ({\n    type: UPDATE_PROFIL_SUCCESS,\n    payload:profil\n})\n\nexport const updateProfilFail = (error) => ({\n    type: UPDATE_PROFIL_FAIL,\n    error:error\n})\n\nexport const addUserStart = (credUser) => ({\n    type:ADD_USER_START,\n    payload:credUser\n})\n\nexport const addUserSuccess = () => ({\n    type:ADD_USER_SUCCESS,\n    \n})\n\nexport const addUserFail = () => ({\n    type:ADD_USER_FAIL,\n})\n\nexport const getCollectionsTitle = async () => {\n    return {\n        type: GET_COLLECTIONS_TITLE,\n    }\n}\nexport const getAllProfils = async () => {\n    const profils = await apiGetAllProfils()\n    console.log(profils) \n    return {\n        type: GET_ALL_PROFILS,\n        payload: profils\n}\n}\nexport const delCartOnStart = () => {\n    return {\n        type:DEL_CART_ON_START\n    }\n}","export  const  TOGGLE_CART_HIDDEN = 'TOGGLE_CART_HIDDEN'\nexport  const ADD_ITEM = 'ADD_ITEM'\nexport  const REMOVE_ITEM = 'REMOVE_ITEM'\nexport  const CLEAR_ITEM_FROM_CART = 'CLEAR_ITEM_FROM_CART' \nexport  const CLEAR_CART = 'CLEAR_CART' \n\n\nexport const toggleCartHidden = () => ({\n  type:TOGGLE_CART_HIDDEN\n});\n\nexport const addItem = item => ({\n  type: ADD_ITEM,\n  payload: item\n});\n\nexport const removeItem = item => ({\n  type: REMOVE_ITEM,\n  payload: item\n});\n\nexport const clearItemFromCart = item => ({\n  type: CLEAR_ITEM_FROM_CART,\n  payload: item\n});\n  \nexport const clearCart = () => ({\n  type: CLEAR_CART\n})","import { createSelector } from 'reselect';\n\nconst selectCart = state => state.cart;\n\nexport const selectCartItems = createSelector(\n  [selectCart],\n  cart => cart.cartItems\n);\n \nexport const selectCartHidden = createSelector(\n  [selectCart],\n  cart => cart.hidden\n);\n\nexport const selectCartItemsCount = createSelector(\n  [selectCartItems],\n  cartItems =>\n    cartItems.reduce(\n      (accumalatedQuantity, cartItem) =>\n        accumalatedQuantity + cartItem.quantity,\n      0\n    )\n);\n\nexport const selectCartTotal = createSelector(\n  [selectCartItems],\n  cartItems =>\n    cartItems.reduce(\n      (accumalatedQuantity, cartItem) =>\n        accumalatedQuantity + cartItem.quantity * cartItem.price,\n      0\n    )\n);\n","/**\n * fond bouton \nexport  */\nexport const blue1 = 'rgb(128, 223, 255)';\nexport const blue2 = 'rgb(153, 214, 255)';\nexport const blue3 = 'rgb(26, 198, 255)';\nexport const blue4 =  'rgb(0, 153, 255)';\nexport const blue41 =  'rgb(0, 15, 26)';\n\nexport const blanc = 'rgb(242, 242, 242)';\n\nexport const green1 = 'rgb(173, 235, 173)';\nexport const green2 = 'rgb(179, 255, 153)';\nexport const green3 = 'rgb(128, 255, 170)';\nexport const green4 = 'rgb(0, 153, 0)';\nexport const green51 = '#AA0'; \n\nexport const orange1 ='rgb(255, 187, 153)';\nexport const orange2 = 'rgb(255, 102, 26)'; \nexport const red1 ='rgb(255, 153, 153)';\nexport const red2 = 'rgb(204, 41, 0)';\nexport const redorang = '#A50'; \n\nexport const textVert = ' rgb(0, 77, 0)';\nexport const textBlue = 'rgb(0, 38, 51)';\nexport const textBlack = '#222';\nexport const textBlanc = 'rgb(230, 255, 255)';\n\nexport const maxWidth =\"1100px\"\n\n/**\n * logo\n */\nexport const tete = orange1;\nexport const cor = red1;\nexport const yad = green2;\nexport const point = redorang;\n/**forms */\nexport const subText = green1;\nexport const mainText = textBlue;\n\n/**\n * Buttons\n */\nexport const btnV = green2;\nexport const btnB = blue3;\nexport const btnInvert = blanc;\nexport const btnGgl = blue4;\n/**\n * logo\n */\nexport const logoB = '#08F';\nexport const logV = '#AFA'","import styled, {css} from 'styled-components';\nimport { blue1, green4, blue2 } from './../variables'\n\nexport const CartContainer = styled.div`\n  width: 5rem;\n  height: 5rem;\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n`;\n\nexport const ShoppingIcon = styled.div`\n  position:absolute;\n  font-size: 2rem;\n  color:${blue1};\n  `;\n\nexport const ItemCountContainer = styled.span`\n  position: absolute;\n  font-size: 1.5rem;\n  top:1px;\n  font-weight: bold;\n  text-align:center;\n  color:${blue2};\n`;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport { toggleCartHidden } from '../../store/actions/cart';\nimport { selectCartItemsCount } from '../../store/selectors/cart';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faShoppingCart } from '@fortawesome/free-solid-svg-icons'\nimport {\n  CartContainer,\n  ShoppingIcon,\n  ItemCountContainer\n} from './cart-icon.styled';\n\nconst CartIcon = ({ toggleCartHidden, itemCount }) => (\n  <CartContainer onClick={toggleCartHidden}>\n    <ShoppingIcon>\n      <FontAwesomeIcon className=\"shoppingIcon\" icon={faShoppingCart} />\n    </ShoppingIcon>\n    <ItemCountContainer>{itemCount}</ItemCountContainer>\n  </CartContainer>\n);\n\nconst mapDispatchToProps = dispatch => ({\n  toggleCartHidden: () => dispatch(toggleCartHidden())\n});\n\nconst mapStateToProps = createStructuredSelector({\n  itemCount: selectCartItemsCount,\n  toggleCartHidden: toggleCartHidden\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CartIcon);\n","import styled from 'styled-components';\n\nexport const CartItemContainer = styled.div`\n  width: 100%;\n  display: flex;\n  height: 80px;\n  margin-bottom: 15px;\n`;\n\nexport const CartItemImage = styled.img`\n  width: 30%;\n`;\n\nexport const ItemDetailsContainer = styled.div`\n  width: 70%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: center;\n  padding: 10px 20px;\n`;\n","import React from 'react';\n\nimport {\n  CartItemContainer,\n  ItemDetailsContainer,\n  CartItemImage\n} from './cart-item.styled';\n\nconst CartItem = ({ item: { imageUrl, price, name, quantity } }) => (\n  <CartItemContainer>\n    <CartItemImage src={imageUrl} alt='item' />\n    <ItemDetailsContainer>\n      <span>{name}</span>\n      <span>\n        {quantity} x ${price}\n      </span>\n    </ItemDetailsContainer>\n  </CartItemContainer>\n);\n\nexport default CartItem;\n","import styled, { css } from 'styled-components';\nimport { blue1, green1, blue4, green3,btnGgl, btnV, btnB, btnInvert, textBlue, textBlack, blanc } from './../variables'\nimport {Link} from 'react-router-dom'\n\nconst buttonStyles = css`\n  &:hover {\n    background-color: ${blue4};\n    color: ${blanc};\n    \n  }\n`;\n\nconst invertedButtonStyles = css`\n  background-color: white;\n  color: black;\n  border: 1px solid black;\n\n  &:hover {\n    background-color: black;\n    color: white;\n    border: none;\n  }\n`;\n\nconst googleSignInStyles = css`\n  background-color: ${btnGgl};\n  color: ${btnInvert};\n\n`;\n\nconst getButtonStyles = props => {\n  if (props.isGoogleSignIn) {\n    return googleSignInStyles;\n  }\n\n  return props.inverted ? invertedButtonStyles : buttonStyles;\n};\n\nconst buttonCommon = css`\nmin-width: 165px;\n  width: 165px;\n  height: 50px;\n  text-decoration:none;\n  color:${textBlue};\n  letter-spacing: 0.5px;\n  line-height: 50px;\n  padding: 0 5px 0 5px;\n  font-size: 15px;\n  text-transform: uppercase;\n  font-weight: bolder;\n  cursor: pointer;\n  display: flex;\n  border-radius:3px;\n  justify-content: center;\n`\nexport const CustomButtonContainer = styled.button`\n  ${buttonCommon}\n  background-color: ${green1};\n  \n  ${getButtonStyles}\n`;\nexport const CustomLinkContainer = styled(Link)`\n  \n  ${buttonCommon}\n  background-color:${blue1};\n  \n  ${getButtonStyles}\n`;\n\nexport const CustomInputContainer = styled.input`\nmin-width: 165px;\nwidth: 165px;\nheight: 50px;\ncolor:${textBlack} ;\nletter-spacing: 0.5px;\nline-height: 50px;\npadding: 0 5px 0 5px;\nfont-size: 15px;\ntext-transform: uppercase;\nfont-family: 'Open Sans Condensed';\nfont-weight: bolder;\ncursor: pointer;\ndisplay: flex;\nbackground-color:${btnV};\njustify-content: center;\n\n${getButtonStyles}\n`;","import React from 'react';\n\nimport { CustomInputContainer, CustomButtonContainer, CustomLinkContainer } from './CustomButton.styled';\n\nconst CustomButton = ({ children, ...props }) => {\n  if(props.link) {\n    return <CustomLinkContainer {...props}>{children}</CustomLinkContainer>\n\n  } else if(props.input) {\n    return <CustomInputContainer {...props} ></CustomInputContainer>\n\n  }\n  return <CustomButtonContainer {...props}>{children}</CustomButtonContainer>\n\n}\n\nexport default CustomButton;\n","import styled from 'styled-components';\nimport CustomButton from '../CustomButton/CustomButton';\n\nexport const CartDropdownContainer = styled.div`\n  position: absolute;\n  width: 240px;\n  height: 340px;\n  display: flex;\n  flex-direction: column;\n  padding: 20px;\n  border: 1px solid black;\n  background-color: white;\n  top: 90px;\n  right: 40px;\n  z-index: 5;\n`;\n\nexport const CartDropdownButton = styled(CustomButton)`\n  margin-top: auto;\n  font-size:10px;\n`;\n\nexport const EmptyMessageContainer = styled.span`\n  font-size: 18px;\n  margin: 50px auto;\n`;\n\nexport const CartItemsContainer = styled.div`\n  height: 240px;\n  display: flex;\n  flex-direction: column;\n  overflow: scroll;\n`;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { withRouter } from 'react-router-dom';\nimport CartItem from '../Cart-Item/Cart-Item';\nimport { selectCartItems } from '../../store/selectors/cart';\nimport { toggleCartHidden } from '../../store/actions/cart';\n\nimport {\n  CartDropdownContainer,\n  CartDropdownButton,\n  EmptyMessageContainer,\n  CartItemsContainer\n} from './cart.dropdown.styled';\n\nconst CartDropdown = ({ cartItems, history, dispatch }) => (\n  <CartDropdownContainer>\n    <CartItemsContainer>\n      {cartItems.length ? (\n        cartItems.map(cartItem => (\n          <CartItem key={cartItem.id} item={cartItem} />\n        ))\n      ) : (\n        <EmptyMessageContainer>Your cart is empty</EmptyMessageContainer>\n      )}\n    </CartItemsContainer>\n    <CartDropdownButton\n      onClick={() => {\n        history.push('/checkout');\n        dispatch(toggleCartHidden());\n      }}\n    >\n      GO TO CHECKOUT\n    </CartDropdownButton>\n  </CartDropdownContainer>\n);\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n});\n\nexport default withRouter(connect(mapStateToProps)(CartDropdown));\n","import styled, {keyframes, css}  from 'styled-components'\nimport {Link} from 'react-router-dom'\nimport {green4, textBlanc, tete, yad, point,cor, textBlack, bleuDense,green2} from '../variables'\nimport { faTextWidth } from '@fortawesome/free-solid-svg-icons'\n\nconst animate = keyframes`\n  0% {\n    filter:hue-rotate(0deg) blur(50px);\n  }\n\n  100% {\n    filter:hue-rotate(360deg) blur(50px)\n    }\n`;\n\nexport const Contain = styled.div `\n  width:117px;\n  background:#aaa;\n  height:117px;\n  margin:5px;\n  position:relative;\n  display:flex;\n  transform:rotate(45deg);\n\n  transition: 2s transform;\n  flex-direction:column;\n  justify-content:center;\n  align-items:center;\n\n  &:hover {\n      transform: translate(2%,2%)\n  }\n  &::after {\n    width:117px;\n  background:#aaa;\n  height:117px;\n \n      position: absolute;\n      left: 2px;\n      top: 2px;\n      background:#aaa;\n      opacity:.4;    \n      transform:rotate(75deg);\n      transition: 2s;\n      z-index:2\n    }\n\n    &::before {\n      background:#aaa;\n      opacity:.2;\n      position: absolute;\n      left: 4px;\n      top: 4px;\n      transform:rotate(25deg);\n      transition: 2s;    \n      z-index:10\n    }\n  @media screen and (max-width: 800px){\n    margin-bottom: 20px;\n    width:90px;\n    background:#aaa;\n    height:90px;\n    margin:5px;\n    padding:0\n \n  } \n\n  @media screen and (max-width: 600px){\n    margin-bottom: 20px;\n    width:50px;\n    background:#aaa;\n    height:50px;\n    margin:5px;\n    padding:0\n } \n`\nexport const Cursor = styled.div`\nposition: absolute;\nwidth: 400px;\nheight: 400px;\ntop:0;\nleft:0; \nbackground:#0f0;\nborder-radius:50%;\ntransform: translate(-50%, -50%); \n\n\n`\nexport const Hexagone= styled.div`\n    position: relative;\n    animation: ${animate} 4s linear infinite;\n    font-size: 1.4rem;\n    background-color: #0f0;\n    width:100px;\n    height:100px;\n    z-index:10;\n     clip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%); \ntransform:rotate(-45deg);\n   \n     /* clip-path: polygon(25% 0%, 75% 0%, 100% 50%, 75% 100%, 25% 100%, 0% 50%); */\n     /* clip-path: polygon(30% 0%, 70% 0%, 100% 30%, 100% 70%, 70% 100%, 30% 100%, 0% 70%, 0% 30%);\n     */\n   /*  clip-path: polygon(50% 0%, 80% 10%, 100% 35%, 100% 70%, 80% 90%, 50% 100%, 20% 90%, 0% 70%, 0% 35%, 20% 10%);\n    */  \n     `\nexport const NameSite = styled(Link)`\n    box-sizing:border-box;\n    line-height:2rem;\n    padding:0;\n    text-decoration:none;\n    text-transform: uppercase;\n    cursor:pointer;\n    margin-top:3rem;\n    align-self:center;  \n    font-size:3rem;\n    transform: rotate(-45deg);\n    color: ${green2} !important;\n    &::first-letter {\n      color:${green4}\n    }\n  @media screen and (max-width: 800px){\n    margin-bottom: 20px;\n    width:90px;\n    background:#aaa;\n    height:90px;\n    margin:5px;\n    padding:0\n \n  } \n    \n`\n\nconst bat = keyframes`\n  from {\n    transform: scale(1.5) rotate(45deg);\n}\n\n  to {\n    transform: scale(1) rotate(45deg);\n}\n`;\n","import React from 'react'\nimport {TeteLogo,Contain, Hexagone, CorLogo,YadLogo, NameSite,Point} from './logo.styled'\n\n// google, inverted, handleClick\nexport default function LogoBox({ children, ...props}) {\n    return (\n        <Contain>\n                <NameSite to=\"/\"> lami1a</NameSite>\n        \n        </Contain>\n    )\n}\n","import { createSelector } from 'reselect';\n\nconst selectProfil = state => state.profil;\n\nexport const selectCurrentProfil = createSelector(\n  [selectProfil],\n  profil => profil.currentProfil\n);\nexport const selectErrorProfil = createSelector(\n  [selectProfil],\n  profil => profil.error\n);\n\n\nexport const selectProfilCollection = profilId => createSelector(\n  [selectProfil],\n  profil => profil.collection\n)\n\nexport const authenticated = () => createSelector(\n  [selectProfil],\n  profil => profil.authenticated\n)\n\nexport const selectCurrentCollection = createSelector(\n  [selectProfil],\n  profil => profil.collection\n);\n\nexport const selectCurrentProducts = createSelector(\n  [selectProfil],\n  profil => profil.products\n);\nexport const selectCurrentMessages = createSelector(\n  [selectProfil],\n  profil => profil.messages\n);\n\nexport const selectCurrentUsers = createSelector(\n  [selectProfil],\n  profil => profil.users\n);\n","\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport {green1, green2, blanc, green51, green4, btnInvert} from './../variables'\n\nexport const HeaderContainer = styled.div`\n  height: 70px;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  /* margin-bottom: 25px; */\n  @media screen and (max-width: 800px){\n    margin-bottom: 20px;\n    flex-wrap:wrap\n  }\n\n  @media screen and (max-width:600px) {\n\tfont-weight: normal;\n  \tfont-size:1.2rem;\n \t}\n\n`;\n\nexport const LogoContainer = styled.div`\n  height: 100%; \n  padding: 0 auto;\n  cursor: pointer;\n  background-color:white;\n`;\n\nexport const OptionsContainer = styled.div`\n  width: 75%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n`;\n\nexport const OptionLink = styled(Link)`\n  padding: 10px 10px;\n  font-weight: lighter;\n  font-size: 1.5rem;\n  color:${green4};\n  border:1px solid ${green2};\n  text-decoration:none;\n  margin-left: 1rem;\n  transform: scale(1.1);\n\ttransition: transform 6s cubic-bezier(0.25, 0.45, 0.45, 0.95);\n  &:hover {\n\t  cursor: pointer;\n    box-shadow:0px 0px 2px ${green1};\n    opacity: 0.9;\n    background-color:${blanc};\n    }\n\n    @media screen and (max-width:800px) {\n      padding: 5px 5px;\n      font-size: 1.3rem;\n      margin-left: .7rem;\n  }\n  @media screen and (max-width:600px) {\n  \tpadding: 3px 3px;\n    font-size: 1rem;\n    margin-left: .7rem;\n  \t}    \n`;\n\nexport const OptionLinkHide = styled(Link)`\n  padding: 10px 15px;\n  cursor: pointer;\n  display:none;\n  font-weight: lighter;\n  font-size: 1.5rem;\n  color:${green4};\n  text-decoration:none;\n`;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter} from 'react-router-dom'\nimport { compose } from 'redux'\nimport CartIcon from '../Cart-Icon/Cart-Icon';\nimport CartDropdown from '../Cart-Dropdown/Cart-Dropdown';\nimport { createStructuredSelector } from 'reselect'\nimport LogoBox from './../Logo/Logo'\nimport { selectCurrentProfil } from '../../store/selectors/profil';\nimport { selectCartHidden } from '../../store/selectors/cart';\nimport {isEmpty} from '../../util/validators'\nimport { logOutStart } from './../../store/actions/profil'\nimport {\n  HeaderContainer,\n  LogoContainer,\n  OptionsContainer,\n  OptionLink,\n} from './header-styled';\nconst Header = ({ currentProfil, hidden, logOutStart }) => {\n    return (\n      <HeaderContainer>\n        <LogoContainer to='/'>\n          <LogoBox className='logo' />\n        </LogoContainer>\n        <OptionsContainer>\n          { (!isEmpty(currentProfil)) ? (\n           <>\n           <OptionLink to='/profil'>Profil</OptionLink>\n           <OptionLink to='/collection'>Collection</OptionLink>\n           <OptionLink to='/messages'>Messages</OptionLink>\n          \n        </>): (<></>)\n          }<OptionLink to='/shop'>SHOP</OptionLink>\n          <OptionLink to='/contact'>CONTACT</OptionLink>\n          { \n           !isEmpty(currentProfil)  ? (\n           \n          <OptionLink to='/' onClick={logOutStart}>\n              SIGN OUT\n          </OptionLink>\n          \n          ): (\n              <OptionLink to='/signup'>SIGN in/up </OptionLink>\n            )}\n          <CartIcon />\n        </OptionsContainer>\n        {hidden ? null : <CartDropdown />}\n        \n      </HeaderContainer>\n    );\n\n  }\n const mapStateToProps = createStructuredSelector({\n  currentProfil: selectCurrentProfil,\n  hidden: selectCartHidden\n});\nconst mapDispatchToProps = (dispatch) => ({\n  logOutStart : () => dispatch(logOutStart())\n})\nconst HeaderContain = compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withRouter\n)(Header)\n\nexport default HeaderContain\n","import {\n  createSelector\n} from 'reselect';\nimport slug from 'slug'\n\nconst selectedSelection = state => state.selection;\n\nexport const selectSelectedSelections = createSelector(\n  [selectedSelection],\n  selection => selection.selections\n)\nexport const selectCollectionForOverview = selectionId => createSelector(\n  [selectSelectedSelections],\n  selections => {\n    console.log(selections[selectionId])\n    return (selections ? selections[selectionId]: [])\n  }\n)\nexport const selectSelections = createSelector(\n  [selectSelectedSelections],\n  selections =>  {\n   if(selections){\n  return Object.entries(selections).map(([key, value]) => {\n   return ({selection:key, collection:value})  \n  })\n  }\n  else return []\n  }\n)\nexport const selectSelectionCollections = (selectionId) => createSelector(\n  [selectSelections],\n  selections => { \n    const selection = selections.filter(selection => {\n      return selection['collection']['title'] === selectionId\n      \n    }\n    )\n  const collectionsObject =  selection[0]['collection']['collections']\n  return Object.keys(collectionsObject).map((key) => {\n    return collectionsObject[key]\n  } )\n}\n)\nexport const selectIsLoading = createSelector(\n  [selectSelectedSelections],\n  selections => {\n    return false\n  }\n)\n\nexport const selectBooks =  createSelector(\n  [selectSelectedSelections],\n  selections => {\n    if(!selections || selections.length < 1) return []\n    else{\n\n      //console.log({selections})\n      const {books  } = selections\n       console.log({selections})\n        const collectionBooks = books['collections']\n        const  BookKeys = Object.keys(collectionBooks)\n             const collections = BookKeys.map((key, val) => {\n                return {key,items:collectionBooks[key]}\n              })  \n            let booksArray = []\n           const prod =  collections.map((elm, i) => {\n             return elm['items']['items']      }\n        )\n        prod.forEach(elm => {\n          booksArray= [...booksArray,...elm]\n        }) \n        return booksArray\n    }\n})\n   \nexport const selectProducts =  createSelector(\n  [selectSelectedSelections], \n  selections => {\n    if(!selections || selections.length < 1) return []\n    else {\n      const {products} = selections\n      //console.log({products})\n    const collectionproducts = products['collections']\n            \n            const  BookKeys = Object.keys(collectionproducts)\n             const collections = BookKeys.map((key, val) => {\n                return {key,items:collectionproducts[key]}\n              })  \n            let productsArray = []\n           const prod =  collections.map((elm, i) => {\n             return elm['items']['items']      }\n        )\n        prod.forEach(elm => {\n          productsArray= [...productsArray,...elm]\n        }) \n        return productsArray\n    }\n})  \nexport const selectProduct = (term) => createSelector(\n  [selectProducts],\n  products => {\n    const product = products.filter((prod) => {\n        return prod['nameSlug'] === term\n      })\n      return product\n})    \n    \nexport const selectSelectionsForShopPreview = collectionId => createSelector(\n  [selectSelections],\n  selections => {\n      const productDeCollection = new Set()\n     Object.keys(selections).map(selection => {\n        const collections = Object.keys(selection['collections'])\n          if(collectionId in collections) {\n            productDeCollection.add(selection['collections'][collectionId])\n          }\n    })\n    return productDeCollection\n  }\n)","import styled from 'styled-components';\nimport {textBlack, textBlue, green1, green2, green4, blanc,maxWidth } from '../variables'\n\nexport const SelectionItemContainer = styled.div`\n\theight: 25rem;\n\twidth:25rem;\n\tflex: 1 1 auto;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: space-evenly;\n\tborder: 1px solid ${green1};\n\toverflow: hidden;\n\tborder-radius:1rem;\n\t&:hover {\n\t\tcursor: pointer;\n\t\t& .background-image {\n\t\t\ttransform: scale(1.1);\n\t\t\ttransition: transform 6s cubic-bezier(0.25, 0.45, 0.45, 0.95);\n\t\t}\n\t\t& .content {\n\t\t\topacity: 0.5;\n\t\t\tcolor:${textBlack}\n\t\t}\n\t\t&:first-child {\n\t\t}\n\t\t  \tmargin-right: .5rem;\n\t\t}\n\t\t&:last-child {\n\t\t  margin-left: .5rem;\n\t\t}\n\t@media screen and (max-width:800px) {\n        padding: 0 auto;\n        margin:2rem auto ;\n\t\twidth:20rem;\n\t}\n  \t@media screen and (max-width:617px) {\n        padding: 0 auto;\n        margin:2rem auto ;\n\t\twidth:20rem;\n        flex-direction:column\n  \t}\n`;\nexport const BackgroundImageContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  background-size: cover;\n  background-position: center, center;\n  background-image: ${({ imageUrl }) => `url('${imageUrl}')`};\n`;\n\nexport const ContentContainer = styled.div`\n  height: 20rem;\n  width: 20rem;\n  padding: 0 auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  border: 1px solid ${ green1 };\n  border-radius:5px;\n  background-color: ${blanc};\n  opacity: 0.8;\n  position: absolute;\n\t&:hover {\n\t\tcolor:${textBlue}\n\t}\n\t@media screen and (max-width:800px) {\n        padding: 0 auto;\n        margin:2rem auto ;\n\t\t    width:10rem;\n\t\t    height:10rem;\n\t}\n  @media screen and (max-width:600px) {\n        padding: 0 auto;\n        margin:2rem auto ;\n\t\twidth:7rem;\n\t\n\t}/* \ttransform:rotate(-45deg);\t\t\n*/\n`;\nexport const ContentTitle = styled.span`\n  font-weight: bold;\n  margin-bottom: 6px;\n  font-size:2rem;\n color: #4a4a4a;\n @media screen and (max-width:800px) {\n\tfont-weight: normal;\n  \tmargin-bottom: 6px;\n  \tfont-size:1.5rem;\n\t}\n@media screen and (max-width:600px) {\n\tfont-weight: normal;\n  \tfont-size:1.2rem;\n \n  \t}\n`;\nexport const ContentSubtitle = styled.span`\n  font-weight: lighter;\n  font-size: 1.5rem;\n  color:${green4};\n  @media screen and (max-width:800px) {\n\tfont-size: 1.3rem;\n \n\t}\n  \t@media screen and (max-width:600px) {\n\t\tfont-size: 1.1rem;\n \n  \t}\n`\n\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport {\n  SelectionItemContainer,\n  BackgroundImageContainer,\n  ContentContainer,\n  ContentTitle,\n  ContentSubtitle\n} from './selection-item-styled';\n\nconst SelectionItem = ({ title, imageUrl, size, history, routeName, linkUrl, match }) => {\n\n  const imageUrlrep = `./assets${imageUrl}`\n  return <SelectionItemContainer id=\"SelectionItemContainer\" onClick={() => history.push(`shop/${routeName}`)}>\n            <BackgroundImageContainer imageUrl={imageUrlrep} className=\"background-image\" />\n            <ContentContainer >\n              <ContentTitle className=\"content\">{title.toUpperCase()}</ContentTitle>\n              <ContentSubtitle > DISCOVER </ContentSubtitle>\n            </ContentContainer>\n          </SelectionItemContainer>\n};\n\nexport default withRouter(SelectionItem);\n","import styled from 'styled-components';\n\nexport const SelectionMenuContainer = styled.div`\n  height: 100%;\n  width:100%;\n  display: flex;\n  justify-content: space-between;\n  flex:0;\n  flex-flow:wrap;\n  margin-top:2rem;\n  @media screen and (max-width:800px) {\n        padding: 0 auto;\n        margin:2rem auto ;\n\t  width:40rem;\n\t}\n  @media screen and (max-width:600px) {\n        padding: 0 auto;\n        margin:1rem auto ;\n\t  width:20rem;\n        flex-direction:column\n  \t}\n   \n\n  `;\n","import { apifetchSelections, apifetchCollections} from './../api'\nimport { apiShopProducts } from '../api/selections'\n\n\n\nexport const FETCH_SELECTIONS_START = 'FETCH_SELECTIONS_START'\nexport const FETCH_SELECTIONS_SUCCESS = 'FETCH_SELECTIONS_SUCCESS'\nexport const FETCH_SELECTIONS_FAIL = 'FETCH_SELECTIONS_FAIL'\n\nexport const FETCH_COLLECTIONS_START = 'FETCH_COLLECTIONS_START'\nexport const FETCH_COLLECTIONS_SUCCESS = 'FETCH_COLLECTIONS_SUCCESS'\nexport const FETCH_COLLECTIONS_FAIL = 'FETCH_COLLECTIONS_FAIL'\n\nexport const FETCH_PRODUCTS_START = 'FETCH_PRODUCTS_START'\nexport const FETCH_PRODUCTS_SUCCESS = 'FETCH_PRODUCTS_SUCCESS'\nexport const FETCH_PRODUCTS_FAIL = 'FETCH_PRODUCTS_FAIL'\n\nexport const REMOVE_COLLECTION_START = 'REMOVE_COLLECTION_START'\nexport const REMOVE_COLLECTION_SUCCESS = 'REMOVE_COLLECTION_SUCCESS'\nexport const REMOVE_COLLECTION_FAIL = 'REMOVE_COLLECTION_FAIL'\n\nexport const REMOVE_PRODUCT_START = 'REMOVE_PRODUCT_START'\nexport const REMOVE_PRODUCT_SUCCESS = 'REMOVE_PRODUCT_SUCCESS'\nexport const REMOVE_PRODUCT_FAIL = 'REMOVE_PRODUCT_FAIL'\n\n\nexport const UPDATE_PRODUCT_START = 'UPDATE_PRODUCT_START'\nexport const UPDATE_PRODUCT_SUCCESS = 'UPDATE_PRODUCT_SUCCESS'\nexport const UPDATE_PRODUCT_FAIL = 'UPDATE_PRODUCT_FAIL'\n\nexport const REMOVE_SELECTION_START = 'REMOVE_SELECTION_START'\nexport const REMOVE_SELECTION_SUCCESS = 'REMOVE_SELECTION_SUCCESS'\nexport const REMOVE_SELECTION_FAIL = 'REMOVE_SELECTION_FAIL'\n\nexport const ADD_COLLECTION_START = 'ADD_COLLECTION_START'\nexport const ADD_COLLECTION_SUCCESS = 'ADD_COLLECTION_SUCCESS'\nexport const ADD_COLLECTION_FAIL = 'ADD_COLLECTION_FAIL'\n\nexport const ADD_PRODUCT_START = 'ADD_PRODUCT_START'\nexport const ADD_PRODUCT_SUCCESS = 'ADD_PRODUCT_SUCCESS'\nexport const ADD_PRODUCT_FAIL = 'ADD_PRODUCT_FAIL'\n\nexport const ADD_SELECTION_START = 'ADD_SELECTION_START'\nexport const ADD_SELECTION_SUCCESS = 'ADD_SELECTION_SUCCESS'\nexport const ADD_SELECTION_FAIL = 'ADD_SELECTION_FAIL'\n\nexport const fetchSelectionsStart =  () => ({type: FETCH_SELECTIONS_START})\n\n\nexport const fetchSelectionsSuccess =  (selections) => {\n    return {\n                type: FETCH_SELECTIONS_SUCCESS,\n                payload:selections,\n                errors: null\n            }\n    }\nexport const fetchSelectionsFail =  () => {\n    return {\n        type: FETCH_SELECTIONS_FAIL,\n        errors: 'fetch selection FAil'\n    }\n}\nexport const fetchCollectionsSuccess = async () => {\n        try {\n            const collections = await apifetchCollections()\n            return {\n                type: FETCH_COLLECTIONS_SUCCESS,\n                payload: collections,\n                errors: null\n            }\n        } catch (err) {\n            return {\n                type: FETCH_COLLECTIONS_FAIL,\n                payload: {},\n                errors: err\n            }\n        }\n\n    }\n\nexport const fetchCollectionsFail =  () => {\n        return {\n            type: FETCH_COLLECTIONS_FAIL,\n            errors: 'Fetch FAil'\n        }\n    }\nexport const fetchProductsSuccess = (products) => {\n       \n    return {\n            type: FETCH_PRODUCTS_SUCCESS,\n            payload: products,\n            errors: null\n        \n}\n}\nexport const fetchProductsStart = () => {\n        return {\n            type:FETCH_PRODUCTS_START\n        }\n}\nexport const fetchProductsFail = () => {\n    return {\n        type: FETCH_PRODUCTS_FAIL,\n        errors: 'fetc products fail'\n    }\n}\nexport const updateProductSuccess = async (products) => {\n    console.log({products})   \n    return {\n            type: UPDATE_PRODUCT_SUCCESS,\n            payload: {products},\n            errors: null\n        \n}\n}\nexport const updateProductStart = () => {\n        return {\n            type:UPDATE_PRODUCT_START\n        }\n}\nexport const updateProductFail = () => {\n    return {\n        type: UPDATE_PRODUCT_FAIL,\n        errors: 'fetc products fail'\n    }\n}\n\nexport const addSelectionSuccess = (selection) => {\n    return {\n        type: ADD_SELECTION_SUCCESS,\n        payload: selection\n    }\n}\nexport const addSelectionFail = () => {\n    return {\n        type: ADD_SELECTION_FAIL,\n        error: 'cant add selection'\n    }\n}\n\nexport const addCollectionSuccess = (collection) => {\n    return {\n        type: ADD_COLLECTION_SUCCESS,\n        payload: collection\n\n    }\n}\nexport const addCollectionFail = () => {\n    return {\n        type: ADD_COLLECTION_FAIL,\n        error: 'add collection Fail'\n   }\n}\n\n//ADD PRODUCT \nexport const addProductSuccess = (product) => {\n    return {\n        type: ADD_PRODUCT_SUCCESS,\n        payload: product\n\n    }\n}\nexport const addProductStart =({uid,product}) => {\n    console.log({productToAdd:product})\n    return {\n        type:ADD_PRODUCT_START,\n        payload:{uid,product}\n    }\n}\nexport const addProductFail = () => {\n    return {\n        type: ADD_PRODUCT_FAIL,\n        error: 'add product Fail'\n   }\n}\n\n\nexport const removeProductSuccess = (product) => {\n    return {\n        type: REMOVE_PRODUCT_SUCCESS,\n        payload: product\n\n    }\n}\nexport const removeProductFail = () => {\n    return {\n        type: REMOVE_PRODUCT_FAIL,\n        error: 'remove product Fail'\n   }\n}\n\n\n\nexport const removeCollectionSuccess = (collection) => {\n    return {\n        type: REMOVE_COLLECTION_SUCCESS,\n        payload: collection\n\n    }\n}\nexport const removeCollectionFail = () => {\n    return {\n        type: REMOVE_COLLECTION_FAIL,\n        error: 'add collection Fail'\n   }\n}\n\nexport const removeSelectionSuccess = (selection) => {\n    return {\n        type: REMOVE_SELECTION_SUCCESS,\n        payload: selection\n\n    }\n}\nexport const removeSelectionFail = () => {\n    return {\n        type: REMOVE_SELECTION_FAIL,\n        error: 'add collection Fail'\n   }\n}","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { selectSelections} from './../../store/selectors/selection';\nimport SelectionItem from '../SelectionItem/Selection-Item';\nimport { SelectionMenuContainer } from './selection.styled';\nimport { fetchSelectionsStart } from './../../store/actions/selection'\n\nconst Selection = ({ selections, fetchSelections }) => {\n\n  console.log({selections})\n  const menus = selections.map((selection) => {\n    console.log({selection})\n    const {id , ...otherProps} = selection['collection'];\n        return <SelectionItem key={id} {...otherProps}></SelectionItem>\n    })\n    \n  return (\n      <SelectionMenuContainer>\n        { menus }\n      </SelectionMenuContainer>\n    )  \n    \n}\nconst mapStateToProps = createStructuredSelector({\n  selections: selectSelections \n})\nconst mapDispatchToProps = (dispatch) => ({\n  fetchSelections:() => dispatch(fetchSelectionsStart())\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Selection);\n","import styled from 'styled-components'\nimport {maxWidth, green1} from '../../components/variables'\nexport const AboutContainer = styled.div`\n    max-width: ${maxWidth};\n    margin: 0 auto;\n    width:100%;\n    background-color: ${green1};\n    padding: 4rem 0;\n \n`","import React from 'react'\n\nimport {AboutContainer} from './about-styled'\nconst about = () => {\n    return (\n        \n        <AboutContainer>\n        About US Liil \n        mood \n        stat of creation \n        fun \n        society\n\n        </AboutContainer>\n    )\n}\n\nexport default about\n","import React from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\nimport axios from 'axios'\n\nconst StripeCheckoutButton = ({ price }) => {\n   require('dotenv').config()\n  \n  const priceForStripe = price * 10;\n  const publishableKey = process.env.PUBLIC_KEY;\n\n  const onToken = token => {\n    axios.post({\n      url:'payment',\n      method:'post',\n      data:{\n        amount:priceForStripe,\n        token\n      }\n   }).then(response => {\n     alert('payment successful')\n   }).catch(error => {\n    console.log(JSON.parse(error))\n     alert('Payment error! its a probleme with credit card');\n   })\n  };\n\n  return (\n    <StripeCheckout\n      label='Pay'\n      name='lami1a com.'\n      billingAddress\n      shippingAddress\n      //image='https://svgshare.com/i/CUz.svg'\n      description={`Your total is €${price}`}\n      currency=\"EUR\"\n      amount={priceForStripe}\n      panelLabel='Pay Now'\n      token={onToken}\n      stripeKey={publishableKey}\n    />\n  );\n};\n\nexport default StripeCheckoutButton;\n","import styled from 'styled-components';\n\nexport const CheckoutItemContainer = styled.div`\n  width: 100%;\n  display: flex;\n  min-height: 100px;\n  border-bottom: 1px solid darkgrey;\n  padding: 15px 0;\n  font-size: 20px;\n  align-items: center;\n`;\n\nexport const ImageContainer = styled.div`\n  width: 23%;\n  padding-right: 15px;\n\n  img {\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nexport const TextContainer = styled.span`\n  width: 23%;\n`;\n\nexport const QuantityContainer = styled(TextContainer)`\n  display: flex;\n\n  span {\n    margin: 0 10px;\n  }\n\n  div {\n    cursor: pointer;\n  }\n`;\n\nexport const RemoveButtonContainer = styled.div`\n  padding-left: 12px;\n  cursor: pointer;\n`;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport {\n  clearItemFromCart,\n  addItem,\n  removeItem\n} from './../../store/actions/cart';\n\nimport {\n  CheckoutItemContainer,\n  ImageContainer,\n  TextContainer,\n  QuantityContainer,\n  RemoveButtonContainer\n} from './checkout.item.styled';\n\nconst CheckoutItem = ({ cartItem, clearItem, addItem, removeItem }) => {\n  const { name, imageUrl, price, quantity } = cartItem;\n  return (\n    <CheckoutItemContainer>\n      <ImageContainer>\n        <img src={imageUrl} alt='item' />\n      </ImageContainer>\n      <TextContainer>{name}</TextContainer>\n      <QuantityContainer>\n        <div onClick={() => removeItem(cartItem)}>&#10094;</div>\n        <span>{quantity}</span>\n        <div onClick={() => addItem(cartItem)}>&#10095;</div>\n      </QuantityContainer>\n      <TextContainer>{price}</TextContainer>\n      <RemoveButtonContainer onClick={() => clearItem(cartItem)}>\n        &#10005;\n      </RemoveButtonContainer>\n    </CheckoutItemContainer>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  clearItem: item => dispatch(clearItemFromCart(item)),\n  addItem: item => dispatch(addItem(item)),\n  removeItem: item => dispatch(removeItem(item))\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(CheckoutItem);\n","import styled from 'styled-components';\n\nexport const CheckoutPageContainer = styled.div`\n  width: 55%;\n  min-height: 90vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 50px auto 0;\n\n  button {\n    margin-left: auto;\n    margin-top: 50px;\n  }\n`;\n\nexport const CheckoutHeaderContainer = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  justify-content: space-between;\n  border-bottom: 1px solid darkgrey;\n`;\n\nexport const HeaderBlockContainer = styled.div`\n  text-transform: capitalize;\n  width: 23%;\n\n  &:last-child {\n    width: 8%;\n  }\n`;\n\nexport const TotalContainer = styled.div`\n  margin-top: 30px;\n  margin-left: auto;\n  font-size: 36px;\n`;\n\nexport const WarningContainer = styled.div`\n  text-align: center;\n  margin-top: 40px;\n  font-size: 24px;\n  color: red;\n`;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport StripeCheckoutButton from '../../components/Stripe-Button/Stripe-Button';\nimport CheckoutItem from './../../components/Checkout-Item/Checkout-Item';\n\nimport {\n  selectCartItems,\n  selectCartTotal\n} from '../../store/selectors/cart';\n\nimport {\n  CheckoutPageContainer,\n  CheckoutHeaderContainer,\n  HeaderBlockContainer,\n  TotalContainer,\n  WarningContainer\n} from './checkout.styled';\n\nconst CheckoutPage = ({ cartItems, total }) => (\n  <CheckoutPageContainer>\n    <CheckoutHeaderContainer>\n      <HeaderBlockContainer>\n        <span>Product</span>\n      </HeaderBlockContainer>\n      <HeaderBlockContainer>\n        <span>Description</span>\n      </HeaderBlockContainer>\n      <HeaderBlockContainer>\n        <span>Quantity</span>\n      </HeaderBlockContainer>\n      <HeaderBlockContainer>\n        <span>Price</span>\n      </HeaderBlockContainer>\n      <HeaderBlockContainer>\n        <span>Remove</span>\n      </HeaderBlockContainer>\n    </CheckoutHeaderContainer>\n    {cartItems.map(cartItem => (\n      <CheckoutItem key={cartItem.id} cartItem={cartItem} />\n    ))}\n    <TotalContainer>TOTAL: ${total}</TotalContainer>\n    <WarningContainer>\n      *test credit card for payments*\n      <br />\n      4242 4242 4242 4242 - Exp: 01/20 - CVV: 123\n    </WarningContainer>\n    <StripeCheckoutButton price={total} />\n  </CheckoutPageContainer>\n);\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems,\n  total: selectCartTotal\n});\n\nexport default connect(mapStateToProps)(CheckoutPage);\n","import styled from 'styled-components';\nimport CustomButton from '../CustomButton/CustomButton';\nimport {Link} from 'react-router-dom'\nimport {blue4} from './../variables'\nexport const CollectionItemContainer = styled.div`\n  width: 22vw;\n  display: flex;\n  flex-direction: column;\n  height: 250px;\n  \n  align-items: center;\n  position: relative;\n  &:hover {\n    .image {\n      opacity: 0.9;\n    }\n   button {\n      opacity: 0.85;\n      display: flex;\n    }\n  }\n`;\n\nexport const AddButton = styled(CustomButton)`\n  width: 80%;\n  opacity: 0.7;\n  position: absolute;\n  top: 255px;\n  display: none;\n`;\n\nexport const BackgroundImage = styled.div`\n  width: 100%;\n  height: 271px;\n  border-radius:1rem;\n  background-size: cover;\n  background-position: center;\n  margin-bottom: 2rem;\n  background-image: ${({ imageUrl }) => `url(${imageUrl})`};\n`;\n\nexport const CollectionFooterContainer = styled.div`\n  width: 100%;\n  height: 10%;\n  display: flex;\n  justify-content: space-evenly;\n  align-items:center;\n  font-size: 1.2rem;\n  color:${blue4};\n  margin-bottom:2rem;\n`;\n\nexport const NameContainer = styled.div`\n  display:inline-block;\n  margin-bottom: 15px;\n  \n`;\n\nexport const PriceContainer = styled.span`\n  \n  text-align: right;\n  margin-bottom: 15px;\n  text-decoration: none;\n`;\nexport const LinkProduct = styled(Link)`\n  width:100%;\n  height:100%;\n  opacity:0.8;\n  text-decoration: none;\n  margin-bottom:2rem;\n`","import React from 'react';\nimport { connect } from 'react-redux';\nimport { addItem } from '../../store/actions/cart';\nimport  { withRouter} from 'react-router-dom'\nimport { faStar} from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport {\n  CollectionItemContainer,\n  CollectionFooterContainer,\n  LinkProduct,\n  BackgroundImage,\n  NameContainer,\n  PriceContainer\n} from './collection-item.styled';\n\nconst CollectionItem = ({ product, match, history,urlName}) => {\n  const {  name,   imageUrl, price } = product;\n  //console.log(match)\n  \n  //console.log({match, history, collection})\n  return (\n    <CollectionItemContainer id=\"CollectionItemContainer\" onClick={() => history.push(`/products/${urlName}`)}>\n      <LinkProduct to={`/products/${urlName}`}>\n      <FontAwesomeIcon icon={faStar} />\n        <BackgroundImage className='image' imageUrl={`/assets${imageUrl}`} />\n        <CollectionFooterContainer id=\"CollectionFooterContainer\">\n          <NameContainer>{name}</NameContainer>\n          <PriceContainer>{price}</PriceContainer>\n        </CollectionFooterContainer>\n      </LinkProduct>\n      \n    </CollectionItemContainer>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  addProduct: product => dispatch(addItem(product))\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(withRouter(CollectionItem));\n","import styled from 'styled-components';\nimport {textBlanc, blue4, blanc} from './../variables'\n\nexport const CollectionPreviewContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  @media screen and (max-width:800px) {\n}\n  @media screen and (max-width:600px) {\n  \t}    \n`;\n\nexport const TitleContainer = styled.h1`\n  font-size: 2rem;\n  color:${blue4};\n  cursor: pointer;\n  &:hover {\n    color: grey;\n  }\n`;\n\nexport const PreviewCollections = styled.div`\n  display: flex;\n  flex-direction:row;\n  font-size: 1.2rem;\n  justify-content: space-between;\n  align-items:center;\n  padding:1rem;\n  cursor: pointer;\n  margin:0  1rem;\n\n  @media screen and (max-width:800px) {\n        wrap: wrap\n      \n  }\n  @media screen and (max-width:600px) {\n  \twrap: wrap\n  \t}    \n`;\n\nexport const PreviewCollection = styled.div`\n  display: flex;\n  flex-direction:column;\n  justify-content: center;\n  align-items:center;\n  margin:0 .5rem;\n  background-image:${({ imageUrl }) => `url(${imageUrl})`};\n  width: 100%;\n  height: 18rem;\n  border-radius:.5rem;\n  background-size: cover;\n  color:${blue4};\n  font-weight:bold;\n  & > h2 {\n    padding:2rem 2rem;\n    background-color:${blanc};\n    opacity:.8;\n    border-radius:.5rem;\n  }\n`;","import React, {Component} from 'react';\nimport { withRouter } from 'react-router-dom';\nimport CollectionItem from '../Collection-Item/Collection-Item';\nimport {\n  CollectionPreviewContainer,\n  TitleContainer,\n  PreviewCollection,\n  PreviewCollections\n} from './collection-preview.styled';\n\nconst CollectionPreview = ({collections,title,  routeName, history, match}) => {\n  console.log({collections})\n  console.log({title})\n  console.log({routeName})\n  console.log({match})\n//console.log({match,history, collections})\n    return (\n     <CollectionPreviewContainer id=\"CollectionPreviewContainer\">\n          <TitleContainer onClick={() => history.push(`${match.path}/${routeName}`)}>\n          {title.toUpperCase()}\n        </TitleContainer>\n      \n      <PreviewCollections id=\"PreviewCollections\">\n        {\n        Object.keys(collections).map((collection,i) => {\n          console.log({collection})\n            const colRouteName = collections[collection]['rooteName']\n            const colTitle = collections[collection]['title']\n            const colImageUrl = collections[collection]['imageUrl']\n        return (\n           <PreviewCollection  key={i} onClick={()=>\n              history.push(`${match.path}${colRouteName}`)}\n              imageUrl={ `/assets/se${colImageUrl}`} >\n              <h2>{ colTitle.toUpperCase()} </h2>\n           </PreviewCollection>\n        )\n        })\n        }\n      </PreviewCollections>\n      </CollectionPreviewContainer>\n  )\n}\n\nexport default withRouter(CollectionPreview);\n","import styled from 'styled-components';\n\nexport const SpinnerOverlay = styled.div`\n  height: 60vh;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const SpinnerContainer = styled.div`\n  display: inline-block;\n  width: 50px;\n  height: 50px;\n  border: 3px solid rgba(195, 195, 195, 0.6);\n  border-radius: 50%;\n  border-top-color: #636767;\n  animation: spin 1s ease-in-out infinite;\n  -webkit-animation: spin 1s ease-in-out infinite;\n\n  @keyframes spin {\n    to {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n  @-webkit-keyframes spin {\n    to {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n`;\n","import React from 'react';\n\nimport { SpinnerContainer, SpinnerOverlay } from './with-spinner.styles';\n\nconst WithSpinner = WrappedComponent => {\n  const Spinner = ({ isLoading,id, ...otherProps }) => {\n    return isLoading ? (\n      <SpinnerOverlay>\n        <SpinnerContainer /> \n      </SpinnerOverlay>\n    ) : (\n      <WrappedComponent key={id} {...otherProps} />\n    );\n  };\n  return Spinner;\n};\n\nexport default WithSpinner;\n","import styled from 'styled-components';\n\nexport const CollectionsOverviewContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding:3rem auto;\n`;\n","import React, {useEffect} from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { withRouter} from 'react-router-dom'\nimport { compose } from 'redux'\nimport CollectionPreview from '../Collection-Preview/Collection-Preview';\nimport { selectSelections, selectIsLoading } from './../../store/selectors/selection';\nimport WithSpinner from './../With-Spinner/With-Spinner'\nimport { CollectionsOverviewContainer } from './collections.overview.styled';\n\nconst CollectionsOverview = ({ selections, isLoading }) => {\n  \n  return(\n      <CollectionsOverviewContainer>\n        { selections.map((selection,index) => {\n          console.log({selection})\n          const  {id, ...otherCollectionProps} = selection['collection'];\n           return <CollectionPreview  key={id} id={id} isLoading  {...otherCollectionProps}  />\n          }\n        )} \n      </CollectionsOverviewContainer>\n  );\n}\nconst mapStateToProps = createStructuredSelector({\n  selections: selectSelections,\n  isLoading:selectIsLoading\n })\nconst CollectionsOverviewContain = compose(\n  connect(mapStateToProps),\n  withRouter,\n)(CollectionsOverview)\n\nexport default CollectionsOverviewContain;\n","import styled from 'styled-components';\n\nexport const CollectionPageContainer = styled.div`\n  margin-top:2rem;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const CollectionTitle = styled.h2`\n  font-size: 38px;\n  margin: 0 auto 30px;\n`;\n\nexport const CollectionItemsContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n  grid-gap: 10px;\n  margin-bottom:6rem;\n \n`;\n","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector} from 'reselect'\nimport WithSpinner from './../../components/With-Spinner/With-Spinner'\nimport {compose} from 'redux'\nimport CollectionItem from '../../components/Collection-Item/Collection-Item';\nimport moduleName from 'module'\nimport { selectSelectionCollections } from '../../store/selectors/selection';\nimport { fetchProducts  } from './../../store/actions/selection'\nimport {\n  CollectionPageContainer,\n  CollectionTitle,\n  CollectionItemsContainer\n} from './collection.styled';\nimport slug from 'slug'\nconst CollectionPage = ({ collections ,match, history }) => {\nlet collection = []  \n\nconst items = (collection) => {\n  return collection['items'].map(item => {\n    console.log(item)\n        return <CollectionItem key={item['id']} urlName={slug(item[\"name\"])} product={item} />\n  })\n}\ncollections.forEach(col => {\n  console.log({col})\n collection.push(<>\n        <CollectionTitle>{` ${col['selection']} / ${col['title']}` }</CollectionTitle>\n                <CollectionItemsContainer id=\"CollectionItemsContainer\">\n                  {items(col)}\n                </CollectionItemsContainer>\n          </>)\n  })\nreturn (\n  <CollectionPageContainer id=\"CollectionPageContainer\">\n    {collection}\n  </CollectionPageContainer>\n);\n};\n  \n\nconst mapStateToProps =  (state, ownProps) => createStructuredSelector({\n    collections : selectSelectionCollections(ownProps.match.params.selectionId)\n })   \nconst CollectionPageContain = compose(\n  connect(mapStateToProps),\n  )(CollectionPage)\n\n  export default CollectionPageContain;\n","\nimport React from 'react'\nimport { Route } from 'react-router-dom';\nimport CollectionsOverviewContain from '../../components/Collections-Overview/Collections-Overview';\nimport CollectionPageContain from './../collectionPage/collectionPage';\n\nconst shopPage =({match, fetchProductsStart}) => {\n  \nreturn (\n  <div className='shop-page' id='shop-page'>\n    <Route exact path={`${match.url}`} render={(props) => \n    <CollectionsOverviewContain   {...props} />\n    }/>\n    <Route exact path={`${match.path}/:selectionId`} render={(props) => \n    <CollectionPageContain  {...props} />\n    }/> \n  </div>\n);\n}\n\n\nexport default shopPage;\n","import styled from 'styled-components';\nimport CustomButton from '../CustomButton/CustomButton';\n\nexport const ProductItemContainer = styled.div`\n  width: 22vw;\n  display: flex;\n  flex-direction: column;\n  height: 350px;\n  align-items: center;\n  position: relative;\n\n  &:hover {\n    .image {\n      opacity: 0.8;\n    }\n\n    button {\n      opacity: 0.85;\n      display: flex;\n    }\n  }\n`;\n\nexport const AddButton = styled(CustomButton)`\n  width: 80%;\n  opacity: 0.7;\n  position: absolute;\n  top: 255px;\n  display: none;\n`;\n\nexport const BackgroundImage = styled.div`\n  width: 100%;\n  height: 95%;\n  background-size: cover;\n  background-position: center;\n  margin-bottom: 5px;\n  background-image: ${({ imageUrl }) => `url(${imageUrl})`};\n`;\n\nexport const ProductFooterContainer = styled.div`\n  width: 100%;\n  height: 5%;\n  display: flex;\n  justify-content: space-between;\n  font-size: 18px;\n`;\n\nexport const NameContainer = styled.span`\n  width: 90%;\n  margin-bottom: 15px;\n`;\n\nexport const PriceContainer = styled.span`\n  width: 10%;\n  text-align: right;\n`;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { addItem } from '../../store/actions/cart';\nimport {compose} from 'redux'\nimport { withRouter} from 'react-router-dom'\nimport WithSpinner from './../With-Spinner/With-Spinner'\nimport {\n  ProductItemContainer,\n  ProductFooterContainer,\n  AddButton,\n  BackgroundImage,\n  NameContainer,\n  PriceContainer\n} from './product-item.styled';\n\nconst ProductItem = ({ addProduct, selection, collection, nameSlug, desc, price, id, imageUrl, name, edition,\n             match,location }) => {\n  \n  console.log(match)\n  return (\n    <ProductItemContainer>\n      <BackgroundImage className='image' imageUrl={`/assets${imageUrl}`} />\n       <ProductFooterContainer>\n        <NameContainer>{name}</NameContainer>\n        <PriceContainer>{price}</PriceContainer>\n      <div>description</div>\n      <div>nameSlug</div>\n      <div>selection</div>\n      <div>collection</div>\n\n      </ProductFooterContainer>\n      <AddButton onClick={() => addProduct(nameSlug)} inverted>\n        Add to cart\n      </AddButton>\n    </ProductItemContainer>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  addProduct: product => dispatch(addItem(product))\n});\nconst ProductItemCompose = compose(\n  connect(null, mapDispatchToProps),\n  withRouter,\n  WithSpinner\n)(ProductItem)\nexport default ProductItemCompose","import styled from 'styled-components';\n\nexport const ProductsPageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const ProductsTitle = styled.h2`\n  font-size: 2rem;\n  margin: 0 auto 30px;\n`;\n\nexport const ProductsItemsContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n  grid-gap: 10px;\n\n  & > div {\n    margin-bottom: 30px;\n  }\n`;\n","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector} from 'reselect'\nimport WithSpinner from '../../components/With-Spinner/With-Spinner'\nimport {compose} from 'redux'\nimport ProductItemCompose from '../../components/Product-Item/Product-Item';\nimport { selectProducts } from '../../store/selectors/selection';\nimport {\n  ProductsPageContainer,\n  ProductsTitle,\n  ProductsItemsContainer\n} from './products-styled';\n\nconst ProductsPage = ({ products ,match, history }) => {\n  let productCollection = []\n    let productCo  =  products.map(prod => {\n      prod.map((col) => {\n         col.map(prod => {\n          productCollection.push(prod)\n          return prod\n        })\n    })\n  })\n   const productsAffichable = productCollection.map(prod => {\n     const {selection, collection, nameSlug, desc, price, id, imageUrl, name, edition} = prod\n     return (\n        <ProductItemCompose key={id} product={prod} />)\n    })\n  \nreturn (\n  <ProductsPageContainer id=\"ProductsPageContainer\">\n    <ProductsItemsContainer id=\"ProductsItemsContainer\">\n       {productsAffichable}\n    </ProductsItemsContainer>\n     </ProductsPageContainer>);\n}\n\nconst mapStateToProps =  createStructuredSelector({\n    products : selectProducts\n }) \nconst ProductsPageContain = compose(\n  connect(mapStateToProps),\n  WithSpinner)(ProductsPage)\n\n  export default ProductsPageContain;\n","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector} from 'reselect'\nimport WithSpinner from '../../components/With-Spinner/With-Spinner'\nimport {compose} from 'redux'\nimport ProductItemCompose from '../../components/Product-Item/Product-Item';\nimport { selectProduct } from '../../store/selectors/selection';\nimport {\n  ProductsPageContainer,\n  ProductsTitle,\n  ProductsItemsContainer\n} from './products-styled';\n\nconst ProductsPage = ({ products ,match, history }) => {\n\n  return (\n  <ProductsPageContainer>\n  <ProductsTitle> title</ProductsTitle>\n  <ProductsItemsContainer>\n             \n             products item\n    </ProductsItemsContainer>\n  \n  </ProductsPageContainer>\n);\n};\n  \n\nconst mapStateToProps =  (state, ownProps) => createStructuredSelector({\n    product : selectProduct(ownProps.match.params.productSlug)\n }) \nconst ProductsPageContain = compose(\n  connect(mapStateToProps),\n  WithSpinner)(ProductsPage)\n\n  export default ProductsPageContain;\n","\nimport React from 'react'\nimport { Route, Switch } from 'react-router-dom';\nimport ProductsPageContain from './productsPage';\nimport ProductPageContain from './productPage';\n\nconst ProductRoute =({match, fetchProductsStart}) => {\n  \nreturn (\n   <Switch>\n    <Route exact path={`${match.url}`} render={(props) => \n    <ProductsPageContain   {...props} />\n    }/>\n    <Route exact path={`${match.path}/:nameSlug`} render={(props) =>\n      ( <ProductPageContain  {...props} />)} />\n  </Switch>\n);\n}\n\n\nexport default ProductRoute;\n","import styled from 'styled-components';\nimport {textBlue, green2, green1} from '../../components/variables'\n\nexport const MainContainer = styled.div`\n  display: flex;\n  margin: 0 auto;\n  width: 100%;\n  height:100%;\n  justify-content: space-between;\n`;\n\nexport const ProfilContainer = styled.div`\n  display: flex;\n  margin: 0 2rem;\n  flex-direction: column;\n  width: 100%;\n`;\n export const CollectionContainer = styled.div`\n display: flex;\n margin: 0 2rem;\n flex-direction: column;\n width: 100%;\n\n`; \nexport const ProfilTitle = styled.h2`\n  margin: 10px 0;\n  font-size:2rem;\n  text-align: center;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color:${textBlue};\n`;\nexport const ButtonsBarContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\nexport const Message = styled.h2`\nmargin: 10px;\ncolor:${textBlue}\n`;","import styled from 'styled-components';\nimport { green3,textBlue, blue2, blue3 } from '../../components/variables';\n\nexport const CollectionPageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const CollectionTitle = styled.h2`\n  font-size: 1.5rem;\n  margin: 0 auto 30px;\n  color: ${green3};\n`;\n\nexport const CollectionItemsContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n  grid-gap: 10px;\n\n  & > div {\n    margin-bottom: 30px;\n  }\n`;\n\nexport const ProductContainer = styled.div`\n  display: flex;\n  margin: 0 auto;\n  flex-direction: column;\n  width: 400px;\n`;\n\nexport const CollectionContainer = styled.div`\n  display: flex;\n  margin: 0 auto;\n  flex-direction: column;\n  width: 400px;\n`;\nexport const FileContainer = styled.div`\ndisplay: flex;\nmargin: 0 auto;\nflex-direction: column;\nwidth: 400px;\n`;\nexport const ProductTitle = styled.h2`\n margin: 10px 0;\n  font-size:2rem;\n  text-align: center;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color:${textBlue};\n  \n`;\n\nexport const ButtonsBarContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\nexport const Message = styled.h2`\nmargin: 10px;\ncolor:${blue3};\n`;\nexport const AddProductContainer= styled.div`\n display: flex;\n\n`\nexport const SelectContainer = styled.div`\n  background: none;\n  background-color: white;\n  color: ${textBlue};\n  font-size: 18px;\n  padding: 10px 10px 10px 5px;\n  display: block;\n  width: 100%;\n  border: none;\n  border-bottom: 1px solid ${blue2};\n  margin: 15px 0;\n  & select {\n  width: 100%;\n   margin-left:0; \n  }\n  &:focus {\n    outline: none;\n  \n }\n`\n","import styled, { css } from 'styled-components';\nimport {green2, green1, textBlue,blue1, green4 } from './../variables'\n\nconst shrinkLabelStyles = css`\n  top: -14px;\n  font-size: 12px;\n  color: ${textBlue};\n`;\nexport const GroupContainer = styled.div`\n  position: relative;\n  margin: 5px 0;\n  outline:none;\n  input[type='password'] {\n    letter-spacing: 0.3em;\n  }\n`;\n\nexport const FormInputContainer = styled.input`\n  background: none;\n  background-color: white;\n  color: ${textBlue};\n  font-size: 18px;\n  display: block;\n  width: 100%;\n  border: none;\n  line-height: 2px;\n  margin: .3rem 0;\n  padding:1rem 0;\n  border: none;\n  border-bottom: 1px solid ${green2};\n  transition: all .3s;\n    &:focus {\n    outline: none;\n    border-left: 1px solid ${green2};\n    border-right: 1px solid ${green2};\n    }\n  &:focus + label {\n    ${shrinkLabelStyles};\n  \n  }\n`;\nexport const FormTextAreaContainer = styled.textarea`\n  background: none;\n  background-color: white;\n  color: ${textBlue};\n  font-size: 18px;\n  display: block;\n  width: 100%;\n  margin: 1rem 0;\n  border: none;\n  border-bottom: 1px solid ${green2};\n transition: all .3s;\n  &:focus {\n    outline: none;\n  }\n  &:focus + label {\n    ${shrinkLabelStyles}\n\n  }\n  `;\nexport const FormInputLabel = styled.label`\n  color: ${textBlue};\n  font-size: 1rem;\n  font-weight: normal;\n  position: absolute;\n  pointer-events: none;\n  left: 5px;\n  top: 15px;\n  transition: 300ms ease all;\n  &.shrink {\n    ${shrinkLabelStyles}\n  }\n`;\n","import React from 'react';\nimport {useForm} from 'react-hook-form'\nimport {\n  GroupContainer,\n  FormInputContainer,\n  FormTextAreaContainer,\n  FormInputLabel\n} from './FormInput-styled';\n\nconst FormInput =({label, textarea, name, ...props }) => {\n  //const {getValues} = useForm()\n \n  debugger\n  return (\n  <GroupContainer>\n    {\n    textarea ? (\n      <FormTextAreaContainer  name={name} {...props} /> \n    ):\n    (<FormInputContainer  name={name} {...props} />)\n    }\n    {label ? (\n      <FormInputLabel  {...props} className={props.value && props.value.length ? 'shrink' : ''}>\n        {label}\n      </FormInputLabel>\n    ) : null}\n  </GroupContainer>\n)};\n\nexport default FormInput;\n","import React, {Component} from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { authenticated } from '../../store/selectors/profil'\nimport { createStructuredSelector} from 'reselect'\nexport default function withAuthorization(ComposedComponent){\n\nconst Autenticated =({authenticated, ...rest}) =>  {\n            \n            return authenticated ? <ComposedComponent {...rest} /> : <Redirect to='/signin' />\n        }\n    \nconst  mapStateToProps = createStructuredSelector({\n\n        authenticated: authenticated \n\n})\nreturn connect(mapStateToProps)(Autenticated)\n}\n","import React, {useState, useEffect} from 'react';\nimport {withRouter} from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { compose } from 'redux'\nimport {createStructuredSelector} from 'reselect'\nimport { isEmpty} from '../../util/validators'\nimport Select from 'react-select';\n \nimport {selectCurrentProfil, selectCurrentCollection, selectCurrentProducts} from '../../store/selectors/profil'\nimport {selectSelections} from '../../store/selectors/selection'\n\nimport { ProfilContainer ,Message, ButtonsBarContainer, ProfilTitle} from './profil.styled'\nimport {FileContainer, CollectionTitle, ProductTitle, \n  AddProductContainer,SelectContainer,ProductContainer,} from './collection.styled'\nimport {addProductStart,updateProductStart} from './../../store/actions/selection'\nimport {updateProfilStart, getProfilDocument } from './../../store/actions/profil'\nimport  FormInput from '../../components/FormInput/FormInput' \nimport CustomButton  from '../../components/CustomButton/CustomButton' \nimport { MainContainer, CollectionContainer } from './profil.styled';\nimport withAuthorization from '../../components/WithAuthorization/withAuthorization.jsx';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport WithSpinner from '../../components/With-Spinner/With-Spinner';\nimport {auth} from './../../util/db/db'\n\nconst  ProductEdit = ({profil,collection, history, initialSelections, getProfilDocument, createProduct, updateProfil}) =>  {\n\n  const initialCollec = [{ value: 'sagesse', label: 'Sagesse' },{ value: 'dogme', label: 'Dogme' },\n  { value: 'society', label: 'Society' }];\n  \n  const {email, collections, favourites, login, products } = profil\n  const {title, description} = collection ? collection : {title:profil.login}\n  const [credential, setCredential] = useState({email, collections, favourites, login, products })\n  const [selec, setSelec] = useState()\n  const [collec, setCollec] = useState();\nconst [product, setProduct] = useState({})\n  //console.log({profilUID:profil.uid})\n  \n  const notify = (message) => toast(`${message}`);\n  useEffect(() => {\n//    console.log({currentUser:auth.currentUser})\n  setCredential({...profil})\n  return () => {\n    }\n}, [profil])\nconst handleSubmitProduct = async event => {\n  event.preventDefault();\n    try {\n      \n      //console.log({prodFin})\n       createProduct({uid:profil.uid,product})\n      notify(`${product.title} is registred`)\n      history.push(`/profil`);\n  }catch(error) {\n    notify(`${error}` )\n}\n}\nconst handleChangeSelec = (selecOption) => {\n  setSelec(selecOption)\n // console.log({selecOption},{product})\n  setProduct({...product,selection:selecOption['value']})\n  \n} \n\nconst handleChangeCollec = (collecOption) => {\n  //console.log({collecOption},{product})\n  setCollec(collecOption)\n  setProduct({...product,collection:collecOption['value']})\n} \nconst ProductsSelectionTag = () => {\n if(!isEmpty(products)){\n   return (\n    <SelectContainer>\n      <select name='products' defaultValue={product.collection} label='products'>\n        {products.map( prod => (\n          <option value= {product }>{product}</option>\n      ))}\n      </select>\n    </SelectContainer>)\n }else {\n   return (\n   <FormInput\n    type='text'\n    name='collection'\n    value={credential.collection}\n    onChange={handleChangeProduct}\n    label='Collection'\n    required\n  />)\n}}\n\nconst handleFile = (event) => {\n  event.stopPropagation()\n  event.preventDefault() \n  const file = event.target.files[0]\n  const {name, size} = file\n  setProduct({...product,image: file})\n\n}\n\nconst handleChangeProduct = (event ) => {\n  const {value, name} = event.target\n  setProduct({...product, [name]: value})\n}\nreturn(\n      <AddProductContainer>\n      <ProductContainer id=\"ProductContainer\">\n        <ProductTitle>Add Product</ProductTitle>\n        <form  onSubmit={ handleSubmitProduct}>\n          <SelectContainer>\n        <Select\n        value={selec}\n        placeholder='select selection'\n        onChange={handleChangeSelec}\n        options={initialSelections}\n      /> \n             </SelectContainer>\n\n          <FormInput\n            type='text'\n            name='title'\n            value={product.title}\n            onChange={handleChangeProduct}\n            label='Title'\n            required\n          />\n          \n          <FormInput textarea\n              rows=\"3\" cols=\"33\"\n              name='description'\n              value={product.description}\n              onChange={handleChangeProduct}\n              label='Description'\n              required\n          />\n          <FormInput\n            type='number'\n            name='price'\n            value={product.price}\n            onChange={handleChangeProduct}\n            min=\"0\"\n            label='Price'\n            \n            required\n          />\n        <SelectContainer>\n        <Select\n          value={collec}\n          placeholder='select collection'\n          onChange={handleChangeCollec}\n          options={initialCollec}\n        /> \n        </SelectContainer>\n          \n            <Message>\n              Add image?\n            </Message>\n            <FileContainer>\n\n            <input type=\"file\" onChange={handleFile}  accept=\"image/*\" required />\n            </FileContainer>\n          <ButtonsBarContainer>\n          <CustomButton type=\"button\" type='submit' > Create product</CustomButton>\n            \n            <CustomButton type=\"button\" onClick={() => {}} > Update</CustomButton>\n          </ButtonsBarContainer>\n        </form>\n      </ProductContainer>\n    </AddProductContainer>\n )\n}\n\nconst mapStateToProps = createStructuredSelector ({\n  profil: selectCurrentProfil,\n  collection:selectCurrentCollection || 'hectic', \n  products:selectCurrentProducts || [],\n  initialSelections: selectSelections\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  createProduct:(product) => dispatch(addProductStart(product)),\n  updateProduct:(product) => dispatch(updateProductStart(product)),\n  getProfilDocument:(uid) => dispatch(getProfilDocument(uid)),\n  updateProfil:(credential) => dispatch(updateProfilStart(credential))\n})\nconst composedProductEdit = compose(\nconnect(mapStateToProps, mapDispatchToProps),\nwithAuthorization,\nWithSpinner\n)(ProductEdit)\n\nexport default composedProductEdit;\n","import React, {useState, useEffect} from 'react';\nimport {withRouter} from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { compose } from 'redux'\nimport {createStructuredSelector} from 'reselect'\nimport { isEmpty} from '../../util/validators'\nimport Select from 'react-select';\n \nimport {selectCurrentProfil, \n      selectCurrentCollection, selectCurrentProducts} from '../../store/selectors/profil'\nimport { ProfilContainer ,Message, ButtonsBarContainer, ProfilTitle} from './profil.styled'\nimport {FileContainer, CollectionTitle, ProductTitle, \n  AddProductContainer,SelectContainer,ProductContainer,} from './collection.styled'\nimport {addProductStart,updateProductStart} from './../../store/actions/selection'\nimport {updateProfilStart, getProfilDocument } from './../../store/actions/profil'\nimport  FormInput from '../../components/FormInput/FormInput' \nimport CustomButton  from '../../components/CustomButton/CustomButton' \nimport { MainContainer, CollectionContainer } from './profil.styled';\nimport withAuthorization from '../../components/WithAuthorization/withAuthorization.jsx';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport WithSpinner from '../../components/With-Spinner/With-Spinner';\nimport ProductEdit from './profilProducts'\nimport {auth} from './../../util/db/db'\n\nconst  ProfilProductsPage = ({currentProfil,collection, history, getProfilDocument, createProduct, updateProfil}) =>  {\n  const initialSelec = [{ value: 'books', label: 'Books' },{ value: 'products', label: 'Products' }];\n  const initialCollec = [{ value: 'sagesse', label: 'Sagesse' },{ value: 'dogme', label: 'Dogme' },\n  { value: 'society', label: 'Society' }];\n  const {email, collections, favourites, login, products } = currentProfil\n  const [credential, setCredential] = useState({email, collections, favourites, login, products })\n  \n  const notify = (message) => toast(`${message}`);\n  \n  useEffect(() => {\n  return () => {\n      console.log({currentProfil})\n  }\n  }, [credential])\n\nconst handleUpdateProfil = async event => {\n  event.preventDefault();\n    try {\n      console.log({credential})\n      updateProfil(credential)\n      notify(`${credential.login} is connected`)\n    history.push(`/profil`);\n  }catch(error) {\n    notify(`${error}` )\n  }\n}\n\nconst handleChangeProfil = (event ) => {\n  const {value, name} = event.target\n  setCredential({...credential, [name]: value })\n}\n\nreturn(\n<MainContainer>\n <ProfilContainer id=\"ProfilContainer\">\n  <ProfilTitle>Profil</ProfilTitle>\n  <form  onSubmit={handleUpdateProfil}>\n    <FormInput\n      type='text'\n      name='login'\n      value={credential.login}\n      placeholder={credential.login}\n      onChange={handleChangeProfil}\n      label='Login'\n      required\n    />\n    <FormInput\n      type='email'\n      name='email'\n      value={credential.email}\n      placeholder={credential.email}\n      onChange={handleChangeProfil}\n      label='Email'\n      required\n    />\n    <FormInput\n      type='text'\n      name='address'\n      value={credential.address}\n      placeholder={credential.address}\n      onChange={handleChangeProfil}\n      label='address'\n      required\n    />\n    <FormInput\n      type='text'\n      name='city'\n      value={credential.city}\n      placeholder={credential.city}\n      onChange={handleChangeProfil}\n      label='city'\n      required\n    />\n    <FormInput\n      type='text'\n      name='country'\n      value={credential.country}\n      placeholder={credential.country}\n      onChange={handleChangeProfil}\n      label='country'\n      required\n    />\n    < ButtonsBarContainer>\n      <CustomButton type=\"submit\" onClick={(e) => handleUpdateProfil(e)}>update</CustomButton>\n      <Message>\n        \n      </Message>\n        \n      </ButtonsBarContainer>\n    </form>\n    </ProfilContainer>\n{/*  /**PRODUCT MANAGEMENT*/}  \n  <CollectionContainer id=\"CollectionContainer\">\n      <ProductEdit />\n    </CollectionContainer>\n  </MainContainer>\n  \n  )\n}\n\nconst mapStateToProps = createStructuredSelector ({\n  currentProfil: selectCurrentProfil,\n  collection:selectCurrentCollection || 'hectic', \n  products:selectCurrentProducts || []\n\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  createProduct:(product) => dispatch(addProductStart(product)),\n  updateProduct:(product) => dispatch(updateProductStart(product)),\n  getProfilDocument:(uid) => dispatch(getProfilDocument(uid)),\n  updateProfil:(credential) => dispatch(updateProfilStart(credential))\n})\nconst composedProfilProductPage = compose(\nconnect(mapStateToProps, mapDispatchToProps),\nwithAuthorization,\nWithSpinner\n)(ProfilProductsPage)\n\nexport default composedProfilProductPage;\n","import React, {useState} from 'react';\nimport {withRouter} from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { compose } from 'redux'\nimport {createStructuredSelector} from 'reselect'\nimport { isEmpty} from '../../util/validators'\nimport {selectCurrentMessages, \n      selectCurrentUsers } from '../../store/selectors/profil'\nimport { ProfilContainer ,Message, ButtonsBarContainer, ProfilTitle} from './profil.styled'\nimport {FileContainer, CollectionTitle, ProductTitle, \n  AddProductContainer,SelectContainer,ProductContainer,} from './collection.styled'\nimport {addMessageStart} from '../../store/actions/message'\nimport  FormInput from '../../components/FormInput/FormInput' \nimport CustomButton  from '../../components/CustomButton/CustomButton' \nimport { MainContainer, CollectionContainer } from './profil.styled';\nimport withAuthorization from '../../components/WithAuthorization/withAuthorization.jsx';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport WithSpinner from '../../components/With-Spinner/With-Spinner';\n\n\nconst  ProfilMessagesPage = ({profil, currentProfil, collection, products, history, createMessageStart}) =>  {\nconst [message, setMessage] = useState({})\nconst notify = (message) => toast(`${{message}}`);\nconst handleSubmitMessage = async event => {\n  event.preventDefault();\n    try {\n      createMessageStart(message)\n      notify(`${{message}} is sent`)\n       history.push(`/profil`);\n  }catch(error) {\n    notify(`${error}` )\n}\n}\nconst handleChangeMessage = (event ) => {\n  const {value, name} = event.target\n  const monMessage = {[name]: value}\n  setMessage({...message, ...monMessage})\n}\n\nreturn(\n  <MainContainer>\n <ProfilContainer>\n   <ToastContainer />\n  <ProfilTitle>Profil</ProfilTitle>\n  <form  onSubmit={handleSubmitMessage}>\n    <FormInput\n      type='text'\n      name='user'\n      value={message.user}\n      onChange={handleChangeMessage}\n      label='receiver'\n      required\n    />\n    <FormInput\n      type='text'\n      name='message'\n      value={message.message}\n      onChange={handleChangeMessage}\n      label='message'\n      required\n    />\n    <FormInput\n      textarea\n      name='message'\n      value={message.description}\n      onChange={handleChangeMessage}\n      label='description'\n      required\n    />\n    </form>\n    < ButtonsBarContainer>\n      <CustomButton type='submit'>Send</CustomButton>\n      <Message>\n        \n      </Message>\n        <CustomButton link='link' to='/signin' >  messages</CustomButton>\n      </ButtonsBarContainer>\n    </ProfilContainer>\n{ /**PRODUCT MANAGEMENT*/}\n  <CollectionContainer>\n    <CollectionTitle>Suivi des Messages</CollectionTitle>\n      <AddProductContainer>\n      <ProductContainer>\n        <ProductTitle>Add Product</ProductTitle>\n      \n      </ProductContainer>\n    </AddProductContainer>\n    </CollectionContainer>\n  </MainContainer>\n  \n  )\n}\n\nconst mapStateToProps = createStructuredSelector ({\n  messages: selectCurrentMessages,\n  users:selectCurrentUsers , \n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  createMessageStart:(message) => dispatch(addMessageStart(message))\n\n})\nconst composedProfilMessages = compose(\nconnect(mapStateToProps, mapDispatchToProps),\nwithAuthorization,\nWithSpinner\n)(ProfilMessagesPage)\n\nexport default composedProfilMessages;\n","import { apifetchMessages, } from './../api/messages'\n\nexport const FETCH_MESSAGES_START = 'FETCH_MESSAGES_START'\nexport const FETCH_MESSAGES_SUCCESS = 'FETCH_MESSAGES_SUCCESS'\nexport const FETCH_MESSAGES_FAIL = 'FETCH_MESSAGES_FAIL'\n\nexport const FETCH_USERS_START = 'FETCH_USERS_START'\nexport const FETCH_USERS_SUCCESS = 'FETCH_USERS_SUCCESS'\nexport const FETCH_USERS_FAIL = 'FETCH_USERS_FAIL'\n\nexport const REMOVE_MESSAGE_START = 'REMOVE_MESSAGE_START'\nexport const REMOVE_MESSAGE_SUCCESS = 'REMOVE_MESSAGE_SUCCESS'\nexport const REMOVE_MESSAGE_FAIL = 'REMOVE_MESSAGE_FAIL'\n\n\nexport const ADD_MESSAGE_START = 'ADD_MESSAGE_START'\nexport const ADD_MESSAGE_SUCCESS = 'ADD_MESSAGE_SUCCESS'\nexport const ADD_MESSAGE_FAIL = 'ADD_MESSAGE_FAIL'\n\nexport const fetchMessagesStart =  () => ({type: FETCH_MESSAGES_START})\n\n\nexport const fetchMessagesSuccess =  (messages) => {\n    console.log(messages)    \n    return {\n                type: FETCH_MESSAGES_SUCCESS,\n                payload:messages,\n                errors: null\n            }\n    }\nexport const fetchMessagesFail =  () => {\n    return {\n        type: FETCH_MESSAGES_FAIL,\n        errors: 'fetch messages Fail'\n    }\n}\nexport const addMessageStart = () => {\n    return {\n        type: ADD_MESSAGE_START,\n       }\n}\n\nexport const addMessageSuccess = (message) => {\n    return {\n        type: ADD_MESSAGE_SUCCESS,\n        payload: message\n    }\n}\n\nexport const addMessageFail = (error) => {\n    return {\n        type: ADD_MESSAGE_FAIL,\n        payload: error\n    }\n}\n\nexport const removeMessageStart = () => {\n    return {\n        type: ADD_MESSAGE_START,\n    }\n}\nexport const removeMessageSuccess = (message) => {\n    return {\n        type: REMOVE_MESSAGE_SUCCESS,\n        payload: message\n    }\n}\n\nexport const removeMessageFail = (error) => {\n    return {\n        type: REMOVE_MESSAGE_SUCCESS,\n        payload: error\n\n    }\n}\n\n\nexport const fetchUsersStart =  () => ({type: FETCH_USERS_START})\n\n\nexport const fetchUsersSuccess =  (users) => {\n    console.log(users)    \n    return {\n                type: FETCH_USERS_SUCCESS,\n                payload:users,\n                errors: null\n            }\n    }\nexport const fetchUsersFail =  () => {\n    return {\n        type: FETCH_USERS_FAIL,\n        errors: 'fetch users Fail'\n    }\n}\n","import styled from 'styled-components';\nimport {textBlue} from '../../components/variables'\nexport const ContactContainer = styled.div`\n  display: flex;\n  margin: 0 auto;\n  flex-direction: column;\n  width: 400px;\n`;\n\nexport const ContactTitle = styled.h2`\n  margin: 10px 0;\n`;\nexport const ButtonsBarContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\nexport const Message = styled.h2`\nmargin: 10px;\ncolor:${textBlue}\n`;","import React, { useState} from 'react'\nimport { connect } from 'react-redux'\nimport FormInput from './../../components/FormInput/FormInput';\nimport CustomButton from './../../components/CustomButton/CustomButton';\nimport {createStructuredSelector} from 'reselect'\nimport { selectCurrentProfil} from './../../store/selectors/profil'\nimport { ContactContainer, ContactTitle, ButtonsBarContainer, Message } from './contact.styled';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Contact = ({sendMessage, match, history, createMessage}) => {\n\nconst notify = (message) => toast(`${message}`);\n\n\nconst [message, setMessage] = useState({email: '',text: '',country: '', city:''})\nconst {email , text, country, city} = message\nconst handleSubmit = async event => {\n\n\n    event.preventDefault();\n    try{\n      createMessage(country, email, message).then(\n          messageRefdb =>  {\n            \n            history.push('/')\n          ('Saved Successfully', { appearance: 'success' })\n          })\n        } catch (error) {\n      notify(error.message)\n  }\n  };\n\nconst  handleChange = event => {\n    const { name, value } = event.target;\n    setMessage({...message, [name] : value });\n  };\nreturn (\n  <ContactContainer>\n      <ContactTitle>Join us</ContactTitle>\n      <form  onSubmit={handleSubmit}>\n      <FormInput\n          type='email'\n          name='email'\n          value={email}\n          onChange={handleChange}\n          label='Email'\n          required\n      />\n      <FormInput\n          type='text'\n          name='ville'\n          value={city}\n          onChange={handleChange}\n          label='Country'\n          required\n      />\n      <FormInput\n          type='text'\n          name='ville'\n          value={country}\n          onChange={handleChange}\n          label='Country'\n          required\n      />\n      <FormInput textarea\n          rows=\"5\" cols=\"33\"\n          name='message'\n          value={message}\n          onChange={handleChange}\n          label='message'\n          required\n      />\n      <ButtonsBarContainer>\n          <CustomButton type='submit'> Send</CustomButton>\n          </ButtonsBarContainer>\n      </form>\n  </ContactContainer>\n  );\n}\n\n\n\nconst mapStateToProps = createStructuredSelector ({\n    profil: selectCurrentProfil\n})\n\nexport default connect(mapStateToProps)(Contact);\n","import styled from 'styled-components';\nimport {textBlue, textBlack, green2} from '../variables'\nexport const SignUpContainer = styled.fieldset`\n  display: flex;\n  margin: 2rem auto;\n  border:3px solid ${green2};\n  border-radius: 3%;\n  padding:2rem;\n  flex-direction: column;\n  width: 400px;\n  justify-content: flex-start;\n  align-items:flex-start;\n`;\n\nexport const SignUpTitle = styled.h2`\n  margin: 10px 0;\n  font-size:2rem;\n  text-align: center;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color:${textBlue};\n`;\nexport const ButtonsBarContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\nexport const Message = styled.h2`\nmargin: 10px;\ncolor:${textBlue};\n`;\n\nexport const ShowPasswordInput = styled.input`\ncolor: ${textBlack};\ntext-align:left;\nmargin-right:1rem;\n`\nexport const ShowPasswordContainer = styled.div`\ndisplay: flex;\njustify-content:flex-start;\nalign-items:center;\npadding-left: 2rem;\npadding-bottom: 2rem;\ncolor: ${textBlack};\ntext-align:left;\n`\nexport const SpanError = styled.div`\n  color: red;\n`","import React, { useState, useEffect} from 'react';\nimport { connect } from 'react-redux'\nimport {compose} from 'redux'\nimport {withRouter, Redirect} from 'react-router-dom'\nimport FormInput from './../FormInput/FormInput';\nimport CustomButton from './../CustomButton/CustomButton';\nimport {  createStructuredSelector } from 'reselect'\nimport { selectCurrentProfil, selectErrorProfil} from './../../store/selectors/profil'\nimport { SpanError, ShowPasswordContainer,SignUpContainer, SignUpTitle, ButtonsBarContainer, Message, ShowPasswordInput } from './signUp.styled';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport {isSameAs, isEmpty } from '../../util/validators'\nimport {useForm} from 'react-hook-form'\nimport { signUpStart } from './../../store/actions/profil'\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst initialLocation = {\n  latitude: null, \n  longitude: null,\n  speed: null\n}\nconst SignUp = ({error, signUpStart, profil, match, history} ) => {\n  \nuseEffect(() => {\n  document.title='Lami1a Selection'\n  console.log({profil})\n  console.log({error})  \n},[error, profil])\n\n\nconst [email, setEmail] = useState('')\nconst [login, setLogin] = useState('')\nconst [password, setPassword] = useState('')\nconst [retypePassword, setRetypePassword] = useState('')\nconst [showPassword, setShowPassword] = useState(false)\nconst [redirect, setRedirect] = useState(false)\nconst notify = (message) => toast(`${message}`);\n\nconst  handleSubmit = async (e) =>  \n  {\n  e.preventDefault()\n  console.log({email})\n  try {\n    let cred ={ email, login, password }\n    const result =  await signUpStart(cred)\n      if(result){\n        setRedirect(true)\n      }else {\n        notify('you cant register !!')\n      } \n      } catch (error) {\n      console.log({error})\n      if (error['code'] === \"auth/email-already-in-use\" || error['code'] ==='auth/email-already-registred')\n      notify(error['message'])\n      return history.push('/signin')\n  } \n}\n\n\nreturn (\n  <SignUpContainer>\n    <SignUpTitle>Register</SignUpTitle>\n    <form onSubmit={handleSubmit}>      \n    <FormInput  name='login' type='text' label='Login' value={login} onChange={(e) => setLogin(e.target.value)} required  />\n    <FormInput  name='email' type='email' value= {email} onChange={(e) => setEmail(e.target.value)} label='email'  required />\n    <FormInput type= {showPassword? `text` : `password`} value={password} onChange={(e) => setPassword(e.target.value)}  name='password' \n        label='Password' required />\n     <FormInput type= {showPassword? `text` : `password`} value={retypePassword} onChange={(e) => setRetypePassword(e.target.value)} name='confirmPassword' \n         label='Confirm Password' required />\n     \n    <ShowPasswordContainer>\n        <ShowPasswordInput  type=\"checkbox\" name=\"showPassword\" onChange={() => setShowPassword(true)} defaultChecked= {false}/>\n          show Password\n    </ShowPasswordContainer>\n      <ButtonsBarContainer>\n        <CustomButton input type='submit' value='SIGN UP' />\n        <Message>\n          Already Registred?\n        </Message>\n        <CustomButton link='link' to='/signin'> SIGNIN</CustomButton>\n      </ButtonsBarContainer>\n    </form>\n  </SignUpContainer>\n)\n}\n\nconst mapStateToProps = createStructuredSelector ({\n    profil: selectCurrentProfil,\n    error:selectErrorProfil\n})\n\nconst mapDispatchToProps = ( dispatch) => ({\n  signUpStart: (userCredential) => dispatch(signUpStart(userCredential))\n})\n\nconst SignUpContain = compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withRouter,\n)(SignUp)\n\nexport default SignUpContain\n","import styled from 'styled-components';\nimport { textBlack, green2, textBlue } from './../variables'\nexport const SignInContainer = styled.fieldset`\n  display: flex;\n  margin: 2rem auto;\n  border:3px solid ${green2};\n  border-radius: 3%;\n  padding:2rem;\n  flex-direction: column;\n  width: 400px;\n  justify-content: flex-start;\n  align-items:flex-start;\n`;\n\nexport const SignInTitle = styled.h2`\n  margin: 10px 0;\n  font-size:2rem;\n  text-align: center;\n  color:${textBlue};\n`;\n\nexport const ButtonsBarContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\n\nexport const ShowPasswordInput = styled.input`\n  color: ${textBlack};\n  text-align:left;\n  margin-right:1rem;\n`\nexport const ShowPasswordContainer = styled.div`\n  display: flex;\n  justify-content:flex-start;\n  align-items:center;\n  padding-left: 2rem;\n  padding-bottom: 2rem;\n  color: ${textBlack};\n  text-align:left;\n`","import React, { useState} from 'react';\nimport { connect } from 'react-redux'\nimport {selectCurrentProfil} from './../../store/selectors/profil'\nimport { compose } from 'redux'\nimport FormInput from '../FormInput/FormInput';\nimport CustomButton from '../CustomButton/CustomButton';\nimport { googleSigninStart, emailSigninStart, setCurrentProfil} from '../../store/actions/profil';\nimport { createStructuredSelector } from 'reselect'\nimport { withRouter } from 'react-router-dom'\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nimport {\n  SignInContainer,\n  SignInTitle,\n  ButtonsBarContainer,\n  ShowPasswordInput,\n  ShowPasswordContainer\n} from './signIn.styled';\n\nconst SignIn = ({googleSigninStart, emailSigninStart, history}) =>  {\nconst [credential, setCredential] = useState({email:'', password:''})\nconst [showPassword, setShowPassword] = useState(false)\nconst {  email, password} = credential;  \nconst notify = (message) => toast(`${message}`);\nconst handleSubmit = async event => {\n  event.preventDefault();\n    try {\n      await emailSigninStart(credential)\n      setCredential({email:'', password:''})\n      notify(`${credential.email} is connected`)\n      history.push(`/`);\n  }catch(error) {\n    notify(`${error}` )\n}\n}\n\nconst handleChange = async event  => {\n  const {value, name} = event.target\n   setCredential({...credential, [name]:value})\n  \n}\nreturn (\n      <SignInContainer>\n   \n        <form onSubmit={handleSubmit}>\n          <FormInput\n            name='email'\n            type='email'\n            onChange={handleChange }\n            value={email}\n            label='email'\n            required\n          />\n          <FormInput\n            name='password'\n            type= {showPassword ? 'text' : 'password'}\n            value={password}\n            onChange={handleChange}\n            label='password'\n            required\n          />\n          <ShowPasswordContainer>\n            <ShowPasswordInput type=\"checkbox\" onChange={()=> setShowPassword(!showPassword)}\n              defaultChecked={showPassword}/>\n              show Password\n          </ShowPasswordContainer>\n      \n          <ButtonsBarContainer>\n            <CustomButton type='submit'> Sign in </CustomButton>\n            <CustomButton type='button' onClick={googleSigninStart} isGoogleSignIn>\n              Google SignIn \n            </CustomButton>\n          </ButtonsBarContainer>\n        </form>\n\n      </SignInContainer>\n    );\n  }\n\nconst mapStateToProps = createStructuredSelector \n({ profil: selectCurrentProfil })\n\nconst mapDispatchToProps = (dispatch) => ({ \n  googleSigninStart : () => dispatch(googleSigninStart()),\n  emailSigninStart : (email, password) => dispatch(emailSigninStart({email, password}))\n})\n\nconst SignInContain = compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withRouter,\n)(SignIn)\n\nexport default SignInContain \n","import styled from 'styled-components'\nimport {blanc, maxWidth} from '../../components/variables'\nexport const MainContainer = styled.div`\nmax-width: ${maxWidth} !important;\nmargin: 0 auto;\nwidth:100%;\nbackground: white;\ndisplay: flex;\nflex-direction: column;\ntext-align: center;\nmargin: 1rem auto 0;\n\n`\n","import React, { useEffect, useState } from 'react';\nimport { Switch, Route, Redirect, withRouter} from 'react-router-dom';\nimport { connect } from 'react-redux'\nimport { createStructuredSelector} from 'reselect'\nimport Selection from '../../components/Selection/Selection'\nimport About from '../about/about'\nimport CheckoutPage from '../checkout/checkout.jsx'\nimport shopPage from '../shop/shop.jsx'\nimport ProductRoute from './../productsPage/productsRoute';\nimport ProfilProductsPage from '../profil/profil.jsx'\nimport composedProfilMessages from '../profil/profilMessages.jsx'\n//import composedProfilProducts from '../profil/ProfilCollection'\n\nimport Contact from '../contact/contact'\nimport {isEmpty} from '../../util/validators'\nimport SignUpContain from './../../components/SignUp/SignUp'\nimport SignInContain from '../../components/SignIn/SignIn';\nimport  { selectCurrentProfil} from './../../store/selectors/profil'\nimport { MainContainer } from'./main.styled';\nimport {auth} from './../../util/db/db'\n\nconst MainPage = ({ currentProfil}) => {\n    useEffect(() => {\n        const getUser  = auth.currentUser\n        if(!!getUser) {\n            console.log({getUser})\n        }\n        return () => {\n            return\n        }\n    }, [])\n\nreturn (\n    <Switch>\n        <MainContainer>\n            <Route exact path='/' component= { Selection} />\n            <Route exact path='/contact' component= {Contact} />\n            <Route exact path='/signup' render={() => {\n                console.log({currentProfil})  \n\n                return isEmpty(currentProfil) ? (<SignUpContain/>) : <Redirect to='/'/>\n            }\n        }\n        />    \n            <Route exact path='/signin' render={ () => {\n                if(!isEmpty(currentProfil))  console.log(currentProfil.email)  \n                return isEmpty(currentProfil) ?  (<SignInContain />): <Redirect to='/'/>\n            }\n        } />\n            <Route exact path='/profil' component={ProfilProductsPage} />\n            <Route exact path='/messages' component={composedProfilMessages} />\n            \n            <Route extact path='/shop' component={shopPage} />\n            <Route exact path='/about' component= {About} />\n            <Route exact path='/checkout' component={CheckoutPage} />\n            <Route exact path='/products' component={ProductRoute} />\n        </MainContainer>\n    </Switch>\n)\n    }\n\nconst mapStateToProps = createStructuredSelector ({\n    currentProfil: selectCurrentProfil\n}) \n\nexport default withRouter(connect(mapStateToProps)(MainPage))\n","import styled, { css } from 'styled-components'\nimport {Link} from 'react-router-dom'\nimport { green1,maxWidth, blanc, green2, green4, textBlack, blue41,} from './../../components/variables'\n\nexport const FooterContainer = styled.div`\n    position:fixed;\n    bottom:0;\n    width:100%;\n    background-color: ${blanc};\n    display: flex;\n    max-width:${maxWidth} ;\n    justify-content: space-evenly;\n    align-items:center;\n    flex-wrap:nowrap;\n    height:3.5rem;\n\n`\n\nexport const NavigationContainer = styled.div`\n    padding: 0.7rem auto;\n    font-size: 1.2rem;\n    display: flex;\n    align-items: center;\n    justify-content:space-around;\n    `\nexport const OptionLink = styled(Link)`\npadding: 7px 7px;\nfont-weight: lighter;\nfont-size: 1.5rem;\ncolor:${green4};\nborder:1px solid ${green2};\ntext-decoration:none;\nmargin-left: 1rem;\ntransform: scale(1.1);\ntransition: transform 6s cubic-bezier(0.25, 0.45, 0.45, 0.95);\n&:hover {\n  cursor: pointer;\n  box-shadow:0px 0px 2px ${green1};\n  opacity: 0.9;\n  background-color:${blanc};\n}`;\n\nexport const CustomLinkContainer = styled(Link)`\n      color: ${green4};\n      text-decoration:none;\n      display:flex;\n      letter-spacing: 0.5px;\n      padding: 1rem 2rem 1rem;\n      font-size: 1.5rem;\n      font-weight:400;\n      flex-shrink:0;\n      text-transform: uppercase;\n      cursor: pointer;\n      &:hover {\n        background-color: ${blue41};\n        opacity:0.8;\n        border: none;\n        font-size: 1.5rem;\n        color:${textBlack};\n }\n `\nexport const CustomAContainer = styled.a `\n      color: ${green4};\n      text-decoration:none;\n      display:flex;\n      letter-spacing: 0.5px;\n      padding: 1rem 2rem 1rem;\n      font-size: 1.5rem;\n      font-weight:400;\n      flex-shrink:0;\n      text-transform: uppercase;\n      cursor: pointer;\n      &:hover {\n        background-color: ${blue41};\n        opacity:0.5;\n        border: none;\n        font-size: 1.5rem;\n        color:${textBlack};\n }\n `\n\nexport const CopyRight = styled.div`\n    color: ${textBlack};\n    padding: 1rem auto;\n    font-size: 1.4rem;\n    \n`\nexport const buttonStyles = css`\n  background-color: ${textBlack};\n  color: white;\n  border: none; \n  &:hover {\n    background-color: white;\n    color: black;\n    border: 1px solid black;\n  }\n`;\n\nconst invertedButtonStyles = css`\n  background-color: white;\n  color: black;\n  border: 1px solid black;\n\n  &:hover {\n    background-color: black;\n    color: white;\n    border: none;\n  }\n`;","import React from 'react'\nimport { FooterContainer, NavigationContainer, CustomLinkContainer, CopyRight, CustomAContainer,OptionLink } from './Footer-styled'\nimport { Router} from 'react-router-dom'\nimport LogoBox from '../../components/Logo/Logo'\nconst Footer = ({loading,error}) => {\nreturn (\n        <FooterContainer>\n            <NavigationContainer>\n                <OptionLink href='https://lami1a.org'> company </OptionLink> \n                <OptionLink to='/careers'>careers</OptionLink> \n                <OptionLink to='/policy'>policy</OptionLink> \n            </NavigationContainer>\n            <CopyRight>\n                Built by &copy; \n                    <span className=\"navbar-brand \">lami1a\n                    </span>\n            </CopyRight>\n        </FooterContainer>\n)}\nexport default (Footer)","import styled from 'styled-components'\nimport {blue1, maxWidth} from './components/variables'\n\nexport const AppContainer =  styled.div`\n  color: ${blue1};\n  padding:  auto;\n  text-align: center;\n  display: flex;\n  margin: auto;\n  position:relative;\n  flex-direction: column;\n  max-width:${maxWidth};\n  flex: 1 0 auto;\n  height:100vh;\n  `","import styled, { css } from 'styled-components';\nimport { textBlue,  green1,blanc, blue2,orange1, orange2, textVert, blue4 } from '../variables'\nimport {Link} from 'react-router-dom'\n\n\n\nconst buttonStyles = css`\n  min-width: 165px;\n  width: 165px;\n  height: 50px;\n  text-decoration:none;\n  color:${textBlue};\n  letter-spacing: 0.5px;\n  line-height: 50px;\n  padding: 0 5px 0 5px;\n  font-size: 15px;\n  text-transform: uppercase;\n  font-weight: bolder;\n  cursor: pointer;\n  display: flex;\n  border-radius:3px;\n  justify-content: center;\n  &:hover {\n    background-color: ${blue4};\n    color: ${blanc};\n    \n  }\n\n  @media screen and (max-width: 800px) {\n    min-width: 7rem;\n    padding: 0 5px 0 5px;\n    font-size:.7rem;\n \n  }\n  @media screen and (max-width: 600px) {\n    min-width: 5rem;\n    padding: 0 5px 0 5px;\n    font-size:.7rem;\n \n    } \n`;\n\nexport const CustomButtonContainer = styled.button`\n  background-color: ${blue2};\n  color:${textBlue};\n  &:hover {\n    background-color: ${green1};\n    color: ${blue2};\n    }\n  \n  ${buttonStyles}\n`;\n\nexport const CustomClearContainer = styled.button`\n  background-color:${orange1};\n  color:${textBlue} ;\n  outline:none;\n  &:hover {\n    background-color: ${green1};\n    color: ${orange2};\n    }\n  ${buttonStyles}\n\n`;\n\nconst invertedButtonStyles = css`\n  background-color: white;\n  color: ${textVert};\n   &:hover {\n    background-color: ${textVert};;\n    color: white;\n    border: none;\n  }\n`;\n","import React from 'react';\n\nimport { CustomClearContainer, CustomButtonContainer, } from './CustomButtonSearch.styled';\n\nconst CustomButton = ({ children, ...props }) => {\n  \n  if(props.clear) {\n  return <CustomClearContainer {...props}> { children }</CustomClearContainer>\n\n  }\n  return <CustomButtonContainer {...props}>{children}</CustomButtonContainer>\n\n}\n\nexport default CustomButton;\n","import React, {useState, useEffect} from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector} from 'reselect'\nimport WithSpinner from './../../components/With-Spinner/With-Spinner'\nimport {compose} from 'redux'\nimport CollectionItem from '../../components/Collection-Item/Collection-Item';\nimport moduleName from 'module'\nimport { selectProductsCollection } from '../../store/selectors/selection';\nimport { fetchProducts  } from './../../store/actions/selection'\nimport {\n  CollectionPageContainer,\n  CollectionTitle,\n  CollectionItemsContainer\n} from './collection.styled';\n\nconst CollectionPageResult = ({ products ,match, history, ...otherProps }) => {\n \n  const {searchTerm} = otherProps\nlet collection = []  \nproducts.forEach((product,i) => {\n  console.log({product})\n  collection.push(\n  <>\n    <CollectionTitle>{` ${searchTerm}` }</CollectionTitle>\n        <CollectionItemsContainer>\n          { \n          <CollectionItem key={product['id']} product={product} />\n          }\n        </CollectionItemsContainer> \n  </>)\n})\n\nreturn (\n  <CollectionPageContainer>\n    {collection}\n  </CollectionPageContainer>\n);\n};\nconst CollectionPageResultContain = compose(\n  WithSpinner)(CollectionPageResult)\n\nexport default CollectionPageResultContain;\n","import styled  from 'styled-components'\nimport { blanc, green4, blue3, textBlack, blue1, blue2, green2 }  from '../variables';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nexport const FormSearch = styled.form`\n    position:relative;\n    align-self: center;\n    display:flex;\n    justify-content:center;\n    margin-top:2rem;\n    align-items:center;\n    \n        min-width: 7rem;\n        padding: 0 5px 0 5px;\n        font-size:.7rem;\n        flex-direction:column\n}\n            \n`/* \nexport const SearchIcon = styled(FontAwesomeIcon)`\n    font-size: 1.2rem;\n    right:1rem;\n    color:${green4};\n    align-self:center;\n    position: absolute;\n    cursor:pointer;\n    outline: none;\n` */\nexport const FormInputSearch = styled.input`\n    background-color: ${blanc};\n    color: ${textBlack};\n    height:3rem;\n    margin-right:.5rem;  \n    box-sizing:border-box;\n    font-size: 1.3rem;\n    padding: .5rem;\n    border: 1px solid ${green2};\n    transition: all .3s;\n    &:focus {\n    outline: none;\n    }\n\n  @media screen and (max-width: 800px) {\n    min-width: 7rem;\n    padding: 0 5px 0 5px;\n    font-size:.7rem;\n \n  }\n  @media screen and (max-width: 600px) {\n    min-width: 5rem;\n    padding: 0 5px 0 5px;\n    font-size:.7rem;\n \n    } \n`","import React, {useState, useEffect, useRef} from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter} from 'react-router-dom'\nimport { compose } from 'redux'\nimport { createStructuredSelector, createSelector} from 'reselect'\nimport { selectBooks, selectProducts } from './../../store/selectors/selection'\nimport CustomButtonSearch from './../CustomButton/CustomButtonSearch'\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport WithSpinner from './../With-Spinner/With-Spinner'\nimport CollectionPageResultContain from './../../pages/collectionPage/collectionPageResult'\nimport {\n  FormSearch,\nSearchBar,\nSearchIcon,\nFormInputSearch\n} from './searchHeader.styled';\n\nconst initialResult = []\n\nconst SearchHeader = ({ books, products, callback }) => {\n  const searchInputRef = useRef()\n  const notify = (message) => toast(`${message}`);\n  const [searchTerm, setSearchTerm] = useState()\n  const [resultProds, setResultProds] = useState(initialResult)\n  const [resultBooks, setResulBooks] = useState(initialResult)\n  const [isLoading, setIsLoading] = useState(false)\n  const [globalError, setError] = useState(null)\n  const timeOut = useRef(null)\nconst submit = (e) => {\n  e.preventDefault()\n\n  fetchArticle (searchTerm)\n  //searchInputRef.current.focus()\n }\nasync function  fetchArticle(re){\n  setIsLoading(true)\n  //console.log({products})  \n  //console.log({books})  \n  \n  try {\n    let resultProd = []\n    const rsltProd =  products.forEach(elm => {\n      \n       const elmMatch = elm['tags'].filter(tag => {\n       return  (tag === searchTerm) \n      })\n      //console.log({elmMatch})\n      console.log({elm})\n\n      resultProd.push(elm)\n      })\n    console.log({resultProd})  \n   setResultProds({ resultProd})\n\n  // search in books desc\n  const rsltBooks =  books.map(elm => {\n    console.log({elm})\n    return elm['tags'].filter(tag => {\n      return ( tag === searchTerm)\n     })\n     return elm\n     })\n   \n   console.log({rsltBooks})\n  setResultProds({ bookMatch:rsltBooks})\n  \n  \n      \n  } catch (error) {\n   setError(error) \n   }\n}\n\nreturn (\n   <>\n    <ToastContainer />\n      <FormSearch onSubmit={submit}>\n        <FormInputSearch  placeholder={searchTerm}  onChange={(e) => setSearchTerm(e.target.value)}/>\n        <CustomButtonSearch  type=\"submit\" > Search article</CustomButtonSearch>\n       {/*  <CustomButtonSearch clear type=\"button\" onClick={handleClear}> Clear Search </CustomButtonSearch> */}\n      </FormSearch>\n   {/* {resultProds  ? <CollectionPageResultContain products={resultProds} /> : '' }\n    {resultBooks ? <CollectionPageResultContain products={resultBooks} /> : '' } */}\n </>\n );\n}\nconst mapStateToProps =  createStructuredSelector({\n  books: selectBooks,\n  products: selectProducts \n})\n \nconst SearchHeaderContain = compose(\n  connect(mapStateToProps),  \n  withRouter,\n  WithSpinner\n)(SearchHeader)\n\nexport default SearchHeaderContain\n","import React, { useState, useEffect }  from 'react';\nimport {connect} from 'react-redux'\nimport { checkProfilSession} from './../src/store/actions/profil' \nimport Header from './components/Header/Header' \nimport {compose} from 'redux'\nimport Main from './pages/main/main'\nimport Footer from './components/Footer/Footer' \nimport {AppContainer} from './app-styled.jsx'\nimport {createStructuredSelector} from 'reselect'\nimport { fetchSelectionsStart, fetchProductsStart } from './../src/store/actions/selection'\nimport {selectCurrentProfil}  from './../src/store/selectors/profil'\nimport SearchHeader from './components/Header/SearchHeader'\n\n\nconst App = ({ fetchSelectionsStart, checkProfilSession, currentProfil, fetchProductsStart }) => {\n\n/*  useEffect(() => {\n  checkProfilSession()\n }, [checkProfilSession]) \n */\n/* useEffect(() => {\n      fetchSelectionsStart()\n     // createProductsCollection()\n     //fetchProductsStart()\n},[fetchSelectionsStart]) \n */\nreturn (\n  <AppContainer>\n    <Header />\n    <SearchHeader />  \n     <Main />\n     <Footer/> \n  </AppContainer>\n    );\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  checkProfilSession: () => dispatch(checkProfilSession()),\n  fetchSelectionsStart: () => dispatch(fetchSelectionsStart()),\n fetchProductsStart: () => dispatch(fetchProductsStart())\n})\nconst mapStateToProps = createStructuredSelector({\n  currentProfil :selectCurrentProfil\n})\nconst AppContain = compose(\n  connect(mapStateToProps, mapDispatchToProps),\n)(App)\n\nexport default AppContain\n","import { createGlobalStyle} from 'styled-components'\n\nexport default createGlobalStyle`\nhtml, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video {\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n  margin: 0;\n  padding: 0; \n  @media screen and (max-width: 800px) {\n    padding: 10px;\n  }\n  @media screen and (max-width: 600px) {\n    padding: 7px;\n  }\n}\n\nbody {\n     box-sizing: border-box;\n     font-family:sans-serif;\n     font-weight:300;   \n}\nh1, h2 {\n    margin-bottom:1rem;\n}\n`","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const removeProductsFromProfil = (products, product) => {\n    products.filter(prod => prod.id !== product.id)\n}","import {\n    \n    SIGNIN_FAIL,SIGNIN_SUCCESS, EMAIL_SIGNIN_START,\n    SIGNUP_FAIL, SIGNUP_SUCCESS,\n     LOGOUT_SUCCESS,LOGOUT_FAIL, \n    SET_CURRENT_PROFIL,\n    ADD_TO_COLLECTION,\n    UPDATE_PROFIL_SUCCESS,\n    GET_COLLECTION,\n    REMOVE_FROM_COLLECTION,\n    GET_ALL_PROFILS} from '../actions/profil'\n    import { removeProductsFromProfil } from './reducersUtils'\n    \n    const initialState = {\n        currentProfil: '',\n        products: '',\n        collection:'',\n        //status: user / org / fam\n        status:'user',\n        admin:false,\n        authenticated:false,\n        loading: false,\n        error:null\n       }\n\nconst profilReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_CURRENT_PROFIL:\n        return {\n                ...state,\n                currentProfil: action.payload,\n                authenticated:true,\n                loading: false,\n                error:null    \n            };\n       \n        case SIGNUP_SUCCESS:\n        case SIGNIN_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                error: null,\n                authenticated:true,\n                currentProfil:action.payload\n            };\n        case  UPDATE_PROFIL_SUCCESS:    \n            return {\n                ...state,\n                loading: false,\n                error: null,\n                authenticated:true,\n                currentProfil:action.payload\n            };\n        case SIGNUP_FAIL:\n        case SIGNIN_FAIL:\n        case LOGOUT_FAIL:\n            return {\n                ...state,\n                loading: false,\n                error: action.error,\n                authenticated:false\n            };\n        case GET_COLLECTION:\n            return {\n                ...state,\n                collections:action.payload\n            };\n        case GET_ALL_PROFILS:\n            return {\n                ...state,\n                profils:action.payload\n            };\n        case ADD_TO_COLLECTION:\n            return {\n                ...state,\n                products: [...state.products, action.payload]\n            };\n        case REMOVE_FROM_COLLECTION:\n            const products = removeProductsFromProfil(state.products, action.payload)\n            return {\n                ...state,\n                products: [...products]\n            };\n        case LOGOUT_SUCCESS:\n            return {\n                ...state,\n                currentProfil:'',\n                error: null,\n                authenticated:false,\n                id:'',\n            };\n        default:\n            return state;\n            };\n        }\n\nexport default profilReducer;","export const addItemToCart = (cartItems, cartItemToAdd) => {\n  const existingCartItem = cartItems.find(\n    cartItem => cartItem.id === cartItemToAdd.id\n  );\n\n  if (existingCartItem) {\n    return cartItems.map(cartItem =>\n      cartItem.id === cartItemToAdd.id\n        ? { ...cartItem, quantity: cartItem.quantity + 1 }\n        : cartItem\n    );\n  }\n\n  return [...cartItems, { ...cartItemToAdd, quantity: 1 }];\n};\n\nexport const removeItemFromCart = (cartItems, cartItemToRemove) => {\n  const existingCartItem = cartItems.find(\n    cartItem => cartItem.id === cartItemToRemove.id\n  );\n\n  if (existingCartItem.quantity === 1) {\n    return cartItems.filter(cartItem => cartItem.id !== cartItemToRemove.id);\n  }\n\n  return cartItems.map(cartItem =>\n    cartItem.id === cartItemToRemove.id\n      ? { ...cartItem, quantity: cartItem.quantity - 1 }\n      : cartItem\n  );\n};\n","import { TOGGLE_CART_HIDDEN, ADD_ITEM, REMOVE_ITEM, CLEAR_CART, CLEAR_ITEM_FROM_CART } from './../actions/cart'\nimport { addItemToCart, removeItemFromCart } from './cartUtils';\n\nconst INITIAL_STATE = {\n        hidden: true,\n        cartItems: []\n  };\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case TOGGLE_CART_HIDDEN:\n      return {\n        ...state,\n        hidden: !state.hidden\n      };\n    case ADD_ITEM:\n      return {\n          ...state,\n           cartItems: addItemToCart(state.cartItems, action.payload)\n      };\n    case REMOVE_ITEM:\n      return {\n        ...state,\n        cartItems: removeItemFromCart(state.cartItems, action.payload)}\n      ;\n    case CLEAR_ITEM_FROM_CART:\n      return {\n          ...state, cartItems: state.cartItems.filter(\n          cartItem => cartItem.id !== action.payload.id\n        )\n      };\n    case CLEAR_CART:\n      return {\n          ...state, \n          cartItems:[]\n        \n      };\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;\n","import {\n    FETCH_SELECTIONS_SUCCESS,\n    FETCH_COLLECTIONS_SUCCESS,\n    FETCH_PRODUCTS_SUCCESS,\n    //TODO\n    ADD_PRODUCT_SUCCESS,\n    ADD_PRODUCT_FAIL,\n    \n    REMOVE_PRODUCT_SUCCESS,\n    REMOVE_PRODUCT_FAIL,\n    REMOVE_COLLECTION_SUCCESS,\n    ADD_COLLECTION_SUCCESS,\n\n} from './../actions/selection'\nconst initialState = {\n        selections:{},\n        collections:{},\n        collectionsTitle:'',\n        items:{},\n        error: '',\n        loading: false\n    };\n    \nconst selectionReducer = ( state = initialState , action) => {\n    switch (action.type) {\n        case FETCH_SELECTIONS_SUCCESS:\n           // console.log(action.payload)\n            return {\n                ...state,\n                selections: action.payload,\n                loading:true\n            };\n            \n        case FETCH_COLLECTIONS_SUCCESS:\n            return {\n                ...state,\n                collections: action.payload,\n                loading:true\n\n            };\n            \n        case FETCH_PRODUCTS_SUCCESS:\n        console.log({items:  action.payload})   \n        return {\n                ...state,\n                items:  action.payload,\n                loading:false\n            };\n        \n\n        case ADD_COLLECTION_SUCCESS:\n            \n            return {\n                ...state,\n                 collections: {...state.collections, action}\n            };\n        \n        case ADD_PRODUCT_SUCCESS:\n            const product = action.payload\n        return {\n                ...state,\n                items: {...state.items, product }\n            };\n        \n        case ADD_PRODUCT_FAIL:\n            return {\n                ...state,\n                error: action.payload\n            };\n        case REMOVE_PRODUCT_SUCCESS:\n            return {\n                ...state,\n                products:action.payload\n            };\n        \n        case REMOVE_PRODUCT_FAIL:\n            return {\n                ...state,\n                error: action.payload\n            };        \n        case REMOVE_COLLECTION_SUCCESS:\n            return {\n                ...state,\n                collections: action.payload\n            };\n        \n        default:\n            return state ;       \n    \n    }\n}\n\nexport default selectionReducer; \n","import {combineReducers } from 'redux'\nimport profilReducer from './profil'\nimport cartReducer from './cart'\nimport selectionReducer from './selection'\n//import shopReducer from './shop'\nimport { persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n    whitelist: ['cart', 'selection', 'profil'] \n  }\n\nconst rootReducer = combineReducers(\n    {   \n        profil:profilReducer,\n        cart:cartReducer,\n        selection:selectionReducer\n    }\n)\n\nexport default persistReducer(persistConfig, rootReducer)","import firebase, { auth, firestore} from './../db/db'\nimport bcrypt from 'bcryptjs'\n\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\n\ngoogleProvider.setCustomParameters({ prompt: 'select_account' });\n\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\n\nexport const encryptePassword = ( password ) => {\n  if (!password) {\n    return {\n      error:true,\n      message:' No password to encrypt'\n    }\n  }\n  bcrypt.hash(this.password, 8, (err, hash) => {\n    if (err) {\n      return err\n    }\n    return hash\n     })\n}\n\nexport const verifPassword = (password, hash) => {\n  const passwordHash = hash\n  return new Promise((resolve, reject) => {\n  bcrypt.compare(password, passwordHash, (err, same) => {\n    if (err) {\n      return reject(err)\n    }\n    resolve(same)\n  })\n  })\n}\n\n\n\n// on envoie le nom de la collection  [selections] // et collectin 'coran / sagesse / objets ludiques / discount'\n","import {takeLatest, call, put, all, fork } from \"redux-saga/effects\";\nimport {\n    updateProfilSuccess,\n    GOOGLE_SIGNIN_START,\n    EMAIL_SIGNIN_START,\n    SIGNUP_START,\n    signInSuccess,\n    signInFail,\n    signUpFail,\n    signUpSuccess,\n    CHECK_PROFIL_SESSION,\n    LOGOUT_START,\n    logOutFail,\n    logOutSuccess,\n    SIGNUP_SUCCESS,\n    setCurrentProfil,\n    UPDATE_PROFIL_START,\n    GET_PROFIL_DOCUMENT,\n    getProfilDocument,\n    updateProfilFail,\n    isAuthenticatedFail\n} from './../actions/profil'\nimport {googleProvider } from './../../util/db/auth.firebase'\nimport {apiRegister, apiCreateUserProfilDocument,apiUpdateCredential, apiGetCurrentProfil} from './../api/profils'\nimport {requestNotificationPermissions} from './../api/messages'\n\nimport { isEmpty } from '../../util/validators'\nimport firebase, { auth, firestore, firebaseTimestamp} from './../../util/db/db'\nimport { selectCurrentCollection, selectCurrentProfil } from \"../selectors/profil\";\n \nexport function* asyncGetProfilDocument(uid) {\n if(!uid) return\n    try {\n      const profilData = yield firestore.collection('profils').doc(uid).get()\n        return({uid, ...profilData.data()})        \n    } catch (error) {\n        yield put(signInFail(error))\n    }\n} \n//Google\nexport function* googleSignIn() {\n    try {\n        const {user} = yield auth.signInWithPopup(googleProvider);\n        const { uid, email} = user\n        console.log({user})\n        const profilRef = yield firestore.doc(`/profils/${uid}`)\n       console.log({profilRef}) \n       if(profilRef.get().exists) {\n           yield put(signInSuccess({uid,...profilRef.get().data()}))\n         }\n        else {\n            const createdAt = new Date();\n            const userProfil = { email,products:[], collections:[],createdAt, favoutites:[],comments:[]}\n                yield profilRef.set(userProfil, { merge: true })\n            const profilSnapshot = yield profilRef.get()\n            console.log({profilSnapshot})  \n            yield put(signInSuccess({uid,...profilSnapshot.data()} ))\n            yield put(setCurrentProfil({uid,...profilSnapshot.data()}))\n       \n        }\n        } catch (error) {\n             yield put(signUpFail({error, message : ' You can t signUP'}))\n       }\n}\n\n//SignUP\nexport function* signInAfterSignUP({payload: {userCred} }) {\n    console.log({userCred}) \n    yield put(signInSuccess({\n        uid: userCred.uid,\n        ...userCred\n    })) \n}\n\nexport function* signUp({...payload}) {\nconsole.log({payload})\n    try {\n    let {email, password, login} = payload.payload\n    const {user} = yield auth.createUserWithEmailAndPassword(email, password);\n    console.log({user})\n    user.sendEmailVerification()\n    const {uid} = user\n    const createdAt = firebaseTimestamp()\n    const profilRef = yield firestore.doc(`profils/${uid}`)\n    const profilSnapshot = yield profilRef.get()\n    console.log({data: profilSnapshot['data']}) \n    if(profilSnapshot.exists) {\n        console.log(profilSnapshot.data())\n        yield put(signUpSuccess({uid,...profilSnapshot.data()}))\n        yield put(setCurrentProfil({uid,...profilSnapshot.data()}))\n    \n    }\n    else {\n        const userProfil = { login, email,products:[], collections:[],createdAt, favourites:[],comments:[]}\n        console.log({snapshot:profilSnapshot.data()})\n        yield put(signUpSuccess({uid,...profilSnapshot.data()} ))\n        yield put(setCurrentProfil({uid,...profilSnapshot.data()}))\n        \n    }\n    } catch (error) {\n            yield put(signUpFail({error, message : error.message}))\n    }\n}\n//Email SignIn\nexport function* emailSignIn({payload}) {\n    try {\n        const {email, password} = payload['email']\n        const {user} = yield auth.signInWithEmailAndPassword(email, password);\n        const {uid} = user\n        yield put(setCurrentProfil({uid,...profilSnapshot.data()}))\n        \n        const profilRef = yield  firestore.doc(`/profils/${uid}`)\n        const profilSnapshot = yield profilRef.get()\n        if(!profilSnapshot.exists) {\n            const createdAt = new Date();\n            const userProfil = { email,products:[], collections:[],createdAt, favoutites:[],comments:[]}\n             yield profilRef.set(userProfil, { merge: true })\n            const profilSnapshot = yield profilRef.get()\n            yield put(setCurrentProfil({uid,...profilSnapshot.data()}))\n            yield put(signInSuccess({uid,...profilSnapshot.data()} ))\n        \n        }\n        yield put(signInSuccess({uid,...profilSnapshot.data()} ))\n        } catch (error) {\n            yield put(signInFail({error, message : 'You can t signIn'}))\n        }\n}\n\n// logout \nexport function* logout(){\n    try {\n        yield auth.signOut()\n        yield put(logOutSuccess())\n    } catch (error) {\n            yield put(logOutFail(error))\n    }\n} \n//update profil\nexport function* updateProfilAsync({payload}) {\n    try {\n        console.log({payload})\n        const {uid,login,email,address, city , country} = payload\n        console.log({credential:{uid,login,email,address, city , country}})\n        yield call(apiUpdateCredential,[uid,login,email,address, city , country])\n        yield put(updateProfilSuccess(payload))\n    } catch (error) {\n        put(updateProfilFail(error))\n    }\n}\n\nexport function* isAuthenticated() {\n    try {\n        const userAuth = yield call(apiGetCurrentProfil)\n        if(!userAuth) return\n        const profilRef =  yield  firestore.doc(`/profils/${userAuth.uid}`)\n        console.log({profilRef})\n        const profilData =  yield profilRef.get()\n            console.log(profilData.data())  \n        yield put(setCurrentProfil({uid:userAuth.uid, ...profilData.data()}))\n    } catch (error) {\n        yield \n    }\n}\n\n\n//handlers saga start actions\nexport function* onUpdateProfilStart() {\n    yield takeLatest(UPDATE_PROFIL_START, updateProfilAsync)\n}\nexport function* onGoogleSignInStart() {\n    yield takeLatest(GOOGLE_SIGNIN_START, googleSignIn)\n}\n\nexport function* onEmailSignInStart() {\n    yield takeLatest(EMAIL_SIGNIN_START, emailSignIn)\n}\n\nexport function* onSignUpSuccess() {\n    yield takeLatest(SIGNUP_SUCCESS, signInAfterSignUP) \n} \n\nexport function* onSignUpStart() {\n    yield takeLatest(SIGNUP_START, signUp)\n}\nexport function* onLogoutStart() {\n    yield takeLatest(LOGOUT_START, logout)\n}\nexport function* onCheckProfilSession() {\n    yield takeLatest(CHECK_PROFIL_SESSION, isAuthenticated)\n}\nexport function* onGetProfilDocument() {\n    yield takeLatest(GET_PROFIL_DOCUMENT, asyncGetProfilDocument)\n}\n\nexport function* profilSagas() {\n    yield all([    \n        fork(onGoogleSignInStart),\n        fork(onEmailSignInStart),\n        fork(onSignUpStart),\n        fork(onCheckProfilSession),\n        fork(onLogoutStart),\n        fork(onSignUpSuccess),\n        fork(onUpdateProfilStart),\n        fork(onGetProfilDocument)\n        ])\n}","import firebase, {\n    firestore, auth, firebaseTimestamp\n} from '../../util/db/db'\nimport slug from 'slug'\n/**\n * Selections queries\n */\n\nexport const apiProductsCollection = async ({collectionKey, products}) => {\n    try {\n        const productsRef = await firestore.collection('products')\n         const docRef = await productsRef.doc(collectionKey)     \n           const docSnapshot = docRef.get()\n           if(!docSnapshot.exists) {\n               docRef\n            .docRef.set(products)\n           } \n    \n    } catch (error) {\n        throw error\n    }    \n}\n// create object Collection by id\nexport const snapShotLooper = snapshot => {\n    let data = {}\n    snapshot.forEach(doc => {\n        const id = doc.id\n        data[id] = doc.data()\n    })\n    return data\n}\n\n export const apiFetchAllProducts =  () => {\n    try {\n        const products = {}\n          firestore.collection('products').get().then(async snapshot => {\n                snapshot.forEach( async (product, index) => {\n                   const id = product.id\n                    products[id]=  product.data()\n                })\n        console.log({products})\n        return new Promise((resolve, reject) => resolve(products))\n         })\n         } catch (error) {\n        return Promise.reject(error)\n    }\n}\n\nexport const apifetchProductById = async (productId) => {\n     firestore.collection('products').doc(productId).get().then(snapshot => ({\n         id: snapshot.id,\n         ...snapshot.data()\n     }))\n}\n\n// create Product\nexport const apiCreateProduct =(async (item) => {\n    const [uid, product] = item\n    console.log({item}) \n    let { title, description,price,collection,selection,image } = product\n    try {\n        //console.log({product})\n        //const {fileName, fileId} = file\n        title = slug(title)\n        price = parseInt(price) \n        const createdAt = firebaseTimestamp\n        const newProduct = {uid,description, price, collection,image,selection, createdAt}\n        addProductToSelection(newProduct)\n        return firestore.collection('products').doc(title).set(newProduct)\n                \n    } catch (error) {\n     Promise.reject(error)\n }\n})\n\n\nconst addProductToSelection = async product => {\n    try {\n        console.log({product})\n\n        const selection = product['selection'] || 'products'\n        const collection = !!product['collection'] ? product['collection'] : 'market'\n        const selectionSnaps = await firestore.collection(`/selections/${selection}/${collection}`).get()\n        console.log({selectionSnaps})\n        if(!selectionSnaps.exists) {\n            selectionSnaps.doc(product['id']).set(product)\n            console.log({docs:selectionSnaps.docs})\n            console.log({data:selectionSnaps.data()})\n        \n        }\n         \n    }catch(error) {\n        Promise.reject(error)\n    }\n} \n //MANAGEMENT image storage\nexport const apiStoreImageGalleryDb = async (uid, url, file) => {\n try {\n    firestore.collection('selectionImages').add({\n        imageUrl:`${url}`,\n        uploadedBy:`${uid}`,\n        fileName:`selectionUploads /${file.name}`\n        }).then((fileDb) => {\n           Promise.resolve(fileDb) \n        })    \n } catch (error) {\n    Promise.reject(error)\n}\n}\nexport const apiDeleteImage = async(file) => {\n    try {\n        const storageRef = firebase.storage() \n    auth.currentUser.getIdTokenResult().then(async idTokenResult => {\n        if(idTokenResult.claims.admin) {\n             firestore.collection('selectionImages').doc(file.id).delete().then(res => {\n                return Promise.resolve('file deleted from database')    \n            }).catc(error => {\n                return Promise.reject(`cant delet file from database  ${file.name}`)\n\n             })\n            storageRef.child(`selectionUploads/${file.id}`).delete().then(res => {\n                return Promise.resolve('file deleted from storage')    \n            }).catc(error => {\n                return Promise.reject(`cant delet file ${file.name}`)\n\n            })  \n        }\n    })   \n    } catch (error) {\n        return Promise.reject(`cant delet file ${file.name}`)\n    }\n\n\n}\nexport const apiSelectionUploadsStorage = async (uid,file) => {\n    const metadata = {'contentType': file.type}\n    const storageRef = firebase.storage() \n    storageRef.child(`selectionUploads/${file.id}`).put(file, metadata).then(snapshot => {\n      const messageByteTransfered = snapshot.byteTransfered\n       const  uploaded =  snapshot.totalBytes\n        const snapshhorDownload =  snapshot.ref.getDownloadURL().then(url => {\n            apiStoreImageGalleryDb(uid, url, file)\n            return url \n        })\n})}   \n  ","import {  all , put , call, takeLatest } from 'redux-saga/effects'\nimport {isEmpty} from './../../util/validators'\nimport { fetchCollectionsSuccess, fetchCollectionsFail,\n     fetchSelectionsSuccess, fetchSelectionsFail,\n         fetchProductsFail, fetchProductsSuccess,\n         addProductSuccess, addProductFail\n    } from '../actions/selection'\nimport { FETCH_COLLECTIONS_START, FETCH_PRODUCTS_START, FETCH_SELECTIONS_START,\n     ADD_PRODUCT_START} from './../actions/selection'\nimport {firestore, storageRef, productImageRef, transformCollectionSnapshotToMap} from './../../util/db/db'\nimport {isAuthenticated} from './profil'\n//import {apiCreateProduct} from './../api/selections'\nimport { apiCreateProduct} from './../api/product'\nimport { clearCart } from '../actions/cart'\nimport { GET_COLLECTIONS_TITLE } from '../actions/profil'\n\n//SELECTION \nexport function* fetchSelectionsAsync( ) {\n    try {\n        let collectionsMap = null\n        const userProfil= yield call(isAuthenticated)\n        if(!userProfil ) {\n            yield put(clearCart())\n        } \n        const selectionRef = yield firestore.collection('selections')\n         const snapshot = yield selectionRef.get()\n         collectionsMap = yield call(transformCollectionSnapshotToMap, snapshot)\n        yield put(fetchSelectionsSuccess(collectionsMap))    \n        }\n    catch (error) {\n              yield put(fetchSelectionsFail(error.message))  \n     }\n}\nexport function* onfetchSelectionsStart() {\n    yield takeLatest(FETCH_SELECTIONS_START, fetchSelectionsAsync)\n}\n//COLLECTION managment\nexport function* fetchCollectionsAsync( ) {\n    try {\n        const collections = []\n         firestore.collection('collections').then(collectionRef => (collectionRef.get())).then(snapShot =>\n                {\n                    snapShot.map(collection => {\n                      return  collections.concat(collection.data())\n                    })\n                }\n            )\n        yield put(fetchCollectionsSuccess(collections))    \n    }\n    catch (error) {\n      yield put(fetchCollectionsFail(error.message))  \n     }\n}\nexport function* onfetchCollectionsStart() {\n    yield takeLatest(FETCH_COLLECTIONS_START, fetchCollectionsAsync)\n}\n//Add products \nexport function* createProduct({payload:{uid,product}}){\ntry {\n\n    console.log({payload: {uid, product}})\n    const { image } = product\n    const fileStorage = yield storageRef.child(`${productImageRef}/${uid}/${image.name}`).put(image)\n    const item  = {...product,image:fileStorage.ref.location.path}\n    console.log({fileStorage:fileStorage.ref.location.path},{product}) \n    const productRegistred = yield call(apiCreateProduct,[uid,item])\n    if(!isEmpty(productRegistred)) {\n        const productRegistredSelection = yield call(apiCreateProduct,[uid,item])\n        put(addProductSuccess(productRegistred))\n    }else {\n        put(addProductFail({error:'product cant be added'}))\n    }\n}catch(error) {\n    yield put(addProductFail(error))\n    } \n}\n\nexport function* fetchProductsAsync() {\n    let  products ={}\n    try {\n          firestore\n         .collection('products').get().then(snapshot => {\n             snapshot.forEach( async (product, index) => {\n                const id = product.id\n                 products[id]=  product.data()\n            })\n       }) \n        //products = yield call(apiFetchAllProducts)\n        console.log({products})\n        yield put(fetchProductsSuccess(products))    \n    }\n    catch (error) {\n      yield put(fetchProductsFail(error))  \n     }\n}\n\nexport function* onfetchProductsStart() {\n    yield takeLatest(FETCH_PRODUCTS_START, fetchProductsAsync)\n\n} \nexport function* onAddProductStart() {\n    yield takeLatest(ADD_PRODUCT_START, createProduct)\n\n} \n\nexport function* getCollectionsTitleAsync () {\n    \n}\n\nexport function* onGetCollectionsTitle() {\n    yield takeLatest(GET_COLLECTIONS_TITLE, getCollectionsTitleAsync)\n\n} \n\n// Root ProfilsSagas\n\nexport function* selectionSagas() {\n     yield all([call(onfetchCollectionsStart),\n            call(onfetchProductsStart),\n             call(onfetchSelectionsStart),\n             call(onAddProductStart),\n             call(onGetCollectionsTitle)\n            ])\n }\n","import {takeLatest, call, put, all} from \"redux-saga/effects\";\nimport { SIGNUP_SUCCESS, LOGOUT_SUCCESS, DEL_CART_ON_START} from './../actions/profil'\nimport { clearCart} from './../actions/cart'\nexport function* clearCartOnSignOutSuccess() {\n    yield put(clearCart())\n}\nexport function* clearCartOnStart() {\n    yield put(clearCart)\n}\n\nexport function* onSignOutSuccess() {\n    yield takeLatest( LOGOUT_SUCCESS, clearCartOnSignOutSuccess)\n}\n\nexport function* onDelCartOnStart() {\n    yield takeLatest( DEL_CART_ON_START, clearCartOnStart)\n}\n\n\nexport  function* cartSagas()  {\n    yield all([call(onSignOutSuccess),\n                call(onDelCartOnStart)])\n}","import { all, call  } from 'redux-saga/effects'\nimport { selectionSagas } from './sagas/selection'\nimport { profilSagas } from './sagas/profil'\nimport { cartSagas } from './sagas/cart'\n\nexport default function* rootSaga() {\n   yield all([\n        call(selectionSagas),\n        call(profilSagas),\n        call(cartSagas)\n    ])\n}","import React from 'react'   \nimport { createStore , applyMiddleware } from 'redux'\n//import { createBrowserHistory } from 'history'\nimport logger from 'redux-logger'\nimport { persistStore } from 'redux-persist'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport createSagaMiddleware from 'redux-saga'\nimport rootReducer from './reducers'\nimport rootSaga from './rootSaga'\n//import thunk from 'redux-thunk'\n\n//React.lazy(() => import('./selectors/s'));\nconst sagaMiddleware = createSagaMiddleware()\nconst middleware = [ sagaMiddleware ]\n    \nif (process.env.NODE_ENV === 'development') {\n       middleware.push(logger)\n}\n\nexport const store = createStore( rootReducer, composeWithDevTools(applyMiddleware(...middleware)))\n\nexport const persistor = persistStore(store, ()=> {\n       console.log(store)\n})\nsagaMiddleware.run(rootSaga)\n\n/**@todo*/\n/* \nif ( process.env.NODE_ENV === 'development' )  {\nstore.subscribe(() =>{console.log(`On subscribe State is :: --> ${JSON.stringify(store.getState())}`)\n              })\n} */","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\nimport GlobalStyle from './Global.styling'\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux'\nimport { BrowserRouter as Router} from 'react-router-dom'\nimport {store, persistor} from './store/store'\nimport { PersistGate } from 'redux-persist/integration/react'\n\nReactDOM.render(\n    <Provider store={store} >\n    <Router>\n    <PersistGate  persistor={ persistor }>\n      <App />\n      </PersistGate>\n    </Router>\n    <GlobalStyle />\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\nif(module.hot) {\n  module.hot.accept()\n}"],"sourceRoot":""}