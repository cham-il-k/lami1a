{"version":3,"sources":["config/testing.js","config/index.js","util/db/db.js","store/api/selections.js","util/is-empty.js","store/api/profils.js","store/actions/profil.js","store/actions/cart.js","store/selectors/cart.js","components/Cart-Icon/cart-icon.styled.jsx","components/variables.js","components/Cart-Icon/Cart-Icon.jsx","components/Cart-Item/cart-item.styled.jsx","components/Cart-Item/Cart-Item.jsx","components/CustomButton/CustomButton.styled.jsx","components/CustomButton/CustomButton.jsx","components/Cart-Dropdown/cart.dropdown.styled.jsx","components/Cart-Dropdown/Cart-Dropdown.jsx","components/Logo/logo.styled.jsx","components/Logo/Logo.jsx","store/selectors/profil.js","components/Header/header-styled.jsx","components/Header/Header.jsx","store/selectors/selection.js","components/SelectionItem/selection-item-styled.jsx","components/SelectionItem/Selection-Item.jsx","components/Selection/selection.styled.jsx","store/actions/selection.js","components/Selection/Selection.jsx","pages/about/about-styled.jsx","pages/about/about.jsx","components/Stripe-Button/Stripe-Button.jsx","components/Checkout-Item/checkout.item.styled.jsx","components/Checkout-Item/Checkout-Item.jsx","pages/checkout/checkout.styled.jsx","pages/checkout/checkout.jsx","components/Collection-Item/collection-item.styled.jsx","components/Collection-Item/Collection-Item.jsx","components/Collection-Preview/collection-preview.styled.jsx","components/Collection-Preview/Collection-Preview.jsx","components/With-Spinner/with-spinner.styles.jsx","components/With-Spinner/With-Spinner.jsx","components/Collections-Overview/collections.overview.styled.jsx","components/Collections-Overview/Collections-Overview.jsx","pages/collectionPage/collection.styled.jsx","pages/collectionPage/collectionPage.jsx","pages/shop/shop.jsx","components/Product-Item/product-item.styled.jsx","components/Product-Item/Product-Item.jsx","pages/productsPage/products-styled.jsx","pages/productsPage/productsPage.jsx","pages/profil/profil.styled.jsx","pages/profil/collection.styled.jsx","components/FormInput/FormInput-styled.jsx","components/FormInput/FormInput.jsx","components/WithAuthorization/withAuthorization.jsx","pages/profil/profilProducts.jsx","store/api/messages.js","pages/profil/profilMessages.jsx","store/actions/message.js","pages/contact/contact.styled.jsx","pages/contact/contact.jsx","components/SignUp/signUp.styled.jsx","components/SignUp/SignUp.jsx","components/SignIn/signIn.styled.jsx","components/SignIn/SignIn.jsx","pages/main/main.styled.jsx","pages/main/main.jsx","components/Footer/Footer-styled.jsx","components/Footer/Footer.jsx","app-styled.jsx","App.jsx","serviceWorker.js","store/reducers/reducersUtils.js","store/reducers/profil.js","store/reducers/cartUtils.js","store/reducers/cart.js","store/reducers/selection.js","store/reducers/index.js","util/db/auth.firebase.js","store/sagas/profil.js","store/sagas/selection.js","store/sagas/cart.js","store/rootSaga.js","store/store.js","index.js","config/dev.js"],"names":["config","secrets","jwt","dbUrl","env","process","baseConfig","isDev","isTest","port","JWT_SECRET","jwtExp","envConfig","require","merge","firebase","options","firebaseConfig","auth","firestore","functions","transformCollectionSnapshotToMap","Timestamp","selectionsSnapshot","docs","map","selection","data","title","collections","id","imageUrl","routeName","encodeURI","reduce","accumulator","collection","toLowerCase","apifetchCollections","a","get","selectionSnapshot","onSnapshot","snapshot","docRef","apiCreateProduct","uid","product","description","price","file","fileName","fileId","apiSelectionUploadsStorage","url","apiStoreImageGalleryDb","doc","set","then","Promise","resolve","reject","add","uploadedBy","name","fileDb","error","metadata","type","storage","child","put","byteTransfered","totalBytes","ref","getDownloadURL","isEmpty","value","undefined","Object","keys","length","trim","apiRegister","cred","console","log","email","password","login","createUserWithEmailAndPassword","user","userRef","products","apiCreateUserProfilDocument","profilCred","catch","emplacement","httpsCallable","getUidFromEmail","userUid","source","createdAt","Date","userProfil","profilRef","profilSnapshot","exists","profilSnap","message","apiUpdateCredential","updateCred","address","city","country","currentUser","updateProfile","res","update","setCurrentProfil","profil","payload","signUpSuccess","userCred","SigninSuccess","SigninFail","toggleCartHidden","addItem","item","selectCart","state","cart","selectCartItems","createSelector","cartItems","selectCartHidden","hidden","selectCartItemsCount","accumalatedQuantity","cartItem","quantity","selectCartTotal","CartContainer","styled","div","ShoppingIcon","ItemCountContainer","span","mapStateToProps","createStructuredSelector","itemCount","connect","dispatch","onClick","className","icon","faShoppingCart","CartItemContainer","CartItemImage","img","ItemDetailsContainer","CartItem","src","alt","buttonStyles","css","invertedButtonStyles","googleSignInStyles","getButtonStyles","props","isGoogleSignIn","inverted","CustomButtonContainer","button","CustomLinkContainer","Link","CustomInputContainer","input","CustomButton","children","link","CartDropdownContainer","CartDropdownButton","EmptyMessageContainer","CartItemsContainer","withRouter","history","key","push","LogoContainer","NameSite","TeteLogo","YadLogo","bat","keyframes","CorLogo","Point","LogoBox","to","selectProfil","selectCurrentProfil","currentProfil","authenticated","selectCurrentCollection","selectCurrentProducts","selectCurrentMessages","messages","selectCurrentUsers","users","HeaderContainer","OptionsContainer","OptionLink","logOutStart","selectedSelection","selectSelectedSelections","selections","selectSelections","isFetching","collectionsTitle","productsTitle","selectionsTitle","SelectionItemContainer","BackgroundImageContainer","ContentContainer","ContentTitle","ContentSubtitle","size","imageUrlrep","linkUrl","match","toUpperCase","SelectionMenuContainer","fetchCollectionsSuccess","errors","fetchCollectionsFail","fetchProductsSuccess","addProductSuccess","Selection","menus","this","otherProps","Component","fetchSelections","AboutContainer","about","StripeCheckoutButton","priceForStripe","publishableKey","PUBLIC_KEY","label","billingAddress","shippingAddress","currency","amount","panelLabel","token","axios","post","method","response","alert","JSON","parse","stripeKey","CheckoutItemContainer","ImageContainer","TextContainer","QuantityContainer","RemoveButtonContainer","clearItem","clearItemFromCart","removeItem","CheckoutPageContainer","CheckoutHeaderContainer","HeaderBlockContainer","TotalContainer","WarningContainer","total","CollectionItemContainer","BackgroundImage","CollectionFooterContainer","NameContainer","PriceContainer","LinkProduct","addProduct","edition","desc","tags","CollectionPreviewContainer","TitleContainer","h1","PreviewCollections","PreviewCollection","path","entries","i","SpinnerOverlay","SpinnerContainer","WithSpinner","WrappedComponent","isLoading","CollectionsOverviewContainer","CollectionsOverviewContain","compose","index","otherCollectionProps","CollectionPageContainer","CollectionTitle","h2","CollectionItemsContainer","CollectionPageContain","ownProps","selectionId","params","filter","items","forEach","col","shopPage","fetchProductsStart","exact","render","ProductItemContainer","AddButton","ProductFooterContainer","ProductItemCompose","location","ProductsPageContainer","ProductsTitle","ProductsItemsContainer","ProductsPageContain","collectionId","productSlug","masel","elem","sel","productsCollection","prod","MainContainer","ProfilContainer","CollectionContainer","ProfilTitle","ButtonsBarContainer","Message","ProductContainer","FileContainer","ProductTitle","AddProductContainer","SelectContainer","shrinkLabelStyles","GroupContainer","FormInputContainer","FormTextAreaContainer","textarea","FormInputLabel","FormInput","handleChange","onChange","withAuthorization","ComposedComponent","Autenticated","rest","composedProfilProducts","createProduct","addProductStart","useState","credential","setCredential","setProduct","notify","toast","handleSubmitProfil","event","preventDefault","handleSubmitProduct","handleChangeProfil","target","moncred","handleChangeProduct","monprod","onSubmit","required","defaultValue","rows","cols","stopPropagation","files","image","accept","requestNotificationPermissions","messaging","requestPermission","getToken","currentToken","composedProfilMessages","createMessageStart","setMessage","handleSubmitMessage","handleChangeMessage","monMessage","ContactContainer","ContactTitle","sendMessage","createMessage","text","handleSubmit","messageRefdb","appearance","SignUpContainer","SignUpTitle","signUpStart","userCredential","confirmPassword","SignInContainer","SignInTitle","googleSigninStart","emailSigninStart","component","Contact","extact","About","CheckoutPage","productsPage","FooterContainer","NavigationContainer","CustomAContainer","CopyRight","Footer","loading","href","AppContainer","checkProfilSession","fetchSelectionsStart","useEffect","Boolean","window","hostname","removeProductsFromProfil","initialState","status","admin","profilReducer","action","profils","addItemToCart","cartItemToAdd","find","removeItemFromCart","cartItemToRemove","INITIAL_STATE","cartReducer","selectionReducer","persistConfig","whitelist","rootReducer","combineReducers","persistReducer","googleProvider","GoogleAuthProvider","setCustomParameters","prompt","getCurrentProfil","unsubscribe","onAuthStateChanged","userAuth","getSnapShotData","googleSignIn","signInAfterSignUP","signUp","emailSignIn","logout","updateProfilAsync","isAuthenticated","onUpdateStart","onGoogleSignInStart","onEmailSignInStart","onSignUpSuccess","onSignUpStart","onLogoutStart","onCheckProfilSession","profilSagas","signInWithPopup","call","profilData","profilCredStr","restData","signInWithEmailAndPassword","signOut","credUpdate","takeLatest","all","fetchSelectionsAsync","onfetchSelectionsStart","fetchCollectionsAsync","onfetchCollectionsStart","fetchProductsAsync","onfetchProductsStart","onAddProductStart","getCollectionsTitleAsync","onGetCollectionsTitle","selectionSagas","collectionsMap","selectionRef","collectionRef","snapShot","concat","productRegistred","colSnapshot","clearCartOnSignOutSuccess","onSignOutSuccess","cartSagas","rootSaga","sagaMiddleware","createSagaMiddleware","middleware","store","createStore","composeWithDevTools","applyMiddleware","run","persistor","persistStore","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","adminEmail","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","mapKey","apiUrl","cert","stripe_key","stripe_pass"],"mappings":"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","file":"static/js/main.fc4b6337.chunk.js","sourcesContent":["export const config = {\n  secrets: {\n    jwt: 'learneverything'\n  },\n  dbUrl: 'mongodb://localhost:27017/api-design-test'\n}\n","import { merge } from 'lodash'\nconst env = process.env.NODE_ENV || 'development'\n\nconst baseConfig = {\n  env,\n  isDev: env === 'development',\n  isTest: env === 'testing',\n  port: 8080,\n  secrets: {\n    jwt: process.env.JWT_SECRET,\n    jwtExp: '100d'\n  }\n}\n\nlet envConfig = {}\n\nswitch (env) {\n  case 'dev':\n  case 'development':\n    envConfig = require('./dev').config\n    break\n  case 'test':\n  case 'testing':\n    envConfig = require('./testing').config\n    break\n  default:\n    envConfig = require('./dev').config\n}\n\nexport default merge(baseConfig, envConfig)\n","import * as firebase from 'firebase/app'\n//import * as firebaseui from 'firebaseui'\nimport 'firebase/auth'\nimport 'firebase/firestore'\nimport 'firebase/functions'\nimport 'firebase/storage'\nimport options from './../../config'\nconst slug = require('slug')\n\n/* firebaseApp.onLog((level='error')=> {\n  console.log(firebaseApp)\n})\n*/\nfirebase.initializeApp(options.firebaseConfig) \nexport const auth = firebase.auth()\nexport const firestore = firebase.firestore()\nexport const storageRef = firebase.storage()\nexport const functions =  firebase.functions()\n//auth.functions().useFunctionsEmulator('http://localhost:5001')\nexport default firebase\nexport const {\n    Timestamp\n  } = firebase.firestore\n\n\n/**\n * tools \n * @param {string} selectionName \n */\n export const addSelection = async (selectionName) => {\n   const objectToAdd = Object.entries([])\n   let writeBatch = firestore.batch()\n   try {\n     // recup collection Ref \n     const collectionRef = await firestore.collection(selectionName)\n     //init le write batch \n     // la boucle de credations des collections  \n     const querySnapshot = await collectionRef.get()\n     if (querySnapshot.empty) {\n       objectToAdd.forEach(async entry => {\n         // creation des objects lié  la clé  key  \n         const newDocRef = collectionRef.doc(`${entry[0]}`)\n         writeBatch.set(newDocRef, entry[1])\n       })\n     }\n      writeBatch.commit().then(res => ({\n       error: null,\n       message: `batch commit ${res}`\n     }))\n   } catch (error) {\n     return {\n       error: true,\n       message: `batch commit error  ${error}`\n     }\n   }\n }\n export const transformCollectionSnapshotToMap = (selectionsSnapshot) => {\n  const transformedCollection = selectionsSnapshot.docs.map(selection => {\n    const { title, collections, id, imageUrl} = selection.data()\n    return {\n      routeName: encodeURI(title),\n      id,\n      title,\n      imageUrl,\n      collections\n    }\n  })\n     return  transformedCollection.reduce((accumulator, collection) => {\n        accumulator[collection.title.toLowerCase()]= collection\n        return accumulator\n    },{})\n}\n\nexport const createContatctDocument = (country, email, message) => {\n  if(email) {\n    firestore.collection('contact').get().then(snapshot => {\n      snapshot.docs.map(emailent => (emailent===email))\n    })\n  }  \n  const collectionRef = firestore.collection('contact')\n\n\n}\n\n/**\n * @augments (collectionRef, [IdsRef])\n */\nexport  const  readConcurrently = async (collection, ids) => {\n\n  const docSnap =  ids.map(id => collection.doc(id).get())\n  const result = await Promise.all(docSnap)\n  return result.map(v => v.data())  \n}\n\n/**\n * Call admin privileges token\n * @param {email} param0 \n */\n\nexport const adminCheck =(userRef) => {\n  userRef.getIdTokenResult().then(idTokenResult => {\n    if(idTokenResult.claims.admin) {\n      /**\n       * @todo setProfilAdmin links \n       */\n    }else {\n\n\n    }\n  })\n\n}\n/***\n * manage products collection\n */\n\nexport const createProductsCollection = async () => {\n  const collectionSnapshot = await firestore.collection('collections').get()\n  const collectionMap = new Map()\n  collectionSnapshot.docs.forEach(async (docSnapShot) => {\n    const {title, selection, items } = await docSnapShot.data()\n    items.forEach(async (item ) => {\n      const product = {\n        ...item,\n        collection:title,\n        selection\n      }\n      dbCreateProduct(product)\n    } ) \n  })\n\n}\n\n\nexport const dbCreateProduct = async (doc) => {\n  const slugName = slug(doc.name)\n  await firestore.collection('products').doc(slugName).set({ ...doc})  \n}\n\nexport const dbDeletProduct = (doc) => {\n\n  firestore.collection('products').doc(doc).delete()  \n}\n\nexport const dbUpdateProduct = ({id, doc}) => {\n\n  firestore.collection('products').doc(id).update({doc})  \n}\n/**\n * reate galery products/ and Selections\n * @param {*} param0 \n */\nexport const storeImageRef = (user, url, fileName) =>  {\n  \n  firestore.collection('selectionGallery').add({\n    imageUrl:`${url}`,\n    admin:`${user.uid}`,\n    fileName:`selectionGallery/${fileName}`\n  }).then(() => ({message:'image is stored'}))\n  .catch((err) => ({\n    err\n  }))\n}\n\nconst deletImage = (imageId) => {\n  auth.currentUser.getIdTokenResult().then(idTokenResult => {\n    if(idTokenResult.claims.admin){\n      firestore.collection('selectionGallery').doc(imageId).delete()\n    }\n  } )\n}\n\n/**\n * Quries\n */\n\nconst querySelection = ({...arg}) => {\n\n\n  firestore.collection(arg.collection).orderBy('date', 'desc')\n  firestore.collection(arg.collection).orderBy('date', 'desc').limit(20)\n  firestore.collection(arg.collection).orderBy('date', 'desc').startAfter('las')\n  firestore.collection(arg.collection).orderBy('date', 'desc').startAt('lastweek')\n  firestore.collection(arg.collection).orderBy('date', 'desc').endAt('lastweek')\n  firestore.collection(arg.collection).orderBy('date', 'desc').endBeforet('lastweek')\n  firestore.collection(arg.collection).orderBy('date', 'desc').where('date','<=','today').where('name','==','ja')\n  firestore.collection(arg.collection).orderBy('date', 'desc').where('products','array-contains','tivres').where('name','==','ja')\n  /**\n   * thinking aboutcomposites indexe\n   */\n  firestore.collection(arg.collection).orderBy('date', 'desc').where('autor','array-contains','hicam').where('livre','==','tafsir')\n  /**\n   * Roles\n    match /posts/{documents} {\n     getRole() {\n      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles\n  }\n\n    allow read;\n    allow update: if  getRoles().hasAny (['edit','admin']) == true\n    allow write: if  getRoles().hasAny (['admin']) == true\n/// ACL\n  match /securedata/{document}\n  allow read ;\n  allow write: if resource.data.members.hasAny(request.auth.uid)\n\n*/\n\n  /**\n   *  \n   * \n   * */ \n   }  ","import firebase, {\n    firestore, auth\n} from '../../util/db/db'\n/**\n * Selections queries\n */\n\nexport const apifetchSelections = async () => {\n    try {\n        const selectionSnapshot = await firestore.collection('selections').get()\n        const selections = []\n        console.log({selectionSnapshot})\n        await selectionSnapshot.onSnapshot(async snapshot => {\n            console.log(`Api Fetch Selections ${snapshot.docs}`)\n             selections = await snapshot.docs.map(docRef => {\n                        return docRef.data()\n                    })\n        }) \n        return selections\n    } catch (error) {\n        throw error\n    }    \n}\n export const apiCreateCollections = async (collections) => {\n    try {\n        const collectionsRef = await firestore.collection('collections')\n        collections.forEach(collection => {\n                collectionsRef.onSnapshot(async snapshot => {\n                collectionsRef.doc(collection[0]).set(collection[1])\n           }) \n        })\n    } catch (error) {\n        throw error\n    }    \n}\n\nexport const apiProductsCollection = async ({collectionKey, products}) => {\n    try {\n        const productsRef = await firestore.collection('products')\n         const docRef = await productsRef.doc(collectionKey)     \n           const docSnapshot = docRef.get()\n           if(!docSnapshot.exists) {\n               docRef\n            .docRef.set(products)\n           } \n    \n    } catch (error) {\n        throw error\n    }    \n}\nexport const apiShopProducts = async () => {\n    try {\n        const productsRef = await firestore.collection('products')\n        const productsSnapshot = productsRef.get()\n        productsSnapshot.docs.map((colDoc) => {\n                const items = colDoc.data()\n                return items.reduce((acc, item) => {\n                    acc[item.id] = item\n                    return acc\n                }, {})\n            })\n         } catch (error) {\n        throw error\n    }\n}\n\nexport const apifetchCollections = async () => {\n    const selectionSnapshot = await firestore.collection('selections').get()\n    const collections = []\n\n    selectionSnapshot.onSnapshot(async snapshot => {\n       // console.log(`Api Fetch collections ${snapshot.docs}`)\n        collections = await snapshot.docs.map(docRef => {\n            const collection_Ref = docRef.get()\n            return collection_Ref.data()\n        })\n    })\n    return collections\n}\nexport const apifetchProductById = async (productId) => {\n     firestore.collection('products').doc(productId).get().then(snapshot => ({\n         id: snapshot.id,\n         ...snapshot.data()\n     }))\n}\nexport const apifetchProducts = async (productId) => {\n    firestore.collection('products').get().then(async snapshot => {\n        const products = await snapshot.docs.map(product => ({\n            id: product.id,\n            ...product.data()\n        }))\n        return products\n    })\n}\n\n/**Batch CRUD\n * product manageement \n * @param {string} productId \n */\n\nexport const apiaddCollectionAndDocuments = async (collectionKey, collections) => {\n    const collectionRef = firestore.collection(collectionKey)\n     const batch = firestore.batch()\n     collections.forEach(object => {\n       const newCollRef = collectionRef.doc(object.title)\n       batch.set(newCollRef,object)  \n     })\n     return await batch.commit()  \n  }\n\nexport const apiCreateProduct =(async ({uid,product}) => {\n    const {  title, description,price,collection,file } = product\n    try {\n        const {fileName, fileId} = file\n        const url = await apiSelectionUploadsStorage(uid,file)\n        const  fileDb = await  apiStoreImageGalleryDb(uid,url, file)\n        firestore.collection('products').doc(title).set({ description, price, collection,fileName,fileId})\n        .then(async product => {\n            return Promise.resolve(product)\n        } )\n    } catch (error) {\n     Promise.reject(error)\n }\n})\n\n\n  //MANAGEMENT image storage\nexport const apiStoreImageGalleryDb = async (uid, url, file) => {\n try {\n    firestore.collection('selectionImages').add({\n        imageUrl:`${url}`,\n        uploadedBy:`${uid}`,\n        fileName:`selectionUploads /${file.name}`\n        }).then((fileDb) => {\n           Promise.resolve(fileDb) \n        })    \n } catch (error) {\n    Promise.reject(error)\n}\n}\nexport const apiDeleteImage = async(file) => {\n    try {\n        const storageRef = firebase.storage() \n    auth.currentUser.getIdTokenResult().then(async idTokenResult => {\n        if(idTokenResult.claims.admin) {\n             firestore.collection('selectionImages').doc(file.id).delete().then(res => {\n                return Promise.resolve('file deleted from database')    \n            }).catc(error => {\n                return Promise.reject(`cant delet file from database  ${file.name}`)\n\n             })\n            storageRef.child(`selectionUploads/${file.id}`).delete().then(res => {\n                return Promise.resolve('file deleted from storage')    \n            }).catc(error => {\n                return Promise.reject(`cant delet file ${file.name}`)\n\n            })  \n        }\n    })   \n    } catch (error) {\n        return Promise.reject(`cant delet file ${file.name}`)\n    }\n\n\n}\nexport const apiSelectionUploadsStorage = async (uid,file) => {\n    const metadata = {'contentType': file.type}\n    const storageRef = firebase.storage() \n    storageRef.child(`selectionUploads/${file.id}`).put(file, metadata).then(snapshot => {\n      const messageByteTransfered = snapshot.byteTransfered\n       const  uploaded =  snapshot.totalBytes\n        const snapshhorDownload =  snapshot.ref.getDownloadURL().then(url => {\n            apiStoreImageGalleryDb(uid, url, file)\n            return url \n        })\n})}   \n  ","export const isEmpty = (value) => {\n    return ( value === undefined || \n        value === null ||\n        (typeof value === 'object' && Object.keys(value).length === 0) ||\n        (typeof value === 'string' && value.trim().length === 0) \n        ) \n        \n}","import {\n    firestore, auth, functions\n} from '../../util/db/db'\nimport { isEmpty } from '../../util/is-empty'\nimport moduleName from 'module'\nimport {setCurrentProfil} from './../actions/profil'\n\nexport const apiRegister = async (cred) => {\n    try {\n    console.log({cred})\n    const email  = cred[0]\n    const password = cred[1]\n    const login = cred[2]\n       \n     auth.createUserWithEmailAndPassword(\n            email,\n            password\n          ).then(async ({userRef:{user}})  => {\n              const userProfil = {uid: user.uid, email, login,products:[], collections:[]}\n              const profilCred = await apiCreateUserProfilDocument(user.uid,email)\n              console.log({profilCred})\n              return profilCred \n            }).catch(async error => {\n                console.log({error},{emplacement: 'catch car existe deja emplacement then'})\n                if(error['code'] === \"auth/email-already-in-use\"){\n                 \n                   const getUidFromEmail= await functions.httpsCallable('getUidFromEmail')\n                   getUidFromEmail({email}).then(async data => {\n                    const userUid = data['data'] \n                console.log({error},{emplacement: 'then from functions '})\n                        const profilCred = await apiCreateUserProfilDocument(userUid, email)\n                        console.log(profilCred)\n                        return Promise.resolve(profilCred)\n                    }).catch(error => {\n                console.log({error},{emplacement: 'catch apres apprl functions '})\n                    \n                    return Promise.reject(error) \n                    }) \n                }else {\n                console.log({error},{emplacement: 'else n existe pas mais y aprblm'})\n                } \n                })\n        } \n         catch (error) {return Promise.reject(error)\n}}\n\nexport const apiCreateUserProfilDocument = async (uid, email) => {\n    if (isEmpty(email)) return ;\n        try {\n       var getOptions = {\n           source: 'server'\n       };\n       const createdAt = new Date();\n           const userProfil = {email, login:'',products:[], collections:[],createdAt}\n           /* const profilsCollectionRef = await firestore.collection('profils')\n           const profilsCollectionRefSnapshot = await firestore.collection('profils').get()\n           profilsCollectionRefSnapshot.docs.map(async profil => {\n               await console.log({profil})\n           })\n            */\n           console.log({email})\n           const profilRef = await firestore.doc(`/profils/${uid}`)\n            \n            const profilSnapshot = await profilRef.get()   \n            if(profilSnapshot.exists) {\n                   console.log({uid},{profilSnap:profilSnapshot.data()})\n               const profilCred = {\n                   uid,\n                   ...profilSnapshot.data()\n               }\n                return profilSnapshot\n               }else {\n                await profilRef.set(userProfil)\n                const profilCred = {\n                    uid,\n                    ...profilSnapshot.data()\n                }\n                console.log({profilCred}) \n                return profilCred.get()               }\n        } catch (error) {\n           return Promise.reject(error.message)\n       };\n    }\n\nexport const apiGetAllProfils = async () => {\n\n    const profilsDocRefs  = firestore.collection('profils').get().docs\n    if(!!profilsDocRefs) {\n        const profils = await profilsDocRefs.map(profilRef => profilRef.data())\n        return {profils}\n    }else {\n        return {profils: []}\n    }\n} \nexport const apiUpdateCredential = async (updateCred) => {\n    const {uid, login,email, address,city,country} = updateCred\n    try {\n        auth.currentUser.updateProfile({\n            address,city,country,login\n        }).then(res => {\n            return Promise.resolve(`Profile updated ${email}`)\n        })\n       firestore.collection('profils').doc(uid).update({\n            address,city,country,login\n        }).then(res => {\n            return Promise.resolve(`Profile updated ${email}`)\n        })        \n\n    } catch (error) {\n        return Promise.reject({error})\n    }\n}\n\nconst apiGetUserProfil = (uid) => {\n    firestore.collection('profils').doc(uid)\n    .get().then(snapshot => ({uid, ...snapshot.data()}))\n}","import { auth } from \"../../util/db/db\";\nimport { apiRegister, apiGetAllProfils} from './../api'\n/**\n * ACTION TYPE\n */\nexport const EMAIL_SIGNIN_START = 'EMAIL_SIGNIN_START';\nexport const GOOGLE_SIGNIN_START = 'GOOGLE_SIGNIN_START';\n\nexport const SIGNIN_SUCCESS = 'SIGNIN_SUCCESS'\nexport const SIGNIN_FAIL = 'SIGNIN_FAIL'\n\nexport const SIGNUP_START = 'SIGNUP_START';\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS'\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL'\n\nexport const LOGOUT_START = 'LOGOUT_START'\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS'\nexport const LOGOUT_FAIL = 'LOGOUT_FAIL'\n\nexport const CHECK_PROFIL_SESSION = 'CHECK_PROFIL_SESSION'\n\nexport const SET_CURRENT_PROFIL = 'SET_CURRENT_PROFIL'\nexport const SELECT_CURRENT_PROFIL = 'SELECT_CURRENT_PROFIL'\n\nexport const UPDATE_PROFIL_START = 'UPDATE_PROFIL_START'\nexport const UPDATE_PROFIL_SUCCESS = 'UPDATE_PROFIL_SUCCESS'\nexport const UPDATE_PROFIL_FAIL = 'UPDATE_PROFIL_FAIL'\nexport const ADD_USER_START = 'ADD_USER_START'\nexport const ADD_USER_SUCCESS = 'ADD_USER_SUCCESS'\nexport const ADD_USER_FAIL = 'ADD_USER_FAIL'\n\nexport const GET_COLLECTIONS_TITLE = 'GET_COLLECTIONS_TITLE'\nexport const GET_ALL_PROFILS = 'GET_ALL_PROFILS'\nexport const DEL_CART_ON_START = 'DEL_CART_ON_START'\nexport const ADD_TO_COLLECTION = 'ADD_TO_COLLECTION';\nexport const GET_COLLECTION = 'GET_COLLECTION';\nexport const REMOVE_FROM_COLLECTION = 'REMOVE_FROM_COLLECTION';\n\n \nexport const checkProfilSession = () => ({\n    type: CHECK_PROFIL_SESSION\n})\n\nexport const setCurrentProfil = (profil) => {\n   console.log({profil})\n    return { \n       type:SET_CURRENT_PROFIL,\n        payload: profil\n    }\n} \nexport const signUpStart = (profilCredential) => {\n    return {\n        type:SIGNUP_START,\n        payload: profilCredential \n    }\n}\nexport const  signUpSuccess = async (userCred) => {\n    console.log({userCred}) \n    return {\n            type: SIGNUP_SUCCESS,\n            payload:userCred\n        }\n}  \nexport const signUpFail = (error) => {\n    return {\n        type:SIGNUP_FAIL,\n        error:error\n    }\n}\nexport const emailSigninStart = (emailAndPassword) => ({\n    type: EMAIL_SIGNIN_START,\n    payload:emailAndPassword\n})\n\nexport const SigninSuccess = (profil) => {\n\nconsole.log({profil})\n\n    return     {\n    type: SIGNIN_SUCCESS,\n    payload:profil\n}\n}\n\nexport const SigninFail = (error) => ({\n    type: SIGNIN_FAIL,\n    payload: error\n    \n})\n\nexport const googleSigninStart = () => ({\n    type: GOOGLE_SIGNIN_START,\n    \n})\n\n\n\nexport const logOutStart = () => {\n    return {\n        type: LOGOUT_START,\n    }\n}\n\nexport const logOutSuccess = () => {\n    return {\n        type: LOGOUT_SUCCESS,\n        \n    }\n}\nexport const logOutFail = (error) => {\n    return {\n        type: LOGOUT_FAIL,\n        payload:error\n    }\n}\n\nexport const updateProfilStart = (credUpdate) => ({\n    type: UPDATE_PROFIL_START,\n    payload:credUpdate\n})\n\nexport const updateProfilSuccess = () => ({\n    type: UPDATE_PROFIL_SUCCESS,\n})\n\nexport const updateProfilFail = (error) => ({\n    type: UPDATE_PROFIL_FAIL,\n    error:error\n})\n\nexport const addUserStart = (credUser) => ({\n    type:ADD_USER_START,\n    payload:credUser\n})\n\nexport const addUserSuccess = () => ({\n    type:ADD_USER_SUCCESS,\n    \n})\n\nexport const addUserFail = () => ({\n    type:ADD_USER_FAIL,\n})\n\nexport const getCollectionsTitle = async () => {\n    return {\n        type: GET_COLLECTIONS_TITLE,\n    }\n}\nexport const getAllProfils = async () => {\n    const profils = await apiGetAllProfils()\n    console.log(profils) \n    return {\n        type: GET_ALL_PROFILS,\n        payload: profils\n}\n}\nexport const delCartOnStart = () => {\n    return {\n        type:DEL_CART_ON_START\n    }\n}","export  const  TOGGLE_CART_HIDDEN = 'TOGGLE_CART_HIDDEN'\nexport  const ADD_ITEM = 'ADD_ITEM'\nexport  const REMOVE_ITEM = 'REMOVE_ITEM'\nexport  const CLEAR_ITEM_FROM_CART = 'CLEAR_ITEM_FROM_CART' \nexport  const CLEAR_CART = 'CLEAR_CART' \n\n\nexport const toggleCartHidden = () => ({\n  type:TOGGLE_CART_HIDDEN\n});\n\nexport const addItem = item => ({\n  type: ADD_ITEM,\n  payload: item\n});\n\nexport const removeItem = item => ({\n  type: REMOVE_ITEM,\n  payload: item\n});\n\nexport const clearItemFromCart = item => ({\n  type: CLEAR_ITEM_FROM_CART,\n  payload: item\n});\n  \nexport const clearCart = () => ({\n  type: CLEAR_CART\n})","import { createSelector } from 'reselect';\n\nconst selectCart = state => state.cart;\n\nexport const selectCartItems = createSelector(\n  [selectCart],\n  cart => cart.cartItems\n);\n \nexport const selectCartHidden = createSelector(\n  [selectCart],\n  cart => cart.hidden\n);\n\nexport const selectCartItemsCount = createSelector(\n  [selectCartItems],\n  cartItems =>\n    cartItems.reduce(\n      (accumalatedQuantity, cartItem) =>\n        accumalatedQuantity + cartItem.quantity,\n      0\n    )\n);\n\nexport const selectCartTotal = createSelector(\n  [selectCartItems],\n  cartItems =>\n    cartItems.reduce(\n      (accumalatedQuantity, cartItem) =>\n        accumalatedQuantity + cartItem.quantity * cartItem.price,\n      0\n    )\n);\n","import styled, {css} from 'styled-components';\nimport { green1, green4 } from './../variables'\n\nexport const CartContainer = styled.div`\n  width: 5rem;\n  height: 5rem;\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n`;\n\nexport const ShoppingIcon = styled.div`\n  position:absolute;\n  font-size: 2.7rem;\n  color:${green4};\n  `;\n\nexport const ItemCountContainer = styled.span`\n  position: absolute;\n  font-size: 1.3rem;\n  top:5px;\n  \n  font-weight: bold;\n  text-align:center;\n  color:${green1};\n`;\n","/**\n * fond bouton \nexport  */\nexport const blue1 = '#ADF';\nexport const blue2 = '#5AF';\nexport const blue3 = '#08F';\nexport const blue4 =  '#025';\nexport const blue41 =  '#AFD';\n\nexport const blanc = '#DDD';\n\nexport const green1 = '#AFA';\nexport const green2 = '#AF5';\nexport const green3 = '#0F0';\nexport const green4 = '#250';\nexport const green51 = '#AA0'; \n\nexport const orange1 ='#FDA';\nexport const orange2 = '#F80'; \nexport const red1 ='#FAA';\nexport const red2 = '#F00';\nexport const redorang = '#A50'; \n\nexport const textVert = '#282';\nexport const textBleu = '#258';\nexport const textBlack = '#222';\nexport const textBlanc = '#DDD';\n\nexport const maxWidth =\"1100px\"\n\n/**\n * logo\n */\nexport const tete = orange1;\nexport const cor = red1;\nexport const yad = green2;\nexport const point = redorang;\n/**forms */\nexport const subText = green1;\nexport const mainText = textBleu;\n\n/**\n * Buttons\n */\nexport const btnV = green2;\nexport const btnB = blue3;\nexport const btnInvert = blanc;\nexport const btnGgl = blue4;\n/**\n * logo\n */\nexport const logoB = '#08F';\nexport const logV = '#AFA'","import React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport { toggleCartHidden } from '../../store/actions/cart';\nimport { selectCartItemsCount } from '../../store/selectors/cart';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faShoppingCart } from '@fortawesome/free-solid-svg-icons'\nimport {\n  CartContainer,\n  ShoppingIcon,\n  ItemCountContainer\n} from './cart-icon.styled';\n\nconst CartIcon = ({ toggleCartHidden, itemCount }) => (\n  <CartContainer onClick={toggleCartHidden}>\n    <ShoppingIcon>\n      <FontAwesomeIcon className=\"shoppingIcon\" icon={faShoppingCart} />\n    </ShoppingIcon>\n    <ItemCountContainer>{itemCount}</ItemCountContainer>\n  </CartContainer>\n);\n\nconst mapDispatchToProps = dispatch => ({\n  toggleCartHidden: () => dispatch(toggleCartHidden())\n});\n\nconst mapStateToProps = createStructuredSelector({\n  itemCount: selectCartItemsCount,\n  toggleCartHidden: toggleCartHidden\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CartIcon);\n","import styled from 'styled-components';\n\nexport const CartItemContainer = styled.div`\n  width: 100%;\n  display: flex;\n  height: 80px;\n  margin-bottom: 15px;\n`;\n\nexport const CartItemImage = styled.img`\n  width: 30%;\n`;\n\nexport const ItemDetailsContainer = styled.div`\n  width: 70%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: center;\n  padding: 10px 20px;\n`;\n","import React from 'react';\n\nimport {\n  CartItemContainer,\n  ItemDetailsContainer,\n  CartItemImage\n} from './cart-item.styled';\n\nconst CartItem = ({ item: { imageUrl, price, name, quantity } }) => (\n  <CartItemContainer>\n    <CartItemImage src={imageUrl} alt='item' />\n    <ItemDetailsContainer>\n      <span>{name}</span>\n      <span>\n        {quantity} x ${price}\n      </span>\n    </ItemDetailsContainer>\n  </CartItemContainer>\n);\n\nexport default CartItem;\n","import styled, { css } from 'styled-components';\nimport { blue4, green3,btnGgl, btnV, btnB, btnInvert, textBleu, textBlack } from './../variables'\nimport {Link} from 'react-router-dom'\n\nconst buttonStyles = css`\n  &:hover {\n    background-color: ${btnInvert};\n    color: ${blue4};\n    border: 1px solid black;\n  }\n`;\n\nconst invertedButtonStyles = css`\n  background-color: white;\n  color: black;\n  border: 1px solid black;\n\n  &:hover {\n    background-color: black;\n    color: white;\n    border: none;\n  }\n`;\n\nconst googleSignInStyles = css`\n  background-color: ${btnGgl};\n  color: ${btnInvert};\n\n`;\n\nconst getButtonStyles = props => {\n  if (props.isGoogleSignIn) {\n    return googleSignInStyles;\n  }\n\n  return props.inverted ? invertedButtonStyles : buttonStyles;\n};\n\nexport const CustomButtonContainer = styled.button`\n  min-width: 165px;\n  background-color: ${btnV};\n   width: auto;\n  height: 50px;\n  letter-spacing: 0.5px;\n  line-height: 50px;\n  padding: 0 35px 0 35px;\n  color:${textBlack};\n  font-size: 15px;\n  text-transform: uppercase;\n  font-family: 'Open Sans Condensed';\n  font-weight: bolder;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n\n  ${getButtonStyles}\n`;\nexport const CustomLinkContainer = styled(Link)`\n  min-width: 165px;\n  width: 165px;\n  height: 50px;\n  text-decoration:none;\n  color:${textBlack};\n   letter-spacing: 0.5px;\n  line-height: 50px;\n  padding: 0 5px 0 5px;\n  font-size: 15px;\n  text-transform: uppercase;\n  font-family: 'Open Sans Condensed';\n  font-weight: bolder;\n  cursor: pointer;\n  display: flex;\n  background-color:${btnB};\n  justify-content: center;\n\n  ${getButtonStyles}\n`;\n\nexport const CustomInputContainer = styled.input`\nmin-width: 165px;\nwidth: 165px;\nheight: 50px;\ncolor:${textBlack} ;\nletter-spacing: 0.5px;\nline-height: 50px;\npadding: 0 5px 0 5px;\nfont-size: 15px;\ntext-transform: uppercase;\nfont-family: 'Open Sans Condensed';\nfont-weight: bolder;\ncursor: pointer;\ndisplay: flex;\nbackground-color:${btnV};\njustify-content: center;\n\n${getButtonStyles}\n`;","import React from 'react';\n\nimport { CustomInputContainer, CustomButtonContainer, CustomLinkContainer } from './CustomButton.styled';\n\nconst CustomButton = ({ children, ...props }) => {\n  if(props.link) {\n    return <CustomLinkContainer {...props}>{children}</CustomLinkContainer>\n\n  } else if(props.input) {\n    return <CustomInputContainer {...props} ></CustomInputContainer>\n\n  }\n  return <CustomButtonContainer {...props}>{children}</CustomButtonContainer>\n\n}\n\nexport default CustomButton;\n","import styled from 'styled-components';\nimport CustomButton from '../CustomButton/CustomButton';\n\nexport const CartDropdownContainer = styled.div`\n  position: absolute;\n  width: 240px;\n  height: 340px;\n  display: flex;\n  flex-direction: column;\n  padding: 20px;\n  border: 1px solid black;\n  background-color: white;\n  top: 90px;\n  right: 40px;\n  z-index: 5;\n`;\n\nexport const CartDropdownButton = styled(CustomButton)`\n  margin-top: auto;\n  font-size:10px;\n`;\n\nexport const EmptyMessageContainer = styled.span`\n  font-size: 18px;\n  margin: 50px auto;\n`;\n\nexport const CartItemsContainer = styled.div`\n  height: 240px;\n  display: flex;\n  flex-direction: column;\n  overflow: scroll;\n`;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { withRouter } from 'react-router-dom';\nimport CartItem from '../Cart-Item/Cart-Item';\nimport { selectCartItems } from '../../store/selectors/cart';\nimport { toggleCartHidden } from '../../store/actions/cart';\n\nimport {\n  CartDropdownContainer,\n  CartDropdownButton,\n  EmptyMessageContainer,\n  CartItemsContainer\n} from './cart.dropdown.styled';\n\nconst CartDropdown = ({ cartItems, history, dispatch }) => (\n  <CartDropdownContainer>\n    <CartItemsContainer>\n      {cartItems.length ? (\n        cartItems.map(cartItem => (\n          <CartItem key={cartItem.id} item={cartItem} />\n        ))\n      ) : (\n        <EmptyMessageContainer>Your cart is empty</EmptyMessageContainer>\n      )}\n    </CartItemsContainer>\n    <CartDropdownButton\n      onClick={() => {\n        history.push('/checkout');\n        dispatch(toggleCartHidden());\n      }}\n    >\n      GO TO CHECKOUT\n    </CartDropdownButton>\n  </CartDropdownContainer>\n);\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n});\n\nexport default withRouter(connect(mapStateToProps)(CartDropdown));\n","import styled, {keyframes, css}  from 'styled-components'\nimport {Link} from 'react-router-dom'\nimport {textBlanc, tete, yad, point,cor, textBlack, bleuDense,green2} from '../variables'\nimport { faTextWidth } from '@fortawesome/free-solid-svg-icons'\n\nexport const LogoContainer = styled.div`\n    position: relative;\n    font-size: 1.4rem;\n    background-color: transparent;\n    margin: -10px -20px ;\n    width:200px;\n    height:70px;\n    flex-direction:column;\n    display:flex;\n      a {\n            text-decoration:none\n    }\n    `\nexport const NameSite = styled(Link)`\n    box-sizing:border-box;\n    line-height:2rem;\n    padding:0;\n    text-decoration:none;\n    text-transform: uppercase;\n    cursor:pointer;\n    margin:50% 50%;\n    color: ${green2} !important;\n`\n\nexport const TeteLogo = styled.div`\nposition: absolute;\ntop:2px;\nleft: 47px;\nwidth:70px;\nheight:70px;\nbackground:linear-gradient(${tete},${cor});\ncolor: ${textBlanc};\nmargin:0 auto;\ntransform: rotate(-45deg);\nborder-radius: 5px;\n`\nexport const YadLogo = styled.div`\nposition: absolute;\nbackground: linear-gradient(${yad},${tete}) ;\ncolor: ${textBlanc};\ntop:25px;\nleft:80px;\nwidth:30px;\nheight:130px;\ntransform: rotate(45deg);\nborder-radius: 5px;\n`\nconst bat = keyframes`\n  from {\n    transform: scale(1.5) rotate(45deg);\n}\n\n  to {\n    transform: scale(1) rotate(45deg);\n}\n`;\n\n// Here we create a component that will rotate everything we pass in over two seconds\nexport const CorLogo = styled.div`\nposition: absolute;\nbackground: linear-gradient(${cor},${point} );\ncolor: ${textBlack};\ntop:60px;\nleft:20px;\nwidth:50px;\nheight:50px;\nz-index:1;\nanimation: ${bat} 2s linear infinite;\ntransition:transform 2s linear infinite;\nborder-radius: 3px;\n\n`\nexport const Point = styled.div`\nposition: absolute;\nbackground-color: ${point};\ncolor: ${textBlack};\ntop:125px;\nleft:30px;\nwidth:30px;\nheight:30px;\ntransform: rotate(45deg);\nborder-radius: 3px;\n`\n","import React from 'react'\nimport {TeteLogo, LogoContainer, CorLogo,YadLogo, NameSite,Point} from './logo.styled'\n\n// google, inverted, handleClick\nexport default function LogoBox({ children, ...props}) {\n    return (\n        <LogoContainer {...props}>\n            <NameSite to=\"/\"> lami1a</NameSite>\n                 \n            <TeteLogo />\n            <CorLogo />\n            <YadLogo/> \n            <Point/>\n        </LogoContainer>\n    )\n}\n","import { createSelector } from 'reselect';\n\nconst selectProfil = state => state.profil;\n\nexport const selectCurrentProfil = createSelector(\n  [selectProfil],\n  profil => profil.currentProfil\n);\n\nexport const selectProfilCollection = profilId => createSelector(\n  [selectProfil],\n  profil => profil.collection\n)\n\nexport const authenticated = () => createSelector(\n  [selectProfil],\n  profil => profil.authenticated\n)\n\nexport const selectCurrentCollection = createSelector(\n  [selectProfil],\n  profil => profil.collection\n);\n\nexport const selectCurrentProducts = createSelector(\n  [selectProfil],\n  profil => profil.products\n);\nexport const selectCurrentMessages = createSelector(\n  [selectProfil],\n  profil => profil.messages\n);\n\nexport const selectCurrentUsers = createSelector(\n  [selectProfil],\n  profil => profil.users\n);\n","\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport {green1, green2, green3, green51, green4, btnInvert} from './../variables'\n\nexport const HeaderContainer = styled.div`\n  height: 70px;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  /* margin-bottom: 25px; */\n`;\n\nexport const LogoContainer = styled.div`\n  height: 100%; \n  padding: 2%;\n  cursor: pointer;\n  background-color:white;\n`;\n\nexport const OptionsContainer = styled.div`\n  width: 75%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n`;\n\nexport const OptionLink = styled(Link)`\n  padding: 10px 10px;\n  font-weight: lighter;\n  font-size: 1.5rem;\n  color:${green4};\n  text-decoration:none;\n  transform: scale(1.1);\n\ttransition: transform 6s cubic-bezier(0.25, 0.45, 0.45, 0.95);\n  &:hover {\n\t  cursor: pointer;\n    opacity: 0.9;\n\t  }\n\n`;\nexport const OptionLinkHide = styled(Link)`\npadding: 10px 15px;\ncursor: pointer;\ndisplay:none;\nfont-weight: lighter;\nfont-size: 1.5rem;\ncolor:${green4};\ntext-decoration:none;\n`;\nexport const MainBar =styled.div`\n\n`\nexport const SecondBar =styled.div`\n\n`","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter} from 'react-router-dom'\nimport CartIcon from '../Cart-Icon/Cart-Icon';\nimport CartDropdown from '../Cart-Dropdown/Cart-Dropdown';\nimport { createStructuredSelector } from 'reselect'\nimport LogoBox from './../Logo/Logo'\nimport { selectCurrentProfil } from '../../store/selectors/profil';\nimport { selectCartHidden } from '../../store/selectors/cart';\nimport {isEmpty} from './../../util/is-empty'\nimport { logOutStart } from './../../store/actions/profil'\nimport {\n  HeaderContainer,\n  LogoContainer,\n  OptionsContainer,\n  OptionLink,\n  MainBar,\n  OptionLinkHide,\n  SecondBar\n} from './header-styled';\nconst Header = ({ currentProfil, hidden, logOutStart }) => {\n    return (\n      <HeaderContainer>\n        <LogoContainer to='/'>\n          <LogoBox className='logo' />\n        </LogoContainer>\n        <OptionsContainer>\n          { (!isEmpty(currentProfil)) ? (\n           <>\n           <OptionLink to='/profil'>Profil</OptionLink>\n           <OptionLink to='/collection'>Collection</OptionLink>\n           <OptionLink to='/messages'>Messages</OptionLink>\n          \n        </>): (<></>)\n          }<OptionLink to='/shop'>SHOP</OptionLink>\n          <OptionLink to='/contact'>CONTACT</OptionLink>\n          { \n           !isEmpty(currentProfil)  ? (\n           \n          <OptionLink to='/' onClick={logOutStart}>\n              SIGN OUT\n          </OptionLink>\n          \n          ): (\n              <OptionLink to='/signup'>SIGN in/up </OptionLink>\n            )}\n          <CartIcon />\n        </OptionsContainer>\n        {hidden ? null : <CartDropdown />}\n        \n      </HeaderContainer>\n    );\n\n  }\n const mapStateToProps = createStructuredSelector({\n  currentProfil: selectCurrentProfil,\n  hidden: selectCartHidden\n});\nconst mapDispatchToProps = (dispatch) => ({\n  logOutStart : () => dispatch(logOutStart())\n})\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Header))\n","import {\n  createSelector\n} from 'reselect';\n\nconst selectedSelection = state => state.selection;\n\n//const mapSelection =  new Map(selectSelection)\nexport const selectSelectedSelections = createSelector(\n  [selectedSelection],\n  selection => selection.selections\n)\n\n\nexport const selectIsSelectionFetching = createSelector(\n  [selectedSelection],\n  selection => selection.isFetching\n);\n\nexport const selectIsSelectionsLoaded = createSelector(\n  [selectedSelection],\n  selection => !!selection.selections\n);\n\nexport const selectCollectioTitle = createSelector(\n  [selectedSelection],\n  selection => selection.collectionsTitle\n);\n\nexport const selectProductsTitle = createSelector(\n  [selectedSelection],\n  selection => selection.productsTitle\n);\n\nexport const selectSelectionsTitle = createSelector(\n  [selectedSelection],\n  selection => selection.selectionsTitle\n);\n\nexport const selectCollectionForOverview = selectionId => createSelector(\n  [selectSelectedSelections],\n  selections => {\n    console.log(selections[selectionId])\n    return (selections ? selections[selectionId]: [])\n  }\n)\n\nexport const selectSelections = createSelector(\n  [selectSelectedSelections],\n  selections =>  selections ?  Object.keys(selections).map(selection => {\n     return selections[selection]\n    }) : []\n  )\nexport const selectProductsCollection = (selectionId) => createSelector(\n  [selectSelections],\n  selections => {\n    let products = []\n    const selection = selections.filter(selection => {\n       return selection['title'] === selectionId\n     })\n    products = Object.entries(selection[0]['collections']).map(collection => {\n      const product = {\n        collection:collection[1]['title'],\n        selection:collection[1]['selection'],\n        items:collection[1]['items']\n      }\n      return product\n    })\n    return products  \n  }\n)\nexport const selectProducts = (collectionId) => createSelector(\n  [selectSelections],\n  selections => {\n    let products = []\n    \n    let selection = selections.map(selection => {\n        const colNames = Object.entries(selection['collections'])\n      return colNames.filter(col => (col[0]=== collectionId))\n     })\n     selection = selection.filter(elem => elem.length != 0)\n     const masel = selection[0][0][1]\n      products = (selection[0][0][1]['items']).map(item => {\n     const collection = masel['title']\n     const selection = masel['selection']\n     const prod = {\n        selection,\n        collection,\n        product:item\n      }\n      return prod\n    })\n    return products  \n  }\n)\n\nexport const selectSelectionsForShopPreview = collectionId => createSelector(\n  [selectSelections],\n  selections => {\n      const productDeCollection = new Set()\n     Object.keys(selections).map(selection => {\n        const collections = Object.keys(selection['collections'])\n          if(collectionId in collections) {\n            productDeCollection.add(selection['collections'][collectionId])\n          }\n    })\n    return productDeCollection\n  }\n)\n        /* \n        export const selectSelectionForShopCollection = selectionId => createSelector(\n  [selectedSelections],\n  selections => {\n    const _sel = new Set()\n     Object.keys(selections).forEach(selection => {\n        if(selection === selectionId) {\n          _sel.add( {\n            title: selections[selection]['title'],\n            id: selections[selection]['id'],\n            imageUrl: selections[selection]['imageUrl'],\n            linkUrl: selections[selection]['linkUrl'],\n            collections: selections[selection]['collections'],\n          })\n        }}\n        )\n        return _sel\n  }\n)\nexport const selectProductsForPreview = collectionId => createSelector(\n  [selectedSelections],\n    collections => {\n    console.log(collections)\n    const cols =  collections[collectionId]\n    const colKeys = Object.keys(cols)\n    return colKeys.map(collection => {\n      return collections[collectionId][collection]\n    })\n  }\n)\n\nexport const getItemsCollection = selectionId => collectionId => createSelector(\n  [selectedSelections],\n  collections =>  {\n    const selection = collections[selectionId]\n\n  })\n\nexport const selectCollections = createSelector(\n  [selectedSelections, getItemsCollection],\n  (collections, selections) => {\n    const newCollections = []\n   // console.log(`Collections ${collections}`)\n    //console.log(selections)\n    return Object.values(collections)\n\n  })\n\n */\n\n\n  /* {\n    const mapSelection = new Map()\n    const sels = Object.keys(selection.selectons)\n    for (let sel of sels ){\n       mapSelection.set(sel, selection[sel])\n       /* \n      for (let kkey of Object.keys(value)) {\n          console.log(`--> ${JSON.stringify(kkey, null, 4)}`)\n            for (let kkkey of Object.keys(kkey)) {\n              console.log(`---> ${kkkey}`)\n            }\n    \n        } \n  }\n      console.log(`collections books ->${JSON.stringify(mapSelection.get('books'), null ,2)}`)\n      console.log(`all Collections ->${JSON.stringify(mapSelection, null ,2)}`)\n\n    return mapSelection\n  }\n) *export const selectCollections = createSelector(\n  [selectedSelection],\n  selection => {\n    console.log(`collections de selectCollection-> ${selection.collections} `)\n    return selection.collections\n  }\n) */\n/* export const selectCollections = createSelector(\n  [selectSelectedSelection],\n  selection => {\n    const sel = Object.keys(selection)\n    console.log(`Dans Mon Sel ${sel}`)\n    const  AllColl = sel.map(col => Object.keys(selection[col]))\n    return AllColl.map(coll => Object.values(selection[coll]))\n  }\n)\n */\n/* \nexport const selectCollections = createSelector(\n  [selectSelectedSelection],\n  selection => {\n    const sel = Object.keys(selection)\n    const AllColl = sel.map(col => Object.keys(selection[sel]))\n     return AllColl.map(coll => coll)\n  }\n  )\n *//* \nexport const selectProductsFromSelection = selection => {\n  return createSelector(\n    selectSelection,\n    selections => Object.values(selections[selection])\n  )\n}\n\nexport const selectProducts = collectionParam => createSelector(\n  [selectCollections],\n  (collections) => {\n    collections.filter(coll =>\n      coll[0] === collectionParam\n    )\n  }\n); */\n","import styled from 'styled-components';\nimport { green2, green4, blanc,maxWidth } from '../variables'\n\nexport const SelectionItemContainer = styled.div`\n\theight: 300px;\n\twidth:300px;\n\toverflow: hidden;\n\tflex: 1 1 auto;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: space-evenly;\n\tborder: 1px solid ${green4};\n\tmargin: 0 7.5px; \n\toverflow: hidden;\n\t  border-radius:1rem;\n/* \ttransform:rotate(45deg);\t\t\n */\t&:hover {\n\t\tcursor: pointer;\n\t\t& .background-image {\n\t\t\ttransform: scale(1.1);\n\t\t\ttransition: transform 6s cubic-bezier(0.25, 0.45, 0.45, 0.95);\n\t\t}\n\t\t& .content {\n\t\t\topacity: 0.9;\n\t\t}\n\t}\n\t&:first-child {\n\t  \tmargin-right: 7.5px;\n\t}\n\t&:last-child {\n\t  margin-left: 7.5px;\n\t}\n`;\n\nexport const BackgroundImageContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  background-size: cover;\n  background-position: center;\n  background-image: ${({ imageUrl }) => `url(${imageUrl})`};\n`;\n\nexport const ContentContainer = styled.div`\n  height: 10rem;\n  width: 10rem;\n  padding: 0 25px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  border: 1px solid ${ green2 };\n  border-radius:5px;\n  background-color: ${blanc};\n  opacity: 0.8;\n  position: absolute;\n/* \ttransform:rotate(-45deg);\t\t\n */\n`;\n\nexport const ContentTitle = styled.span`\n  font-weight: bold;\n  margin-bottom: 6px;\n  font-size: 22px;\n  color: #4a4a4a;\n`;\n\nexport const ContentSubtitle = styled.span`\n  font-weight: lighter;\n  font-size: 1.5rem;\n  color:${green4};\n`;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport {\n  SelectionItemContainer,\n  BackgroundImageContainer,\n  ContentContainer,\n  ContentTitle,\n  ContentSubtitle\n} from './selection-item-styled';\n\nconst SelectionItem = ({ title, imageUrl, size, history, routeName, linkUrl, match }) => {\n   \n  const imageUrlrep = `./assets${imageUrl}`\n  return <SelectionItemContainer\n            onClick={() => history.push(`shop/${routeName}`)\n            }\n             >\n            <BackgroundImageContainer\n              className='background-image'\n              imageUrl={imageUrlrep}\n            />\n            <ContentContainer className='content'>\n              <ContentTitle>{title.toUpperCase()}</ContentTitle>\n              <ContentSubtitle > DISCOVER </ContentSubtitle>\n            </ContentContainer>\n          </SelectionItemContainer>\n};\n\nexport default withRouter(SelectionItem);\n","import styled from 'styled-components';\n\nexport const SelectionMenuContainer = styled.div`\n  height: 100%;\n  width:100%;\n  display: flex;\n  justify-content: space-evenly;\n  flex:0;\n  margin-top:10rem;\n  \n  flex-flow:wrap;\n   \n  `;\n","import { apifetchSelections, apifetchCollections} from './../api'\nimport { apiShopProducts } from '../api/selections'\n\n\n\nexport const FETCH_SELECTIONS_START = 'FETCH_SELECTIONS_START'\nexport const FETCH_SELECTIONS_SUCCESS = 'FETCH_SELECTIONS_SUCCESS'\nexport const FETCH_SELECTIONS_FAIL = 'FETCH_SELECTIONS_FAIL'\n\nexport const FETCH_COLLECTIONS_START = 'FETCH_COLLECTIONS_START'\nexport const FETCH_COLLECTIONS_SUCCESS = 'FETCH_COLLECTIONS_SUCCESS'\nexport const FETCH_COLLECTIONS_FAIL = 'FETCH_COLLECTIONS_FAIL'\n\nexport const FETCH_PRODUCTS_START = 'FETCH_PRODUCTS_START'\nexport const FETCH_PRODUCTS_SUCCESS = 'FETCH_PRODUCTS_SUCCESS'\nexport const FETCH_PRODUCTS_FAIL = 'FETCH_PRODUCTS_FAIL'\n\nexport const REMOVE_COLLECTION_START = 'REMOVE_COLLECTION_START'\nexport const REMOVE_COLLECTION_SUCCESS = 'REMOVE_COLLECTION_SUCCESS'\nexport const REMOVE_COLLECTION_FAIL = 'REMOVE_COLLECTION_FAIL'\n\nexport const REMOVE_PRODUCT_START = 'REMOVE_PRODUCT_START'\nexport const REMOVE_PRODUCT_SUCCESS = 'REMOVE_PRODUCT_SUCCESS'\nexport const REMOVE_PRODUCT_FAIL = 'REMOVE_PRODUCT_FAIL'\n\nexport const REMOVE_SELECTION_START = 'REMOVE_SELECTION_START'\nexport const REMOVE_SELECTION_SUCCESS = 'REMOVE_SELECTION_SUCCESS'\nexport const REMOVE_SELECTION_FAIL = 'REMOVE_SELECTION_FAIL'\n\nexport const ADD_COLLECTION_START = 'ADD_COLLECTION_START'\nexport const ADD_COLLECTION_SUCCESS = 'ADD_COLLECTION_SUCCESS'\nexport const ADD_COLLECTION_FAIL = 'ADD_COLLECTION_FAIL'\n\nexport const ADD_PRODUCT_START = 'ADD_PRODUCT_START'\nexport const ADD_PRODUCT_SUCCESS = 'ADD_PRODUCT_SUCCESS'\nexport const ADD_PRODUCT_FAIL = 'ADD_PRODUCT_FAIL'\n\nexport const ADD_SELECTION_START = 'ADD_SELECTION_START'\nexport const ADD_SELECTION_SUCCESS = 'ADD_SELECTION_SUCCESS'\nexport const ADD_SELECTION_FAIL = 'ADD_SELECTION_FAIL'\n\nexport const fetchSelectionsStart =  () => ({type: FETCH_SELECTIONS_START})\n\n\nexport const fetchSelectionsSuccess =  (selections) => {\n    console.log(selections)    \n    return {\n                type: FETCH_SELECTIONS_SUCCESS,\n                payload:selections,\n                errors: null\n            }\n    }\nexport const fetchSelectionsFail =  () => {\n    return {\n        type: FETCH_SELECTIONS_FAIL,\n        errors: 'fetch selection FAil'\n    }\n}\n\nexport const fetchCollectionsSuccess = async () => {\n        try {\n            const collections = await apifetchCollections()\n            return {\n                type: FETCH_COLLECTIONS_SUCCESS,\n                payload: collections,\n                errors: null\n            }\n        } catch (err) {\n            return {\n                type: FETCH_COLLECTIONS_FAIL,\n                payload: {},\n                errors: err\n            }\n        }\n\n    }\n\nexport const fetchCollectionsFail = async () => {\n        return {\n            type: FETCH_COLLECTIONS_FAIL,\n            errors: 'Fetch FAil'\n        }\n    }\nexport const fetchProductsSuccess = async (products) => {\n    try {\n        return {\n            type: FETCH_PRODUCTS_SUCCESS,\n            payload: products,\n            errors: null\n        }\n    } catch (err) {\n        return {\n            type: FETCH_PRODUCTS_FAIL,\n            errors: err\n        }\n    }\n}\nexport const fetchProductsStart = () => {\n        return {\n            type:FETCH_PRODUCTS_START\n        }\n}\nexport const fetchProductsFail = () => {\n    return {\n        type: FETCH_PRODUCTS_FAIL,\n        errors: 'fetc products fail'\n    }\n}\nexport const addSelectionSuccess = (selection) => {\n    return {\n        type: ADD_SELECTION_SUCCESS,\n        payload: selection\n    }\n}\nexport const addSelectionFail = () => {\n    return {\n        type: ADD_SELECTION_FAIL,\n        error: 'cant add selection'\n    }\n}\n\nexport const addCollectionSuccess = (collection) => {\n    return {\n        type: ADD_COLLECTION_SUCCESS,\n        payload: collection\n\n    }\n}\nexport const addCollectionFail = () => {\n    return {\n        type: ADD_COLLECTION_FAIL,\n        error: 'add collection Fail'\n   }\n}\n\n//ADD PRODUCT \nexport const addProductSuccess = (product) => {\n    return {\n        type: ADD_PRODUCT_SUCCESS,\n        payload: product\n\n    }\n}\nexport const addProductStart =(product) => {\n    return {\n        type:ADD_PRODUCT_START,\n        payload:product\n    }\n}\nexport const addProductFail = () => {\n    return {\n        type: ADD_PRODUCT_FAIL,\n        error: 'add product Fail'\n   }\n}\n\n\nexport const removeProductSuccess = (product) => {\n    return {\n        type: REMOVE_PRODUCT_SUCCESS,\n        payload: product\n\n    }\n}\nexport const removeProductFail = () => {\n    return {\n        type: REMOVE_PRODUCT_FAIL,\n        error: 'remove product Fail'\n   }\n}\n\n\n\nexport const removeCollectionSuccess = (collection) => {\n    return {\n        type: REMOVE_COLLECTION_SUCCESS,\n        payload: collection\n\n    }\n}\nexport const removeCollectionFail = () => {\n    return {\n        type: REMOVE_COLLECTION_FAIL,\n        error: 'add collection Fail'\n   }\n}\n\nexport const removeSelectionSuccess = (selection) => {\n    return {\n        type: REMOVE_SELECTION_SUCCESS,\n        payload: selection\n\n    }\n}\nexport const removeSelectionFail = () => {\n    return {\n        type: REMOVE_SELECTION_FAIL,\n        error: 'add collection Fail'\n   }\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { selectSelections} from './../../store/selectors/selection';\nimport SelectionItem from '../SelectionItem/Selection-Item';\nimport { SelectionMenuContainer } from './selection.styled';\nimport { fetchSelectionsStart } from './../../store/actions/selection'\nimport {firestore, transformCollectionSnapshotToMap} from './../../util/db/db'\n\n\nclass Selection extends Component {\n\n\n\n  render() {\n    const { selections } = this.props\n   \n    const menus = selections.map(selection =>{\n          const {id , ...otherProps} = selection;\n          \n        return <SelectionItem key={id} {...otherProps}></SelectionItem>\n    })\n    return (\n      <SelectionMenuContainer>\n        { menus }\n      </SelectionMenuContainer>\n    )  \n   }  \n}\nconst mapStateToProps = createStructuredSelector({\n  selections: selectSelections \n})\nconst mapDispatchToProps = (dispatch) => ({\n  fetchSelections:() => dispatch(fetchSelectionsStart())\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Selection);\n","import styled from 'styled-components'\nimport {maxWidth, green1} from '../../components/variables'\nexport const AboutContainer = styled.div`\n    max-width: ${maxWidth};\n    margin: 0 auto;\n    width:100%;\n    background-color: ${green1};\n    padding: 4rem 0;\n \n`","import React from 'react'\n\nimport {AboutContainer} from './about-styled'\nconst about = () => {\n    return (\n        \n        <AboutContainer>\n        About US Liil \n        mood \n        stat of creation \n        fun \n        society\n\n        </AboutContainer>\n    )\n}\n\nexport default about\n","import React from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\nimport axios from 'axios'\n\nconst StripeCheckoutButton = ({ price }) => {\n   require('dotenv').config()\n  \n  const priceForStripe = price * 10;\n  const publishableKey = process.env.PUBLIC_KEY;\n\n  const onToken = token => {\n    axios.post({\n      url:'payment',\n      method:'post',\n      data:{\n        amount:priceForStripe,\n        token\n      }\n   }).then(response => {\n     alert('payment successful')\n   }).catch(error => {\n    console.log(JSON.parse(error))\n     alert('Payment error! its a probleme with credit card');\n   })\n  };\n\n  return (\n    <StripeCheckout\n      label='Pay'\n      name='lami1a com.'\n      billingAddress\n      shippingAddress\n      //image='https://svgshare.com/i/CUz.svg'\n      description={`Your total is €${price}`}\n      currency=\"EUR\"\n      amount={priceForStripe}\n      panelLabel='Pay Now'\n      token={onToken}\n      stripeKey={publishableKey}\n    />\n  );\n};\n\nexport default StripeCheckoutButton;\n","import styled from 'styled-components';\n\nexport const CheckoutItemContainer = styled.div`\n  width: 100%;\n  display: flex;\n  min-height: 100px;\n  border-bottom: 1px solid darkgrey;\n  padding: 15px 0;\n  font-size: 20px;\n  align-items: center;\n`;\n\nexport const ImageContainer = styled.div`\n  width: 23%;\n  padding-right: 15px;\n\n  img {\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nexport const TextContainer = styled.span`\n  width: 23%;\n`;\n\nexport const QuantityContainer = styled(TextContainer)`\n  display: flex;\n\n  span {\n    margin: 0 10px;\n  }\n\n  div {\n    cursor: pointer;\n  }\n`;\n\nexport const RemoveButtonContainer = styled.div`\n  padding-left: 12px;\n  cursor: pointer;\n`;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport {\n  clearItemFromCart,\n  addItem,\n  removeItem\n} from './../../store/actions/cart';\n\nimport {\n  CheckoutItemContainer,\n  ImageContainer,\n  TextContainer,\n  QuantityContainer,\n  RemoveButtonContainer\n} from './checkout.item.styled';\n\nconst CheckoutItem = ({ cartItem, clearItem, addItem, removeItem }) => {\n  const { name, imageUrl, price, quantity } = cartItem;\n  return (\n    <CheckoutItemContainer>\n      <ImageContainer>\n        <img src={imageUrl} alt='item' />\n      </ImageContainer>\n      <TextContainer>{name}</TextContainer>\n      <QuantityContainer>\n        <div onClick={() => removeItem(cartItem)}>&#10094;</div>\n        <span>{quantity}</span>\n        <div onClick={() => addItem(cartItem)}>&#10095;</div>\n      </QuantityContainer>\n      <TextContainer>{price}</TextContainer>\n      <RemoveButtonContainer onClick={() => clearItem(cartItem)}>\n        &#10005;\n      </RemoveButtonContainer>\n    </CheckoutItemContainer>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  clearItem: item => dispatch(clearItemFromCart(item)),\n  addItem: item => dispatch(addItem(item)),\n  removeItem: item => dispatch(removeItem(item))\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(CheckoutItem);\n","import styled from 'styled-components';\n\nexport const CheckoutPageContainer = styled.div`\n  width: 55%;\n  min-height: 90vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 50px auto 0;\n\n  button {\n    margin-left: auto;\n    margin-top: 50px;\n  }\n`;\n\nexport const CheckoutHeaderContainer = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  justify-content: space-between;\n  border-bottom: 1px solid darkgrey;\n`;\n\nexport const HeaderBlockContainer = styled.div`\n  text-transform: capitalize;\n  width: 23%;\n\n  &:last-child {\n    width: 8%;\n  }\n`;\n\nexport const TotalContainer = styled.div`\n  margin-top: 30px;\n  margin-left: auto;\n  font-size: 36px;\n`;\n\nexport const WarningContainer = styled.div`\n  text-align: center;\n  margin-top: 40px;\n  font-size: 24px;\n  color: red;\n`;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport StripeCheckoutButton from '../../components/Stripe-Button/Stripe-Button';\nimport CheckoutItem from './../../components/Checkout-Item/Checkout-Item';\n\nimport {\n  selectCartItems,\n  selectCartTotal\n} from '../../store/selectors/cart';\n\nimport {\n  CheckoutPageContainer,\n  CheckoutHeaderContainer,\n  HeaderBlockContainer,\n  TotalContainer,\n  WarningContainer\n} from './checkout.styled';\n\nconst CheckoutPage = ({ cartItems, total }) => (\n  <CheckoutPageContainer>\n    <CheckoutHeaderContainer>\n      <HeaderBlockContainer>\n        <span>Product</span>\n      </HeaderBlockContainer>\n      <HeaderBlockContainer>\n        <span>Description</span>\n      </HeaderBlockContainer>\n      <HeaderBlockContainer>\n        <span>Quantity</span>\n      </HeaderBlockContainer>\n      <HeaderBlockContainer>\n        <span>Price</span>\n      </HeaderBlockContainer>\n      <HeaderBlockContainer>\n        <span>Remove</span>\n      </HeaderBlockContainer>\n    </CheckoutHeaderContainer>\n    {cartItems.map(cartItem => (\n      <CheckoutItem key={cartItem.id} cartItem={cartItem} />\n    ))}\n    <TotalContainer>TOTAL: ${total}</TotalContainer>\n    <WarningContainer>\n      *test credit card for payments*\n      <br />\n      4242 4242 4242 4242 - Exp: 01/20 - CVV: 123\n    </WarningContainer>\n    <StripeCheckoutButton price={total} />\n  </CheckoutPageContainer>\n);\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems,\n  total: selectCartTotal\n});\n\nexport default connect(mapStateToProps)(CheckoutPage);\n","import styled from 'styled-components';\nimport CustomButton from '../CustomButton/CustomButton';\nimport {Link} from 'react-router-dom'\nexport const CollectionItemContainer = styled.div`\n  width: 22vw;\n  display: flex;\n  flex-direction: column;\n  height: 350px;\n  align-items: center;\n  position: relative;\n\n  &:hover {\n    .image {\n      opacity: 0.8;\n    }\n\n    button {\n      opacity: 0.85;\n      display: flex;\n    }\n  }\n`;\n\nexport const AddButton = styled(CustomButton)`\n  width: 80%;\n  opacity: 0.7;\n  position: absolute;\n  top: 255px;\n  display: none;\n`;\n\nexport const BackgroundImage = styled.div`\n  width: 100%;\n  height: 95%;\n  background-size: cover;\n  background-position: center;\n  margin-bottom: 5px;\n  background-image: ${({ imageUrl }) => `url(${imageUrl})`};\n`;\n\nexport const CollectionFooterContainer = styled.div`\n  width: 100%;\n  height: 5%;\n  display: flex;\n  justify-content: space-between;\n  font-size: 18px;\n`;\n\nexport const NameContainer = styled.span`\n  width: 90%;\n  margin-bottom: 15px;\n`;\n\nexport const PriceContainer = styled.span`\n  width: 10%;\n  text-align: right;\n`;\nexport const LinkProduct = styled(Link)`\n  width:100%;\n  height:100%;\n  opacity:0.6;\n\n`","import React from 'react';\nimport { connect } from 'react-redux';\nimport { addItem } from '../../store/actions/cart';\nimport  { withRouter} from 'react-router-dom'\nimport {\n  CollectionItemContainer,\n  CollectionFooterContainer,\n  AddButton,\n  LinkProduct,\n  BackgroundImage,\n  NameContainer,\n  PriceContainer\n} from './collection-item.styled';\n\nconst CollectionItem = ({ collection, match, history,...otherProps}) => {\n  const { id, name ,edition, imageUrl, price ,desc ,tags } = collection;\n console.log({match, history, collection})\n  return (\n    <CollectionItemContainer onClick={() => history.push(`${match['url']}/${name}`)}>\n      <LinkProduct to={`/products/${name}`}>\n        <BackgroundImage className='image' imageUrl={`/assets${imageUrl}`} />\n        <CollectionFooterContainer>\n          <NameContainer>{name}</NameContainer>\n          <PriceContainer>{price}</PriceContainer>\n        </CollectionFooterContainer>\n      </LinkProduct>\n      \n    </CollectionItemContainer>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  addProduct: product => dispatch(addItem(product))\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(withRouter(CollectionItem));\n","import styled from 'styled-components';\nimport {textBlanc, blue4} from './../variables'\nexport const CollectionPreviewContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 1rem;\n`;\n\nexport const TitleContainer = styled.h1`\n  font-size: 2rem;\n  margin-bottom: 16px;\n  color:${blue4};\n  cursor: pointer;\n  &:hover {\n    color: grey;\n  }\n`;\n\nexport const PreviewCollections = styled.div`\n  display: flex;\n  flex-direction:row;\n  font-size: 18px;\n  justify-content: space-between;\n  align-items:center;\n  padding:0;\n  cursor: pointer;\n  margin:3rem 2rem 1rem;\n`;\n\nexport const PreviewCollection = styled.div`\n  display: flex;\n  flex-direction:column;\n  justify-content: center;\n  margin:-3rem 1rem 1rem;\n  background-image:${({ imageUrl }) => `url(${imageUrl})`};\n  width:100%;\n  height:300px;\n  color:${textBlanc}\n`;","import React, {Component} from 'react';\nimport { withRouter } from 'react-router-dom';\nimport CollectionItem from '../Collection-Item/Collection-Item';\n\nimport {\n  CollectionPreviewContainer,\n  TitleContainer,\n  PreviewCollection,\n  PreviewCollections\n} from './collection-preview.styled';\n\n\nconst CollectionPreview = ({collections,title, id, routeName, history, match}) => {\nconsole.log({match,history, collections})\n    return (\n     <CollectionPreviewContainer>\n          <TitleContainer onClick={() => history.push(`${match.path}/${routeName}`)}>\n          {title.toUpperCase()}\n        </TitleContainer>\n      <PreviewCollections>\n        {\n        Object.entries(collections).map((collection,i) => {\n        return (\n           <PreviewCollection  key={i} onClick={()=>\n              history.push(`/products${collection[1]['linkUrl']}`)}\n              imageUrl={ `./assets${collection[1]['imageUrl']}`} >\n              <h2>{ collection[1]['title'].toUpperCase()} </h2>\n           </PreviewCollection>\n        )\n        })\n        }\n      </PreviewCollections>\n      </CollectionPreviewContainer>\n  )\n}\n\nexport default withRouter(CollectionPreview);\n","import styled from 'styled-components';\n\nexport const SpinnerOverlay = styled.div`\n  height: 60vh;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const SpinnerContainer = styled.div`\n  display: inline-block;\n  width: 50px;\n  height: 50px;\n  border: 3px solid rgba(195, 195, 195, 0.6);\n  border-radius: 50%;\n  border-top-color: #636767;\n  animation: spin 1s ease-in-out infinite;\n  -webkit-animation: spin 1s ease-in-out infinite;\n\n  @keyframes spin {\n    to {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n  @-webkit-keyframes spin {\n    to {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n`;\n","import React from 'react';\n\nimport { SpinnerContainer, SpinnerOverlay } from './with-spinner.styles';\n\nconst WithSpinner = WrappedComponent => {\n  const Spinner = ({ isLoading,id, ...otherProps }) => {\n    return isLoading ? (\n      <SpinnerOverlay>\n        <SpinnerContainer />\n      </SpinnerOverlay>\n    ) : (\n      <WrappedComponent key={id} {...otherProps} />\n    );\n  };\n  return Spinner;\n};\n\nexport default WithSpinner;\n","import styled from 'styled-components';\n\nexport const CollectionsOverviewContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { withRouter} from 'react-router-dom'\nimport { compose } from 'redux'\nimport CollectionPreview from '../Collection-Preview/Collection-Preview';\nimport { selectSelections } from './../../store/selectors/selection';\nimport WithSpinner from './../With-Spinner/With-Spinner'\nimport { CollectionsOverviewContainer } from './collections.overview.styled';\n\nconst CollectionsOverview = ({ selections }) => {\n console.log(`collection Overview`) \n  return(\n      <CollectionsOverviewContainer>\n        { selections.map( (collection,index) => {\n          const  {id, ...otherCollectionProps} = collection;\n           return <CollectionPreview  key={index} id={id} isLoading={true}  {...otherCollectionProps}  />\n          }\n        )} \n      </CollectionsOverviewContainer>\n  );\n}\nconst mapStateToProps = createStructuredSelector({\n  selections: selectSelections\n})\n\nconst CollectionsOverviewContain = compose(\n  connect(mapStateToProps),\n  withRouter,\n  WithSpinner\n)(CollectionsOverview)\n\nexport default (CollectionsOverviewContain);\n","import styled from 'styled-components';\n\nexport const CollectionPageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const CollectionTitle = styled.h2`\n  font-size: 38px;\n  margin: 0 auto 30px;\n`;\n\nexport const CollectionItemsContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n  grid-gap: 10px;\n\n  & > div {\n    margin-bottom: 30px;\n  }\n`;\n","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector} from 'reselect'\nimport WithSpinner from './../../components/With-Spinner/With-Spinner'\nimport {compose} from 'redux'\nimport CollectionItem from '../../components/Collection-Item/Collection-Item';\nimport moduleName from 'module'\nimport { selectProductsCollection } from '../../store/selectors/selection';\nimport { fetchProducts  } from './../../store/actions/selection'\nimport {\n  CollectionPageContainer,\n  CollectionTitle,\n  CollectionItemsContainer\n} from './collection.styled';\n\nconst CollectionPage = ({ products ,match, history }) => {\nlet collection = []  \nproducts.forEach(col => {\n  console.log({col})\n  collection = (<>\n        <CollectionTitle>{` ${col['selection']} / ${col['collection']}` }</CollectionTitle>\n                <CollectionItemsContainer>\n                  {(col['items']).map(item => (\n                    <CollectionItem key={item['id']} collection={item} />\n                  ))}\n                </CollectionItemsContainer>\n          </>)\n    })\n\nreturn (\n  <CollectionPageContainer>\n    {collection}\n  </CollectionPageContainer>\n);\n};\n  \n\nconst mapStateToProps =  (state, ownProps) => createStructuredSelector({\n    products : selectProductsCollection(ownProps.match.params.selectionId)\n }) \nconst CollectionPageContain = compose(\n  connect(mapStateToProps),\n  WithSpinner)(CollectionPage)\n\n  export default CollectionPageContain;\n","\nimport React from 'react'\nimport { Route } from 'react-router-dom';\nimport CollectionsOverviewContain from '../../components/Collections-Overview/Collections-Overview';\nimport CollectionPageContain from './../collectionPage/collectionPage';\n\nconst shopPage =({match, fetchProductsStart}) => {\n  \nreturn (\n  <div className='shop-page'>\n    <Route exact path={`${match.url}`} render={(props) => \n    <CollectionsOverviewContain  {...props} />\n    }/>\n    <Route exact path={`${match.path}/:selectionId`} render={(props) => \n    <CollectionPageContain  {...props} />\n    }/> \n  </div>\n);\n}\n\n\nexport default shopPage;\n","import styled from 'styled-components';\nimport CustomButton from '../CustomButton/CustomButton';\n\nexport const ProductItemContainer = styled.div`\n  width: 22vw;\n  display: flex;\n  flex-direction: column;\n  height: 350px;\n  align-items: center;\n  position: relative;\n\n  &:hover {\n    .image {\n      opacity: 0.8;\n    }\n\n    button {\n      opacity: 0.85;\n      display: flex;\n    }\n  }\n`;\n\nexport const AddButton = styled(CustomButton)`\n  width: 80%;\n  opacity: 0.7;\n  position: absolute;\n  top: 255px;\n  display: none;\n`;\n\nexport const BackgroundImage = styled.div`\n  width: 100%;\n  height: 95%;\n  background-size: cover;\n  background-position: center;\n  margin-bottom: 5px;\n  background-image: ${({ imageUrl }) => `url(${imageUrl})`};\n`;\n\nexport const ProductFooterContainer = styled.div`\n  width: 100%;\n  height: 5%;\n  display: flex;\n  justify-content: space-between;\n  font-size: 18px;\n`;\n\nexport const NameContainer = styled.span`\n  width: 90%;\n  margin-bottom: 15px;\n`;\n\nexport const PriceContainer = styled.span`\n  width: 10%;\n  text-align: right;\n`;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { addItem } from '../../store/actions/cart';\nimport {compose} from 'redux'\nimport { withRouter} from 'react-router-dom'\nimport WithSpinner from './../With-Spinner/With-Spinner'\nimport {\n  ProductItemContainer,\n  ProductFooterContainer,\n  AddButton,\n  BackgroundImage,\n  NameContainer,\n  PriceContainer\n} from './product-item.styled';\n\nconst ProductItem = ({product , addProduct, match,location }) => {\n  const { name, price, imageUrl } = product;\n  console.log(match)\n  return (\n    <ProductItemContainer>\n      <BackgroundImage className='image' imageUrl={`/assets${imageUrl}`} />\n       <ProductFooterContainer>\n        <NameContainer>{name}</NameContainer>\n        <PriceContainer>{price}</PriceContainer>\n      </ProductFooterContainer>\n      <AddButton onClick={() => addProduct(product)} inverted>\n        Add to cart\n      </AddButton>\n    </ProductItemContainer>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  addProduct: product => dispatch(addItem(product))\n});\nconst ProductItemCompose = compose(\n  connect(null, mapDispatchToProps),\n  withRouter,\n  WithSpinner\n)(ProductItem)\nexport default ProductItemCompose","import styled from 'styled-components';\n\nexport const ProductsPageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const ProductsTitle = styled.h2`\n  font-size: 2rem;\n  margin: 0 auto 30px;\n`;\n\nexport const ProductsItemsContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n  grid-gap: 10px;\n\n  & > div {\n    margin-bottom: 30px;\n  }\n`;\n","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector} from 'reselect'\nimport WithSpinner from '../../components/With-Spinner/With-Spinner'\nimport {compose} from 'redux'\nimport ProductItemCompose from '../../components/Product-Item/Product-Item';\nimport { selectProducts } from '../../store/selectors/selection';\nimport {\n  ProductsPageContainer,\n  ProductsTitle,\n  ProductsItemsContainer\n} from './products-styled';\n\nconst ProductsPage = ({ products ,match, history }) => {\nlet col, sel =''\n  let productsCollection =  products.map(prod => {\n  \n  const {selection, collection, product} = prod\n  col= collection\n  sel= selection\n  const {id} = product\n  return (<ProductItemCompose key={id} product={product} />)\n  })\nreturn (\n  <ProductsPageContainer>\n  <ProductsTitle>{`${col}/${sel}` }</ProductsTitle>\n  <ProductsItemsContainer>\n             \n    {productsCollection}\n    </ProductsItemsContainer>\n  \n  </ProductsPageContainer>\n);\n};\n  \n\nconst mapStateToProps =  (state, ownProps) => createStructuredSelector({\n    products : selectProducts(ownProps.match.params.productSlug)\n }) \nconst ProductsPageContain = compose(\n  connect(mapStateToProps),\n  WithSpinner)(ProductsPage)\n\n  export default ProductsPageContain;\n","import styled from 'styled-components';\nimport {textBleu} from '../../components/variables'\n\nexport const MainContainer = styled.div`\n  display: flex;\n  margin: 0 auto;\n  width: 100%;\n  height:100%;\n  justify-content: space-between;\n`;\n\nexport const ProfilContainer = styled.div`\n  display: flex;\n  margin: 0 auto;\n  flex-direction: column;\n  width: 400px;\n`;\n export const CollectionContainer = styled.div`\n display: flex;\n margin: 0 auto;\n flex-direction: column;\n width: 400px;\n`; \nexport const ProfilTitle = styled.h2`\n  margin: 10px 0;\n`;\nexport const ButtonsBarContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\nexport const Message = styled.h2`\nmargin: 10px;\ncolor:${textBleu}\n`;","import styled from 'styled-components';\nimport { textBleu, blue2, blue3 } from '../../components/variables';\n\nexport const CollectionPageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const CollectionTitle = styled.h2`\n  font-size: 38px;\n  margin: 0 auto 30px;\n`;\n\nexport const CollectionItemsContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n  grid-gap: 10px;\n\n  & > div {\n    margin-bottom: 30px;\n  }\n`;\n\nexport const ProductContainer = styled.div`\n  display: flex;\n  margin: 0 auto;\n  flex-direction: column;\n  width: 400px;\n`;\n\nexport const CollectionContainer = styled.div`\n  display: flex;\n  margin: 0 auto;\n  flex-direction: column;\n  width: 400px;\n`;\nexport const FileContainer = styled.div`\ndisplay: flex;\nmargin: 0 auto;\nflex-direction: column;\nwidth: 400px;\n`;\nexport const ProductTitle = styled.h2`\n  margin: 10px 0;\n`;\n\nexport const ButtonsBarContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\nexport const Message = styled.h2`\nmargin: 10px;\ncolor:${blue3};\n`;\nexport const AddProductContainer= styled.div`\n display: flex;\n\n`\nexport const SelectContainer = styled.div`\n  background: none;\n  background-color: white;\n  color: ${textBleu};\n  font-size: 18px;\n  padding: 10px 10px 10px 5px;\n  display: block;\n  width: 100%;\n  \n  border: none;\n  border-radius: 0;\n  border-bottom: 1px solid ${blue2};\n  margin: 25px 0;\n  & select {\n  width: 100%;\n   margin-left:0; \n  }\n  &:focus {\n    outline: none;\n  \n }\n`\n","import styled, { css } from 'styled-components';\nimport {blue1,blue2, blue3, blue4, textBlack, } from './../variables'\n\nconst shrinkLabelStyles = css`\n  top: -14px;\n  font-size: 12px;\n  color: ${blue1};\n`;\nexport const GroupContainer = styled.div`\n  position: relative;\n  margin: 45px 0;\n  outline:none;\n  input[type='password'] {\n    letter-spacing: 0.3em;\n  }\n`;\n\nexport const FormInputContainer = styled.input`\n  background: none;\n  background-color: white;\n  color: ${textBlack};\n  font-size: 18px;\n  padding: 10px 10px 10px 5px;\n  display: block;\n  width: 100%;\n  border: none;\n  border-radius: 0;\n  border-bottom: 1px solid ${blue1};\n  margin: 25px 0;\n  &:focus {\n    outline: none;\n  }\n  &:focus + label {\n    ${shrinkLabelStyles};\n    \n  }\n`;\nexport const FormTextAreaContainer = styled.textarea`\n  background: none;\n  background-color: white;\n  color: ${textBlack};\n  font-size: 18px;\n  padding: 10px 10px 10px 5px;\n  display: block;\n  width: 100%;\n  border: none;\n  border-radius: 0;\n  border-bottom: 1px solid ${blue1};\n  margin: 25px 0;\n  &:focus {\n    outline: none;\n  }\n  &:focus + label {\n    ${shrinkLabelStyles}\n\n  }\n`;\nexport const FormInputLabel = styled.label`\n  color: ${blue4};\n  font-size: 16px;\n  font-weight: normal;\n  position: absolute;\n  pointer-events: none;\n  left: 5px;\n  top: 10px;\n  transition: 300ms ease all;\n  &.shrink {\n    ${shrinkLabelStyles}\n  }\n`;\n","import React from 'react';\n\nimport {\n  GroupContainer,\n  FormInputContainer,\n  FormTextAreaContainer,\n  FormInputLabel\n} from './FormInput-styled';\n\nconst FormInput = ({ handleChange, label, textarea, value, ...props }) => (\n  <GroupContainer>\n    {\n    textarea ? (\n      <FormTextAreaContainer onChange={handleChange} {...props} /> \n    ):\n    (<FormInputContainer onChange={handleChange} {...props} />)\n    }\n    {label ? (\n      <FormInputLabel className={(value && value.length) ? 'shrink' : ''}>\n        {label}\n      </FormInputLabel>\n    ) : null}\n  </GroupContainer>\n);\n\nexport default FormInput;\n","import React, {Component} from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { authenticated } from '../../store/selectors/profil'\nimport { createStructuredSelector} from 'reselect'\nexport default function withAuthorization(ComposedComponent){\n\n    class Autenticated extends Component {\n        render() {\n          const   {authenticated, dispatch, ...rest} = this.props \n            \n            return authenticated ? <ComposedComponent {...rest} /> : <Redirect to='/signin' />\n        }\n    }\nconst  mapStateToProps = createStructuredSelector({\n\n        authenticated: authenticated \n\n})\nreturn connect(mapStateToProps)(Autenticated)\n}\n","import React, {useState} from 'react';\nimport {withRouter} from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { compose } from 'redux'\nimport {createStructuredSelector} from 'reselect'\nimport { isEmpty} from './../../util/is-empty'\nimport {selectCurrentProfil, \n      selectCurrentCollection, selectCurrentProducts} from '../../store/selectors/profil'\nimport { ProfilContainer ,Message, ButtonsBarContainer, ProfilTitle} from './profil.styled'\nimport {FileContainer, CollectionTitle, ProductTitle, \n  AddProductContainer,SelectContainer,ProductContainer,} from './collection.styled'\nimport {addProductStart,} from './../../store/actions/selection'\nimport {updateProfilStart, addUserStart} from './../../store/actions/profil'\nimport  FormInput from '../../components/FormInput/FormInput' \nimport CustomButton  from '../../components/CustomButton/CustomButton' \nimport { MainContainer, CollectionContainer } from './profil.styled';\nimport withAuthorization from '../../components/WithAuthorization/withAuthorization.jsx';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport WithSpinner from '../../components/With-Spinner/With-Spinner';\n\n\nconst  ProfilProductsPage = ({profil, currentProfil, collection, products, history, createProduct}) =>  {\n\n const {title,description} = collection ? collection : {title:profil.login}\nconst [credential, setCredential] = useState({profil})\nconst [product, setProduct] = useState({})\nconsole.log({profil:profil.uid})\n\nconst notify = (message) => toast(`${{message}}`);\n\nconst handleSubmitProfil = async event => {\n  event.preventDefault();\n    try {\n      updateProfilStart(credential)\n      notify(`${credential} is connected`)\n      history.push(`/profil`);\n  }catch(error) {\n    notify(`${error}` )\n}\n}\n\nconst handleSubmitProduct = async event => {\n  event.preventDefault();\n    try {\n      console.log({product})\n      createProduct({product})\n      notify(`${{product}} is registred`)\n      \n      history.push(`/profil`);\n  }catch(error) {\n    notify(`${error}` )\n}\n}\nconst ProductsSelectionTag = () => {\n if(!isEmpty(products)){\n   return (\n    <SelectContainer>\n      <select name='products' defaultValue={product.collection} label='products'>\n        {products.map( prod => (\n          <option value= {product }>{product}</option>\n      ))}\n      </select>\n    </SelectContainer>)\n }else {\n   return (<FormInput\n    type='text'\n    name='collection'\n    value={profil.collection}\n    onChange={handleChangeProduct}\n    label='Collection'\n    required\n  />)\n}}\n\nconst handleFile = (event) => {\n  event.stopPropagation()\n  event.preventDefault() \n  const file = event.target.files[0]\n  const {name, size} = file\n  setProduct({...product,...{ image: name}})\n  console.log(name)\n}\n\nconst handleChangeProfil = (event ) => {\n  const {value, name} = event.target\n  const moncred = {[name]: value}\n  setCredential({...credential, ...moncred})\n}\n\nconst handleChangeProduct = (event ) => {\n  const {value, name} = event.target\n  const monprod = {[name]: value}\n  setProduct({...product, ...monprod})\n}\nreturn(\n  <MainContainer>\n <ProfilContainer>\n   <ToastContainer />\n  <ProfilTitle>Profil</ProfilTitle>\n  <form  onSubmit={handleSubmitProfil}>\n    <FormInput\n      type='text'\n      name='login'\n      value={credential.login}\n      onChange={handleChangeProfil}\n      label='Login'\n      required\n    />\n    <FormInput\n      type='email'\n      name='email'\n      value={credential.email}\n      onChange={handleChangeProfil}\n      label='Email'\n      required\n    />\n    <FormInput\n      type='text'\n      name='address'\n      value={credential.address}\n      onChange={handleChangeProfil}\n      label='address'\n      required\n    />\n    \n    <FormInput\n      type='text'\n      name='city'\n      value={credential.city}\n      onChange={handleChangeProfil}\n      label='city'\n      required\n    />\n    <FormInput\n      type='text'\n      name='country'\n      value={credential.country}\n      onChange={handleChangeProfil}\n      label='country'\n      required\n    />\n    </form>\n    < ButtonsBarContainer>\n      <CustomButton type='submit'>update</CustomButton>\n      <Message>\n        \n      </Message>\n        <CustomButton link='link' to='/signin' > Create product</CustomButton>\n      </ButtonsBarContainer>\n    </ProfilContainer>\n{ /**PRODUCT MANAGEMENT*/}\n  <CollectionContainer>\n    <CollectionTitle>{title}</CollectionTitle>\n      <AddProductContainer>\n      <ProductContainer>\n        <ProductTitle>Add Product</ProductTitle>\n        <form  onSubmit={ handleSubmitProduct}>\n            {ProductsSelectionTag()}\n          <FormInput\n            type='text'\n            name='title'\n            value={product.title}\n            onChange={handleChangeProduct}\n            label='Title'\n            required\n          />\n          \n          <FormInput textarea\n              rows=\"5\" cols=\"33\"\n              name='description'\n              value={product.description}\n              onChange={handleChangeProduct}\n              label='Description'\n              required\n          />\n          <FormInput\n            type='number'\n            name='price'\n            value={product.price}\n            onChange={handleChangeProduct}\n            label='Price'\n            required\n          />\n        <SelectContainer>\n          <select name='collection' defaultValue={product.collection} label='collection'>\n            <option value=\"dogm\">dogme</option>\n            <option value=\"wise\" >sagesse</option>\n            <option value=\"socio\">sociologie</option>\n          </select>\n        </SelectContainer>\n          <SelectContainer>\n            <Message>\n              Add image?\n            </Message>\n            <FileContainer>\n\n            <input type=\"file\" onChange={handleFile}  accept=\"image/*\" required />\n            </FileContainer>\n          </SelectContainer>\n          <ButtonsBarContainer>\n            <CustomButton type=\"button\" type='submit'>Add</CustomButton>\n            <CustomButton type=\"button\" onClick={() => {}} > Update</CustomButton>\n          </ButtonsBarContainer>\n        </form>\n      </ProductContainer>\n    </AddProductContainer>\n    </CollectionContainer>\n  </MainContainer>\n  \n  )\n}\n\nconst mapStateToProps = createStructuredSelector ({\n  profil: selectCurrentProfil,\n  collection:selectCurrentCollection || 'preso', \n  products:selectCurrentProducts || []\n\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  createProduct:(product) => dispatch(addProductStart(product))\n\n})\n\n\nconst composedProfilProducts = compose(\nconnect(mapStateToProps, mapDispatchToProps),\nwithAuthorization,\nWithSpinner\n)(ProfilProductsPage)\n\nexport default composedProfilProducts;\n","import firebase, {\n    firestore, auth\n} from '../../util/db/db'\n\n\nexport const apiCreateMessage = (uid,message) => {\n\n\n}\nexport const  apiFetchMessages = () => {\n    firestore.collection('messages').orderBy('timestamp','desc').limit(20).onSnapshot(snapshot => {\n        return snapshot.docs\n    })\n}\nexport const requestNotificationPermissions = () => {\nfirebase.messaging().requestPermission().then(() => {\n    firebase.messaging().getToken().then(currentToken => {\n        if(currentToken) {\n            return currentToken\n            firestore.collection('fcmTokens').doc(currentToken).set({uid:auth.currentUser.uid})\n        }else {\n            requestNotificationPermissions()\n        }})\n\n}).catch(error => {\n    return Promise.reject(error)\n})\n\n}","import React, {useState} from 'react';\nimport {withRouter} from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { compose } from 'redux'\nimport {createStructuredSelector} from 'reselect'\nimport { isEmpty} from '../../util/is-empty'\nimport {selectCurrentMessages, \n      selectCurrentUsers } from '../../store/selectors/profil'\nimport { ProfilContainer ,Message, ButtonsBarContainer, ProfilTitle} from './profil.styled'\nimport {FileContainer, CollectionTitle, ProductTitle, \n  AddProductContainer,SelectContainer,ProductContainer,} from './collection.styled'\nimport {addMessageStart} from '../../store/actions/message'\nimport  FormInput from '../../components/FormInput/FormInput' \nimport CustomButton  from '../../components/CustomButton/CustomButton' \nimport { MainContainer, CollectionContainer } from './profil.styled';\nimport withAuthorization from '../../components/WithAuthorization/withAuthorization.jsx';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport WithSpinner from '../../components/With-Spinner/With-Spinner';\n\n\nconst  ProfilMessagesPage = ({profil, currentProfil, collection, products, history, createMessageStart}) =>  {\nconst [message, setMessage] = useState({})\nconst notify = (message) => toast(`${{message}}`);\nconst handleSubmitMessage = async event => {\n  event.preventDefault();\n    try {\n      createMessageStart(message)\n      notify(`${{message}} is sent`)\n       history.push(`/profil`);\n  }catch(error) {\n    notify(`${error}` )\n}\n}\nconst handleChangeMessage = (event ) => {\n  const {value, name} = event.target\n  const monMessage = {[name]: value}\n  setMessage({...message, ...monMessage})\n}\n\nreturn(\n  <MainContainer>\n <ProfilContainer>\n   <ToastContainer />\n  <ProfilTitle>Profil</ProfilTitle>\n  <form  onSubmit={handleSubmitMessage}>\n    <FormInput\n      type='text'\n      name='user'\n      value={message.user}\n      onChange={handleChangeMessage}\n      label='receiver'\n      required\n    />\n    <FormInput\n      type='text'\n      name='message'\n      value={message.message}\n      onChange={handleChangeMessage}\n      label='message'\n      required\n    />\n    <FormInput\n      textarea\n      name='message'\n      value={message.description}\n      onChange={handleChangeMessage}\n      label='description'\n      required\n    />\n    </form>\n    < ButtonsBarContainer>\n      <CustomButton type='submit'>Send</CustomButton>\n      <Message>\n        \n      </Message>\n        <CustomButton link='link' to='/signin' >  messages</CustomButton>\n      </ButtonsBarContainer>\n    </ProfilContainer>\n{ /**PRODUCT MANAGEMENT*/}\n  <CollectionContainer>\n    <CollectionTitle>Suivi des Messages</CollectionTitle>\n      <AddProductContainer>\n      <ProductContainer>\n        <ProductTitle>Add Product</ProductTitle>\n      \n      </ProductContainer>\n    </AddProductContainer>\n    </CollectionContainer>\n  </MainContainer>\n  \n  )\n}\n\nconst mapStateToProps = createStructuredSelector ({\n  messages: selectCurrentMessages,\n  users:selectCurrentUsers , \n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  createMessageStart:(message) => dispatch(addMessageStart(message))\n\n})\nconst composedProfilMessages = compose(\nconnect(mapStateToProps, mapDispatchToProps),\nwithAuthorization,\nWithSpinner\n)(ProfilMessagesPage)\n\nexport default composedProfilMessages;\n","import { apifetchMessages, } from './../api/messages'\n\nexport const FETCH_MESSAGES_START = 'FETCH_MESSAGES_START'\nexport const FETCH_MESSAGES_SUCCESS = 'FETCH_MESSAGES_SUCCESS'\nexport const FETCH_MESSAGES_FAIL = 'FETCH_MESSAGES_FAIL'\n\nexport const FETCH_USERS_START = 'FETCH_USERS_START'\nexport const FETCH_USERS_SUCCESS = 'FETCH_USERS_SUCCESS'\nexport const FETCH_USERS_FAIL = 'FETCH_USERS_FAIL'\n\nexport const REMOVE_MESSAGE_START = 'REMOVE_MESSAGE_START'\nexport const REMOVE_MESSAGE_SUCCESS = 'REMOVE_MESSAGE_SUCCESS'\nexport const REMOVE_MESSAGE_FAIL = 'REMOVE_MESSAGE_FAIL'\n\n\nexport const ADD_MESSAGE_START = 'ADD_MESSAGE_START'\nexport const ADD_MESSAGE_SUCCESS = 'ADD_MESSAGE_SUCCESS'\nexport const ADD_MESSAGE_FAIL = 'ADD_MESSAGE_FAIL'\n\nexport const fetchMessagesStart =  () => ({type: FETCH_MESSAGES_START})\n\n\nexport const fetchMessagesSuccess =  (messages) => {\n    console.log(messages)    \n    return {\n                type: FETCH_MESSAGES_SUCCESS,\n                payload:messages,\n                errors: null\n            }\n    }\nexport const fetchMessagesFail =  () => {\n    return {\n        type: FETCH_MESSAGES_FAIL,\n        errors: 'fetch messages Fail'\n    }\n}\nexport const addMessageStart = () => {\n    return {\n        type: ADD_MESSAGE_START,\n       }\n}\n\nexport const addMessageSuccess = (message) => {\n    return {\n        type: ADD_MESSAGE_SUCCESS,\n        payload: message\n    }\n}\n\nexport const addMessageFail = (error) => {\n    return {\n        type: ADD_MESSAGE_FAIL,\n        payload: error\n    }\n}\n\nexport const removeMessageStart = () => {\n    return {\n        type: ADD_MESSAGE_START,\n    }\n}\nexport const removeMessageSuccess = (message) => {\n    return {\n        type: REMOVE_MESSAGE_SUCCESS,\n        payload: message\n    }\n}\n\nexport const removeMessageFail = (error) => {\n    return {\n        type: REMOVE_MESSAGE_SUCCESS,\n        payload: error\n\n    }\n}\n\n\nexport const fetchUsersStart =  () => ({type: FETCH_USERS_START})\n\n\nexport const fetchUsersSuccess =  (users) => {\n    console.log(users)    \n    return {\n                type: FETCH_USERS_SUCCESS,\n                payload:users,\n                errors: null\n            }\n    }\nexport const fetchUsersFail =  () => {\n    return {\n        type: FETCH_USERS_FAIL,\n        errors: 'fetch users Fail'\n    }\n}\n","import styled from 'styled-components';\nimport {textBleu} from '../../components/variables'\nexport const ContactContainer = styled.div`\n  display: flex;\n  margin: 0 auto;\n  flex-direction: column;\n  width: 400px;\n`;\n\nexport const ContactTitle = styled.h2`\n  margin: 10px 0;\n`;\nexport const ButtonsBarContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\nexport const Message = styled.h2`\nmargin: 10px;\ncolor:${textBleu}\n`;","import React, { useState} from 'react'\nimport { connect } from 'react-redux'\nimport FormInput from './../../components/FormInput/FormInput';\nimport CustomButton from './../../components/CustomButton/CustomButton';\nimport {createStructuredSelector} from 'reselect'\nimport { selectCurrentProfil} from './../../store/selectors/profil'\nimport { ContactContainer, ContactTitle, ButtonsBarContainer, Message } from './contact.styled';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Contact = ({sendMessage, match, history, createMessage}) => {\n\nconst notify = (message) => toast(`${message}`);\n\n\nconst [message, setMessage] = useState({email: '',text: '',country: '', city:''})\nconst {email , text, country, city} = message\nconst handleSubmit = async event => {\n\n\n    event.preventDefault();\n    try{\n      createMessage(country, email, message).then(\n          messageRefdb =>  {\n            \n            history.push('/')\n          ('Saved Successfully', { appearance: 'success' })\n          })\n        } catch (error) {\n      notify(error.message)\n  }\n  };\n\nconst  handleChange = event => {\n    const { name, value } = event.target;\n    setMessage({...message, [name] : value });\n  };\nreturn (\n  <ContactContainer>\n      <ContactTitle>Join us</ContactTitle>\n      <form  onSubmit={handleSubmit}>\n      <FormInput\n          type='email'\n          name='email'\n          value={email}\n          onChange={handleChange}\n          label='Email'\n          required\n      />\n      <FormInput\n          type='text'\n          name='ville'\n          value={city}\n          onChange={handleChange}\n          label='Country'\n          required\n      />\n      <FormInput\n          type='text'\n          name='ville'\n          value={country}\n          onChange={handleChange}\n          label='Country'\n          required\n      />\n      <FormInput textarea\n          rows=\"5\" cols=\"33\"\n          name='message'\n          value={message}\n          onChange={handleChange}\n          label='message'\n          required\n      />\n      <ButtonsBarContainer>\n          <CustomButton type='submit'> Send</CustomButton>\n          </ButtonsBarContainer>\n      </form>\n  </ContactContainer>\n  );\n}\n\n\n\nconst mapStateToProps = createStructuredSelector ({\n    profil: selectCurrentProfil\n})\n\nexport default connect(mapStateToProps)(Contact);\n","import styled from 'styled-components';\nimport {textBleu} from '../variables'\nexport const SignUpContainer = styled.div`\n  display: flex;\n  margin: 0 auto;\n  flex-direction: column;\n  width: 400px;\n`;\n\nexport const SignUpTitle = styled.h2`\n  margin: 10px 0;\n  font-size:2rem;\n`;\nexport const ButtonsBarContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\nexport const Message = styled.h2`\nmargin: 10px;\ncolor:${textBleu}\n`;","import React, { useState} from 'react';\nimport { connect } from 'react-redux'\nimport {withRouter} from 'react-router-dom'\nimport FormInput from './../FormInput/FormInput';\nimport CustomButton from './../CustomButton/CustomButton';\nimport {  createStructuredSelector } from 'reselect'\nimport { selectCurrentProfil} from './../../store/selectors/profil'\nimport { SignUpContainer, SignUpTitle, ButtonsBarContainer, Message } from './signUp.styled';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { signUpStart } from './../../store/actions/profil'\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst SignUp = ({signUpStart, setCurrentProfil, match, history} ) => {\n  \nconst [credential, setCredential] = useState({\n        email:'', password:'',confirmPassword:'', login:''})\n  \nconst notify = (message) => toast(`${message}`);\nconst {  email, login, password, confirmPassword } = credential;\n  \nconst  handleSubmit =  event => {\n    event.preventDefault();\n    if (password !== confirmPassword) {\n      notify('password and confirmed dont match')\n      history.push('/signup')\n      return\n    }\n    try {\n      signUpStart({email,password,login})\n        notify(`signup succeed ${email}`)\n        history.push('/')\n    } catch (error) {\n      notify(error)\n    }\n  }\nconst handleChange = event => {\n  const { name, value } = event.target;\n    setCredential({ ...credential, [name] : value });\n}\n\n    return (\n      <>\n      <ToastContainer/>\n      <SignUpContainer>\n        <SignUpTitle>Join us</SignUpTitle>\n        <form  onSubmit={handleSubmit}>\n          <FormInput\n          type='text'\n          name='login'\n          value={login}\n          onChange={handleChange}\n          label='Login'\n          required\n        />\n          <FormInput\n            name='email'\n            type='email'\n            value={email}\n            onChange={handleChange}\n            label='Email'\n            required\n          />\n          <FormInput\n            type='password'\n            name='password'\n            value={password}\n            onChange={handleChange}\n            label='Password'\n            required\n          />\n          <FormInput\n            type='password'\n            name='confirmPassword'\n            value={confirmPassword}\n            onChange={handleChange}\n            label='Confirm Password'\n            required\n          />\n          <ButtonsBarContainer>\n            <CustomButton input type='submit' value='SIGN UP' />\n            <Message>\n              Already User?\n            </Message>\n              <CustomButton link='link' to='/signin' > SIGNIN</CustomButton>\n          </ButtonsBarContainer>\n          <ToastContainer />\n        </form>\n      </SignUpContainer>\n      </>\n    );\n}\n\n\nconst mapStateToProps = createStructuredSelector ({\n    profil: selectCurrentProfil\n})\n\nconst mapDispatchToProps = ( dispatch) => ({\n  signUpStart: (userCredential) => dispatch(signUpStart(userCredential))\n})\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(SignUp))\n","import styled from 'styled-components';\n\nexport const SignInContainer = styled.div`\n  \n  display: flex;\n  flex-direction: column;\n  margin:0 auto;\n  width: 400px;\n  @media (max-width: 800px) {\n    background-color:black;\n  }\n  `;\n\nexport const SignInTitle = styled.h2`\n  margin: 10px 0;\n  font-size:2rem;\n`;\n\nexport const ButtonsBarContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  \n  justify-content: space-between;\n`;\n","/**\n * 23bmgPxAML4e\n */\nimport React, { useState} from 'react';\nimport { connect } from 'react-redux'\nimport {selectCurrentProfil } from './../../store/selectors/profil'\nimport FormInput from '../FormInput/FormInput';\nimport CustomButton from '../CustomButton/CustomButton';\nimport { googleSigninStart, emailSigninStart, setCurrentProfil} from '../../store/actions/profil';\nimport { createStructuredSelector } from 'reselect'\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport {\n  SignInContainer,\n  SignInTitle,\n  ButtonsBarContainer\n} from './signIn.styled';\n\nconst SignIn = ({googleSigninStart, emailSigninStart, history}) =>  {\nconst [credential, setCredential] = useState({})\n   \nconst notify = (message) => toast(`${message}`);\n\nconst handleSubmit = async event => {\n  event.preventDefault();\n    try {\n      console.log({credential})\n      \n      await emailSigninStart(credential)\n      notify(`${credential} is connected`)\n      history.push(`/profil`);\n  }catch(error) {\n    notify(`${error}` )\n}\n}\n\nconst handleChange = (event ) => {\n  const {value, name} = event.target\n  const moncred = {[name]: value}\n  setCredential({...credential, ...moncred})\n}\nreturn (\n      <SignInContainer>\n       <SignInTitle>Sign in </SignInTitle>\n        <form onSubmit={handleSubmit}>\n          <FormInput\n            name='email'\n            type='email'\n            handleChange={handleChange }\n            value={credential['email']}\n            label='email'\n            required\n          />\n          <FormInput\n            name='password'\n            type='password'\n            value={credential['password']}\n            handleChange={handleChange}\n            label='password'\n            required\n          />\n          <ButtonsBarContainer>\n            <CustomButton type='submit'> Sign in </CustomButton>\n            <CustomButton type='button' onClick={googleSigninStart} isGoogleSignIn>\n              Google SignIn \n            </CustomButton>\n          </ButtonsBarContainer>\n          <ToastContainer />\n        </form>\n\n      </SignInContainer>\n    );\n  }\n\nconst mapStateToProps = createStructuredSelector \n({ profil: selectCurrentProfil })\n\nconst mapDispatchToProps = (dispatch) => ({ \n  googleSigninStart : () => dispatch(googleSigninStart()),\n  emailSigninStart : (email, password) => dispatch(emailSigninStart({email, password}))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\n","import styled from 'styled-components'\nimport {blanc} from '../../components/variables'\nexport const MainContainer = styled.div`\nmax-width: 1100px !important;\nmargin: 0 auto;\nwidth:100%;\nbackground: white;\ndisplay: flex;\nflex-direction: column;\ntext-align: center;\nmargin: 7rem auto 0;\nflex: 1 0 auto;\n`\n","import React, { useEffect, useState } from 'react';\nimport { Switch, Route, Redirect, withRouter} from 'react-router-dom';\nimport { connect } from 'react-redux'\nimport { createStructuredSelector} from 'reselect'\nimport Selection from '../../components/Selection/Selection'\nimport About from '../about/about'\nimport CheckoutPage from '../checkout/checkout.jsx'\nimport shopPage from '../shop/shop.jsx'\nimport productsPage from './../productsPage/productsPage';\nimport composedProfilProducts from '../profil/profilProducts.jsx'\nimport composedProfilMessages from '../profil/profilMessages.jsx'\n//import composedProfilProducts from '../profil/ProfilCollection'\n\nimport Contact from '../contact/contact'\nimport {isEmpty} from './../../util/is-empty'\nimport SignUp from './../../components/SignUp/SignUp'\nimport SignIn from '../../components/SignIn/SignIn';\nimport  { selectCurrentProfil} from './../../store/selectors/profil'\nimport { MainContainer } from'./main.styled';\n\nconst MainPage = ({ currentProfil}) => {\n\nreturn (\n    <Switch>\n        <MainContainer>\n            <Route exact path='/' component= { Selection} />\n            <Route exact path='/contact' component= {Contact} />\n            <Route exact path='/signup' render={() => {\n                console.log({currentProfil})  \n\n                return isEmpty(currentProfil) ? (<SignUp/>) : <Redirect to='/'/>\n            }\n        }\n        />    \n            <Route exact path='/signin' render={ () => {\n                if(!isEmpty(currentProfil))  console.log(currentProfil.email)  \n                \n                return isEmpty(currentProfil) ?  (<SignIn />): <Redirect to='/'/>\n            }\n        } />\n            <Route exact path='/profil' component={composedProfilProducts} />\n            <Route exact path='/messages' component={composedProfilMessages} />\n            \n            <Route extact path='/shop' component={shopPage} />\n            <Route exact path='/about' component= {About} />\n            <Route exact path='/checkout' component={CheckoutPage} />\n            <Route exact path='/products/:productSlug' component={productsPage} />\n        </MainContainer>\n    </Switch>\n)\n    }\n\nconst mapStateToProps = createStructuredSelector ({\n    currentProfil: selectCurrentProfil\n}) \n\nexport default withRouter(connect(mapStateToProps)(MainPage))\n","import styled, { css } from 'styled-components'\nimport {Link} from 'react-router-dom'\nimport { maxWidth, blanc, green2, green4, textBlack, blue41,} from './../../components/variables'\n\nexport const FooterContainer = styled.div`\n    background-color: ${blanc};\n    flex-direction:row ;\n    display: flex;\n    max-width:${maxWidth} ;\n    justify-content: center;\n    align-items:flex-end;\n    flex-wrap:nowrap;\n    height:3rem;\n    justify-content:space-around;\n    align-content:stretch;\n`\n\nexport const NavigationContainer = styled.div`\n    padding: 1rem auto;\n    font-size: 1.4rem;\n    display: flex;\n    flex-direction:row;\n    align-items: center;\n    justify-content:space-around;\n    bottom:1rem;\n    `\n\nexport const CustomLinkContainer = styled(Link)`\n      color: ${green4};\n      text-decoration:none;\n      display:flex;\n      letter-spacing: 0.5px;\n      padding: 1rem 2rem 1rem;\n      font-size: 1.5rem;\n      font-weight:400;\n      flex-shrink:0;\n      text-transform: uppercase;\n      cursor: pointer;\n      &:hover {\n        background-color: ${blue41};\n        opacity:0.8;\n        border: none;\n        font-size: 1.5rem;\n        color:${textBlack};\n }\n `\nexport const CustomAContainer = styled.a `\n      color: ${green4};\n      text-decoration:none;\n      display:flex;\n      letter-spacing: 0.5px;\n      padding: 1rem 2rem 1rem;\n      font-size: 1.5rem;\n      font-weight:400;\n      flex-shrink:0;\n      text-transform: uppercase;\n      cursor: pointer;\n      &:hover {\n        background-color: ${blue41};\n        opacity:0.5;\n        border: none;\n        font-size: 1.5rem;\n        color:${textBlack};\n }\n `\n\nexport const CopyRight = styled.div`\n    color: ${textBlack};\n    padding: 1rem auto;\n    font-size: 1.4rem;\n    \n`\nexport const buttonStyles = css`\n  background-color: ${textBlack};\n  color: white;\n  border: none; \n  &:hover {\n    background-color: white;\n    color: black;\n    border: 1px solid black;\n  }\n`;\n\nconst invertedButtonStyles = css`\n  background-color: white;\n  color: black;\n  border: 1px solid black;\n\n  &:hover {\n    background-color: black;\n    color: white;\n    border: none;\n  }\n`;","import React from 'react'\nimport { FooterContainer, NavigationContainer, CustomLinkContainer, CopyRight, CustomAContainer } from './Footer-styled'\nimport { Router} from 'react-router-dom'\nimport LogoBox from '../../components/Logo/Logo'\nconst Footer = ({loading,error}) => {\nreturn (\n\n        <FooterContainer>\n             <NavigationContainer>\n                <CustomAContainer href='https://lami1a.org'> company </CustomAContainer> \n                <CustomLinkContainer to='/careers'>careers</CustomLinkContainer> \n                <CustomLinkContainer to='/policy'>policy</CustomLinkContainer> \n                 </NavigationContainer>\n            <CopyRight>\n                Built by &copy; \n                    <span className=\"navbar-brand \">lami1a\n                    </span>\n            </CopyRight>\n        </FooterContainer>\n)\n         \n}\nexport default (Footer)","import styled from 'styled-components'\nimport {blue1, maxWidth} from './components/variables'\n\nexport const AppContainer =  styled.div`\n  color: ${blue1};\n  padding:  auto;\n  text-align: center;\n  display: flex;\n  margin: auto;\n  position:relative;\n  flex-direction: column;\n  max-width:${maxWidth};\n  flex: 1 0 auto;\n  height:100vh;\n  `","import React, { useState, useEffect }  from 'react';\nimport {connect} from 'react-redux'\nimport { checkProfilSession} from './../src/store/actions/profil' \nimport Header from './components/Header/Header' \nimport Main from './pages/main/main'\nimport Footer from './components/Footer/Footer' \nimport {AppContainer} from './app-styled.jsx'\nimport {createStructuredSelector} from 'reselect'\nimport { fetchSelectionsStart } from './../src/store/actions/selection'\nimport {selectCurrentProfil}  from './../src/store/selectors/profil'\nimport { isEmpty } from './util/is-empty';\nimport { createProductsCollection } from './../src/util/db/db'\nconst App = ({ fetchSelectionsStart, checkProfilSession, currentProfil }) => {\n\nuseEffect(() => {\n      checkProfilSession()\n      fetchSelectionsStart()\n     // createProductsCollection()\n  }, [checkProfilSession, fetchSelectionsStart] ) \n\n  return (\n    <AppContainer>\n    <Header />\n      <Main />\n             v2 Bismi ALLAH        \n      <Footer/> \nd      </AppContainer>\n     );\n  }\n\n\nconst mapDispatchToProps = (dispatch) => ({\n  checkProfilSession: () => dispatch(checkProfilSession()),\n  fetchSelectionsStart: () => dispatch(fetchSelectionsStart())\n})\nconst mapStateToProps = createStructuredSelector({\n  currentProfil :selectCurrentProfil\n\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const removeProductsFromProfil = (products, product) => {\n    products.filter(prod => prod.id !== product.id)\n}","import {\n    \n    SIGNIN_FAIL,SIGNIN_SUCCESS, EMAIL_SIGNIN_START,\n    SIGNUP_FAIL, SIGNUP_SUCCESS,\n     LOGOUT_SUCCESS,LOGOUT_FAIL, \n    SET_CURRENT_PROFIL,\n    ADD_TO_COLLECTION,\n    GET_COLLECTION,\n    REMOVE_FROM_COLLECTION,\n    GET_ALL_PROFILS} from '../actions/profil'\n    import { removeProductsFromProfil } from './reducersUtils'\n    \n    const initialState = {\n        currentProfil: '',\n        products: '',\n        collection:'',\n        //status: user / org / fam\n        status:'user',\n        admin:false,\n        authenticated:false,\n        loading: false,\n        error:null\n       }\n\nconst profilReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_CURRENT_PROFIL:\n        //{ products, collection, admin, status} = action.payload    \n        return {\n                ...state,\n                currentProfil: action.payload,\n                authenticated:true,\n                loading: false,\n                error:null    \n            };\n        case EMAIL_SIGNIN_START:\n            return {\n                ...state,\n                currentProfil: action.payload,\n                \n            }; \n        case SIGNUP_SUCCESS:\n        case SIGNIN_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                error: null,\n                authenticated:true,\n                currentProfil:action.payload\n            };\n        case SIGNUP_FAIL:\n        case SIGNIN_FAIL:\n        case LOGOUT_FAIL:\n            return {\n                ...state,\n                loading: false,\n                error: action.payload,\n                authenticated:false\n            };\n        case GET_COLLECTION:\n            return {\n                ...state,\n                collections:action.payload\n            };\n        case GET_ALL_PROFILS:\n            return {\n                ...state,\n                profils:action.payload\n            };\n        case ADD_TO_COLLECTION:\n            return {\n                ...state,\n                products: [...state.products, action.payload]\n            };\n        case REMOVE_FROM_COLLECTION:\n            const products = removeProductsFromProfil(state.products, action.payload)\n            return {\n                ...state,\n                products: [...products]\n            };\n        case LOGOUT_SUCCESS:\n            return {\n                ...state,\n                currentProfil:'',\n                error: null,\n                authenticated:false,\n                id:'',\n            };\n        default:\n            return state;\n            };\n        }\n\nexport default profilReducer;","export const addItemToCart = (cartItems, cartItemToAdd) => {\n  const existingCartItem = cartItems.find(\n    cartItem => cartItem.id === cartItemToAdd.id\n  );\n\n  if (existingCartItem) {\n    return cartItems.map(cartItem =>\n      cartItem.id === cartItemToAdd.id\n        ? { ...cartItem, quantity: cartItem.quantity + 1 }\n        : cartItem\n    );\n  }\n\n  return [...cartItems, { ...cartItemToAdd, quantity: 1 }];\n};\n\nexport const removeItemFromCart = (cartItems, cartItemToRemove) => {\n  const existingCartItem = cartItems.find(\n    cartItem => cartItem.id === cartItemToRemove.id\n  );\n\n  if (existingCartItem.quantity === 1) {\n    return cartItems.filter(cartItem => cartItem.id !== cartItemToRemove.id);\n  }\n\n  return cartItems.map(cartItem =>\n    cartItem.id === cartItemToRemove.id\n      ? { ...cartItem, quantity: cartItem.quantity - 1 }\n      : cartItem\n  );\n};\n","import { TOGGLE_CART_HIDDEN, ADD_ITEM, REMOVE_ITEM, CLEAR_CART, CLEAR_ITEM_FROM_CART } from './../actions/cart'\nimport { addItemToCart, removeItemFromCart } from './cartUtils';\n\nconst INITIAL_STATE = {\n        hidden: true,\n        cartItems: []\n  };\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case TOGGLE_CART_HIDDEN:\n      return {\n        ...state,\n        hidden: !state.hidden\n      };\n    case ADD_ITEM:\n      return {\n          ...state,\n           cartItems: addItemToCart(state.cartItems, action.payload)\n      };\n    case REMOVE_ITEM:\n      return {\n        ...state,\n        cartItems: removeItemFromCart(state.cartItems, action.payload)}\n      ;\n    case CLEAR_ITEM_FROM_CART:\n      return {\n          ...state, cartItems: state.cartItems.filter(\n          cartItem => cartItem.id !== action.payload.id\n        )\n      };\n    case CLEAR_CART:\n      return {\n          ...state, \n          cartItems:[]\n        \n      };\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;\n","import {\n    FETCH_SELECTIONS_SUCCESS,\n    FETCH_COLLECTIONS_SUCCESS,\n    FETCH_PRODUCTS_SUCCESS,\n    FETCH_SELECTIONS_FAIL,\n    INIT_COLLECTION,\n    FETCH_COLLECTION,\n    REMOVE_COLLECTION_SUCCESS,\n    REMOVE_SELECTION,\n    INIT_SELECTIONS,\n    ADD_COLLECTION_SUCCESS,\n    FETCH_PRODUCTS_FAIL,\n} from './../actions/selection'\nconst initialState = {\n        selections:{},\n        collections:{},\n        collectionsTitle:'',\n        productsTitle:'',\n        isFetching:false,\n        items:{},\n        error: '',\n        loading: false\n    };\n    \nconst selectionReducer = ( state = initialState , action) => {\n    switch (action.type) {\n        case FETCH_SELECTIONS_SUCCESS:\n           // console.log(action.payload)\n            return {\n                ...state,\n                selections: action.payload\n            };\n            \n        case FETCH_COLLECTIONS_SUCCESS:\n            return {\n                ...state,\n                collections: action.payload\n            };\n            \n        case FETCH_PRODUCTS_SUCCESS:\n            return {\n                ...state,\n                items: action.payload\n            };\n        \n\n        case ADD_COLLECTION_SUCCESS:\n            return {\n                ...state,\n                 collections: [...state.collections, action.payload]\n            };\n        \n        case REMOVE_COLLECTION_SUCCESS:\n            return {\n                ...state,\n                collections: action.payload\n            };\n        \n        default:\n            return state ;       \n    \n    }\n}\n\nexport default selectionReducer; \n","import {combineReducers } from 'redux'\nimport profilReducer from './profil'\nimport cartReducer from './cart'\nimport selectionReducer from './selection'\n//import shopReducer from './shop'\nimport { persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n    whitelist: ['cart', 'selection', 'profil'] \n  }\n\nconst rootReducer = combineReducers(\n    {   \n        profil:profilReducer,\n        cart:cartReducer,\n        selection:selectionReducer\n    }\n)\n\nexport default persistReducer(persistConfig, rootReducer)","import options from './../../config'\nimport {isEmpty } from '../is-empty'\nimport firebase, { auth, firestore} from './../db/db'\nimport bcrypt from 'bcryptjs'\n\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\n\ngoogleProvider.setCustomParameters({ prompt: 'select_account' });\n\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\n\nexport const encryptePassword = ( password ) => {\n  if (!password) {\n    return {\n      error:true,\n      message:' No password to encrypt'\n    }\n  }\n  bcrypt.hash(this.password, 8, (err, hash) => {\n    if (err) {\n      return err\n    }\n    return hash\n     })\n}\n\nexport const verifPassword = (password, hash) => {\n  const passwordHash = hash\n  return new Promise((resolve, reject) => {\n  bcrypt.compare(password, passwordHash, (err, same) => {\n    if (err) {\n      return reject(err)\n    }\n    resolve(same)\n  })\n  })\n}\n\nexport const getCurrentProfil = () => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe =  auth.onAuthStateChanged(userAuth => {\n      unsubscribe()\n      resolve(userAuth)\n    }, reject)\n})\n} \n\n\n// on envoie le nom de la collection  [selections] // et collectin 'coran / sagesse / objets ludiques / discount'\n","import {takeLatest, call, put, all} from \"redux-saga/effects\";\nimport {\n    GOOGLE_SIGNIN_START,\n    EMAIL_SIGNIN_START,\n    SIGNUP_START,\n    SigninSuccess,\n    SigninFail,\n    signUpFail,\n    signUpSuccess,\n    CHECK_PROFIL_SESSION,\n    LOGOUT_START,\n    logOutFail,\n    logOutSuccess,\n    SIGNUP_SUCCESS,\n    setCurrentProfil,\n    UPDATE_PROFIL_START,\n    updateProfilFail,updateProfilSuccess,\n    ADD_USER_START,addUserSuccess, addUserFail\n} from './../actions/profil'\nimport {googleProvider, getCurrentProfil} from './../../util/db/auth.firebase'\nimport {apiRegister, apiCreateUserProfilDocument,apiUpdateCredential} from './../api/profils'\nimport {requestNotificationPermissions} from './../api/messages'\n\nimport { isEmpty } from './../../util/is-empty'\nimport firebase, { auth, firestore} from './../../util/db/db'\nimport { selectCurrentCollection, selectCurrentProfil } from \"../selectors/profil\";\n\nexport function* getSnapShotData(uid) {\n    try {\n        let profilFull = {}\n        const profilRef = yield firestore.collection('profils').doc(uid)\n        console.log({profilRef })\n        yield profilRef.get().then(async doc => {\n            if (doc.exists) {\n                console.log(doc.data())\n                profilFull = doc.data()\n                return doc.data()\n            }\n            else \n            {\n                console.log({doc})\n            }\n        })/* \n        yield put(SigninSuccess({\n            id:uid,\n            ...profilFull\n        })) */\n        \n    } catch (error) {\n        yield put(SigninFail(error))\n    }\n}\n//Google\nexport function* googleSignIn() {\n    try {\n        const {user} = yield auth.signInWithPopup(googleProvider);\n        const { uid, email} = user\n        console.log({user})\n        const profilSnapshot = yield call(apiCreateUserProfilDocument,[uid,email])\n        console.log(profilSnapshot.data())\n        if(!isEmpty(profilSnapshot)) {\n              yield  put(setCurrentProfil(profilSnapshot.data()))\n            } else {\n           return Promise.reject(\n               {error:{\n               message:\"api create profil returns not exist\"\n           } })\n        }\n        \n        }catch (error) {\n        yield put(SigninFail({error: {\n            error,\n            message:error.message\n        }}))\n    }\n}\n//SignUP\nexport function* signInAfterSignUP({payload: {user} }) {\n    const profilData =  yield getSnapShotData(user.uid)\n    yield put(setCurrentProfil(profilData))\n    \n    yield put(SigninSuccess({\n        id: user.uid,\n        ...profilData\n    })) \n}\n\n\n\nexport function* signUp({payload :{email, password, login}}) {\n    try {\n        const profilCredStr = yield call(apiRegister,[email, password,login])\n       yield console.log({profilCredStr})\n       const {uid, restData} = JSON.parse(profilCredStr)\n       const currentProfil = {uid,...restData}\n        yield put(signUpSuccess(currentProfil))\n        yield put(setCurrentProfil(currentProfil))\n        \n    } catch (error) {\n        yield put(signUpFail(error))\n    } \n}\n//Email SignIn\nexport function* emailSignIn({payload}) {\n    try {\n        const {email, password} = payload.email\n        const {\n            user\n        } = yield auth.signInWithEmailAndPassword(email, password);\n         \n        const profilData =  yield getSnapShotData(user.uid)\n        \n       yield put(setCurrentProfil(profilData))\n         yield put(SigninSuccess({\n            id: user.uid,\n            ...profilData\n        }))\n        \n    } catch (error) {\n        yield put(SigninFail(error))\n    }\n}\n// logout \nexport function* logout(){\n    try {\n        console.log('logout')\n         yield auth.signOut()\n        yield put(logOutSuccess())\n    } catch (error) {\n        yield put(logOutFail(error))\n    }\n} \n//update profil\nexport function* updateProfilAsync(credUpdate) {\n    try {\n        const {login,email,address, city , country} = credUpdate\n        yield call(apiUpdateCredential,[login,email,address, city , country])\n    } catch (error) {\n        put(updateProfilFail(error))\n    }\n}\n\n//handlers saga start actions\nexport function* isAuthenticated() {\n    try {\n        const userAuth = yield call(getCurrentProfil)\n        if(!userAuth) return\n        yield call(requestNotificationPermissions)\n        const profilData =  yield getSnapShotData(userAuth.uid)\n      yield put(setCurrentProfil(profilData))\n    } catch (error) {\n        yield put(SigninFail(error))\n    }\n}\n\nexport function* onUpdateStart() {\n    yield takeLatest(UPDATE_PROFIL_START, updateProfilAsync)\n}\nexport function* onGoogleSignInStart() {\n    yield takeLatest(GOOGLE_SIGNIN_START, googleSignIn)\n}\n\nexport function* onEmailSignInStart() {\n    yield takeLatest(EMAIL_SIGNIN_START, emailSignIn)\n}\n\nexport function* onSignUpSuccess() {\n    yield takeLatest(SIGNUP_SUCCESS, signInAfterSignUP) \n} \n\nexport function* onSignUpStart() {\n    yield takeLatest(SIGNUP_START, signUp)\n}\nexport function* onLogoutStart() {\n    console.log('logout start')\n    yield takeLatest(LOGOUT_START, logout)\n}\nexport function* onCheckProfilSession() {\n    yield takeLatest(CHECK_PROFIL_SESSION, isAuthenticated)\n}\n\nexport function* profilSagas() {\n    yield all([    \n        call(onGoogleSignInStart),\n        call(onEmailSignInStart),\n        call(onSignUpStart),\n        call(onCheckProfilSession),\n        call(onLogoutStart),\n        call(onSignUpSuccess),\n        call(onUpdateStart)\n    ])\n}","import {  all , put , call, takeLatest } from 'redux-saga/effects'\nimport {isEmpty} from './../../util/is-empty'\nimport { fetchCollectionsSuccess, fetchCollectionsFail,\n     fetchSelectionsSuccess, fetchSelectionsFail,\n         fetchProductsFail, fetchProductsSuccess,\n         addProductSuccess, addProductFail\n    } from '../actions/selection'\nimport { FETCH_COLLECTIONS_START, FETCH_PRODUCTS_START, FETCH_SELECTIONS_START,\n     ADD_PRODUCT_START} from './../actions/selection'\nimport {firestore} from './../../util/db/db'\nimport {transformCollectionSnapshotToMap} from './../../util/db/db'\nimport {isAuthenticated} from './profil'\nimport {apiCreateProduct} from './../api/selections'\nimport slug from 'slug'\nimport { clearCart } from '../actions/cart'\nimport { GET_COLLECTIONS_TITLE } from '../actions/profil'\n\n//SELECTION \nexport function* fetchSelectionsAsync( ) {\n    try {\n        let collectionsMap = null\n        const userProfil= yield call(isAuthenticated)\n        if(!userProfil ) {\n            yield put(clearCart())\n        } \n        const selectionRef = yield firestore.collection('selections')\n         const snapshot = yield selectionRef.get()\n        collectionsMap = yield call(transformCollectionSnapshotToMap, snapshot)\n        yield put(fetchSelectionsSuccess(collectionsMap))    \n        }\n    catch (error) {\n        console.log(`${error} sagas selections`)\n      yield put(fetchSelectionsFail(error.message))  \n     }\n}\nexport function* onfetchSelectionsStart() {\n    yield takeLatest(FETCH_SELECTIONS_START, fetchSelectionsAsync)\n}\n//COLLECTION managment\nexport function* fetchCollectionsAsync( ) {\n    try {\n        const collections = []\n         firestore.collection('collections').then(collectionRef => (collectionRef.get())).then(snapShot =>\n                {\n                    snapShot.map(collection => {\n                      return  collections.concat(collection.data())\n                    })\n                }\n            )\n        yield put(fetchCollectionsSuccess(collections))    \n    }\n    catch (error) {\n      yield put(fetchCollectionsFail(error.message))  \n     }\n}\nexport function* onfetchCollectionsStart() {\n    yield takeLatest(FETCH_COLLECTIONS_START, fetchCollectionsAsync)\n}\n//FETCH products\nexport function* createProduct({payload:{uid,product}}){\ntry {\n    const {title, description,price,collection,file } = product \n    const productRegistred = yield call(apiCreateProduct,[uid,product])\n    if(!isEmpty(productRegistred)) {\n        put(addProductSuccess(productRegistred))\n    }else {\n        put(addProductFail({error:'product cant be added'}))\n    }\n}catch(error) {\n    yield put(addProductFail(error))\n    } \n}\n\nexport function* fetchProductsAsync() {\n    try {\n        const products = []\n        const collectionsSnapshot =  firestore.collection('products').get()\n        collectionsSnapshot.docs.map(colSnapshot => {\n            console.log(colSnapshot.data())\n            return products.push(colSnapshot)\n        })\n        yield put(fetchProductsSuccess(products))    \n    }\n    catch (error) {\n      yield put(fetchProductsFail(error.message))  \n     }\n}\n\nexport function* onfetchProductsStart() {\n    yield takeLatest(FETCH_PRODUCTS_START, fetchProductsAsync)\n\n} \nexport function* onAddProductStart() {\n    yield takeLatest(ADD_PRODUCT_START, createProduct)\n\n} \n\nexport function* getCollectionsTitleAsync () {\n    \n}\n\nexport function* onGetCollectionsTitle() {\n    yield takeLatest(GET_COLLECTIONS_TITLE, getCollectionsTitleAsync)\n\n} \n\n// Root ProfilsSagas\n\nexport function* selectionSagas() {\n     yield all([call(onfetchCollectionsStart),\n            call(onfetchProductsStart),\n             call(onfetchSelectionsStart),\n             call(onAddProductStart),\n             call(onGetCollectionsTitle)\n            ])\n }\n","import {takeLatest, call, put, all} from \"redux-saga/effects\";\nimport { SIGNUP_SUCCESS, LOGOUT_SUCCESS, DEL_CART_ON_START} from './../actions/profil'\nimport { clearCart} from './../actions/cart'\nexport function* clearCartOnSignOutSuccess() {\n    yield put(clearCart())\n}\nexport function* clearCartOnStart() {\n    yield put(clearCart)\n}\n\nexport function* onSignOutSuccess() {\n    yield takeLatest( LOGOUT_SUCCESS, clearCartOnSignOutSuccess)\n}\n\nexport function* ondelCartOnStart() {\n    yield takeLatest( DEL_CART_ON_START, clearCartOnStart)\n}\n\n\nexport  function* cartSagas()  {\n    yield all([\n        call(onSignOutSuccess)])\n}","import { all, call  } from 'redux-saga/effects'\nimport { selectionSagas } from './sagas/selection'\nimport { profilSagas } from './sagas/profil'\nimport { cartSagas } from './sagas/cart'\n\nexport default function* rootSaga() {\n   yield all([\n        call(selectionSagas),\n        call(profilSagas),\n        call(cartSagas)\n    ])\n}","import React from 'react'   \nimport { createStore , applyMiddleware } from 'redux'\n//import { createBrowserHistory } from 'history'\nimport logger from 'redux-logger'\nimport { persistStore } from 'redux-persist'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport createSagaMiddleware from 'redux-saga'\nimport rootReducer from './reducers'\nimport rootSaga from './rootSaga'\n//import thunk from 'redux-thunk'\n\n//React.lazy(() => import('./selectors/s'));\nconst sagaMiddleware = createSagaMiddleware()\nconst middleware = [ sagaMiddleware ]\n    \nif (process.env.NODE_ENV === 'development') {\n       middleware.push(logger)\n}\n\nexport const store = createStore( rootReducer, composeWithDevTools(applyMiddleware(...middleware)))\nsagaMiddleware.run(rootSaga)\n\nexport const persistor = persistStore(store, ()=> {\n       console.log(store)\n})\n\n/**@todo*/\n/* \nif ( process.env.NODE_ENV === 'development' )  {\nstore.subscribe(() =>{console.log(`On subscribe State is :: --> ${JSON.stringify(store.getState())}`)\n              })\n} */","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux'\nimport { BrowserRouter as Router} from 'react-router-dom'\nimport {store, persistor} from './store/store'\nimport { PersistGate } from 'redux-persist/integration/react'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store} >\n    <Router>\n    <PersistGate  persistor={ persistor }>\n      <App />\n      </PersistGate>\n    </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const config = {\n  secrets: {\n    jwt: 'think!:/'\n  },\n  adminEmail: 'kazdhicham@gmail.com',\n\n  firebaseConfig :{\n    apiKey: \"AIzaSyBK6_uM1AeQgPGL7e6qowyoeB6-sK2sQr0\",\n    authDomain: \"liism-2a462.firebaseapp.com\",\n    databaseURL: \"https://liism-2a462.firebaseio.com\",\n    projectId: \"liism-2a462\",\n    storageBucket: \"liism-2a462.appspot.com\",\n    messagingSenderId: \"135614317013\",\n    appId: \"1:135614317013:web:c0392d3131b359c6b23d5c\"\n  },\n  store:'gs://liism-2a462.appspot.com/',\n  mapKey: '5bd2LX5CpNr3dyBk8VXg9WA8lzpA4vEy',\n  apiUrl: 'http://localhost:4111',\n  cert:'/cert/liil_rest.cert',\n  key:'/cert/liil_rest.key',\n  stripe_key:'pk_test_E2lsq4J7vVsSAsCdu5lsM0PW009pnudKPw',\n  stripe_pass:'sk_test_apkqAnEZpfDCfZNxSYkmO2Jy00qwgPWGB5',\n  store: 'gs://liism-2a462.appspot.com/',\n  dbCompass:\n  'mongodb+srv://kazdhicham:1AllaHouAkbar@cluster0-jo1bg.mongodb.net/lami1a?retryWrites=true&w=majority',\n\n}\n"],"sourceRoot":""}