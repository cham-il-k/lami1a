{"version":3,"sources":["config/testing.js","config/index.js","util/db/db.js","store/api/collections.js","store/api/profils.js","store/actions/profil.js","store/actions/cart.js","store/selectors/cart.js","components/Cart-Icon/cart-icon.styled.jsx","components/variables.js","components/Cart-Icon/Cart-Icon.jsx","components/Cart-Item/cart-item.styled.jsx","components/Cart-Item/Cart-Item.jsx","components/CustomButton/CustomButton.styled.jsx","components/CustomButton/CustomButton.jsx","components/Cart-Dropdown/cart.dropdown.styled.jsx","components/Cart-Dropdown/Cart-Dropdown.jsx","components/Logo/logo.styled.jsx","components/Logo/Logo.jsx","store/selectors/profil.js","util/is-empty.js","components/Header/header-styled.jsx","components/Header/Header.jsx","store/selectors/selection.js","components/SelectionItem/selection-item-styled.jsx","components/SelectionItem/Selection-Item.jsx","components/Selection/selection.styled.jsx","store/actions/selection.js","components/Selection/Selection.jsx","pages/about/about-styled.jsx","pages/about/about.jsx","components/Stripe-Button/Stripe-Button.jsx","components/Checkout-Item/checkout.item.styled.jsx","components/Checkout-Item/Checkout-Item.jsx","pages/checkout/checkout.styled.jsx","pages/checkout/checkout.jsx","components/Collection-Item/collection-item.styled.jsx","components/Collection-Item/Collection-Item.jsx","components/Collection-Preview/collection-preview.styled.jsx","components/Collection-Preview/Collection-Preview.jsx","components/With-Spinner/with-spinner.styles.jsx","components/With-Spinner/With-Spinner.jsx","components/Collections-Overview/collections.overview.styled.jsx","components/Collections-Overview/Collections-Overview.jsx","pages/collectionPage/collection.styled.jsx","pages/collectionPage/collectionPage.jsx","pages/shop/shop.jsx","components/Product-Item/product-item.styled.jsx","components/Product-Item/Product-Item.jsx","pages/productsPage/products-styled.jsx","pages/productsPage/productsPage.jsx","pages/profil/collection.styled.jsx","pages/profil/profilCollection.styled.jsx","components/FormInput/FormInput-styled.jsx","components/FormInput/FormInput.jsx","pages/profil/ProfilCollection.jsx","pages/profil/profil.styled.jsx","pages/profil/profil.jsx","pages/contact/contact.styled.jsx","pages/contact/contact.jsx","components/SignUp/signUp.styled.jsx","components/SignUp/SignUp.jsx","components/SignIn/signIn.styled.jsx","components/SignIn/SignIn.jsx","pages/main/main.styled.jsx","pages/main/main.jsx","components/Footer/Footer-styled.jsx","components/Footer/Footer.jsx","app-styled.jsx","App.jsx","serviceWorker.js","store/reducers/reducersUtils.js","store/reducers/profil.js","store/reducers/cartUtils.js","store/reducers/cart.js","store/reducers/selection.js","store/reducers/index.js","store/sagas/selection.js","util/db/auth.firebase.js","store/sagas/profil.js","store/sagas/cart.js","store/rootSaga.js","store/store.js","index.js","config/dev.js"],"names":["config","secrets","jwt","dbUrl","env","process","baseConfig","isDev","isTest","port","JWT_SECRET","jwtExp","envConfig","require","merge","firebase","options","firebaseConfig","auth","firestore","transformCollectionSnapshotToMap","Timestamp","selectionsSnapshot","docs","map","selection","data","title","collections","id","imageUrl","routeName","encodeURI","reduce","accumulator","collection","toLowerCase","apifetchCollections","a","get","selectionSnapshot","onSnapshot","snapshot","docRef","apiRegister","email","password","login","props","createUserWithEmailAndPassword","userRef","user","userProfil","uid","products","apiCreateUserProfilDocument","userCred","Promise","reject","message","console","log","createdAt","Date","doc","set","error","signUpSuccess","additionalData","type","payload","SigninSuccess","profil","SigninFail","toggleCartHidden","addItem","item","selectCart","state","cart","selectCartItems","createSelector","cartItems","selectCartHidden","hidden","selectCartItemsCount","accumalatedQuantity","cartItem","quantity","selectCartTotal","price","CartContainer","styled","div","ShoppingIcon","ItemCountContainer","span","mapStateToProps","createStructuredSelector","itemCount","connect","dispatch","onClick","className","icon","faShoppingCart","CartItemContainer","CartItemImage","img","ItemDetailsContainer","CartItem","name","src","alt","buttonStyles","css","invertedButtonStyles","googleSignInStyles","getButtonStyles","isGoogleSignIn","inverted","CustomButtonContainer","button","CustomLinkContainer","Link","CustomInputContainer","input","CustomButton","children","link","CartDropdownContainer","CartDropdownButton","EmptyMessageContainer","CartItemsContainer","withRouter","history","length","key","push","LogoContainer","NameSite","TeteLogo","YadLogo","bat","keyframes","CorLogo","Point","LogoBox","to","selectProfil","selectCurrentProfil","currentProfil","isEmpty","value","undefined","Object","keys","trim","HeaderContainer","OptionsContainer","OptionLink","logOutStart","selectedSelection","selectSelectedSelections","selections","selectSelections","isFetching","SelectionItemContainer","size","BackgroundImageContainer","ContentContainer","ContentTitle","ContentSubtitle","imageUrlrep","linkUrl","match","toUpperCase","SelectionMenuContainer","fetchCollectionsSuccess","errors","fetchCollectionsFail","fetchProductsSuccess","Selection","menus","this","otherProps","Component","fetchSelections","AboutContainer","about","StripeCheckoutButton","priceForStripe","publishableKey","PUBLIC_KEY","label","billingAddress","shippingAddress","description","currency","amount","panelLabel","token","axios","post","url","method","then","response","alert","catch","JSON","parse","stripeKey","CheckoutItemContainer","ImageContainer","TextContainer","QuantityContainer","RemoveButtonContainer","clearItem","clearItemFromCart","removeItem","CheckoutPageContainer","CheckoutHeaderContainer","HeaderBlockContainer","TotalContainer","WarningContainer","total","CollectionItemContainer","BackgroundImage","CollectionFooterContainer","NameContainer","PriceContainer","LinkProduct","addProduct","product","edition","desc","tags","CollectionPreviewContainer","TitleContainer","h1","PreviewCollections","PreviewCollection","path","entries","i","SpinnerOverlay","SpinnerContainer","WithSpinner","WrappedComponent","isLoading","CollectionsOverviewContainer","CollectionsOverviewContain","compose","index","otherCollectionProps","CollectionPageContainer","CollectionTitle","h2","CollectionItemsContainer","CollectionPageContain","ownProps","selectionId","params","filter","items","forEach","col","ShopPage","fetchProductsStart","exact","render","ProductItemContainer","AddButton","ProductFooterContainer","ProductItemCompose","location","ProductsPageContainer","ProductsTitle","ProductsItemsContainer","ProductsPageContain","collectionId","masel","elem","sel","productsCollection","prod","ButtonsBarContainer","Message","shrinkLabelStyles","GroupContainer","FormInputContainer","FormTextAreaContainer","textarea","FormInputLabel","FormInput","handleChange","onChange","useState","features","loading","image","onSubmit","handleSubmit","required","selected","handleFile","ProfilContainer","ProfilTitle","ProfilPage","city","country","address","ContactContainer","ContactTitle","sendMessage","createMessage","notify","toast","text","setMessage","event","preventDefault","messageRefdb","appearance","target","rows","cols","SignUpContainer","SignUpTitle","signUpStart","userCredential","setCurrentProfil","confirmPassword","credential","setCredential","SignInContainer","SignInTitle","googleSigninStart","emailSigninStart","MainContainer","component","Contact","extact","About","CheckoutPage","productsPage","FooterContainer","NavigationContainer","CustomAContainer","CopyRight","Footer","href","AppContainer","checkProfilSession","fetchSelectionsStart","useEffect","Boolean","window","hostname","removeProductsFromProfil","initialState","status","admin","profilReducer","action","profils","addItemToCart","cartItemToAdd","find","removeItemFromCart","cartItemToRemove","INITIAL_STATE","cartReducer","selectionReducer","persistConfig","storage","whitelist","rootReducer","combineReducers","persistReducer","fetchSelectionsAsync","onfetchSelectionsStart","fetchCollectionsAsync","onfetchCollectionsStart","fetchProductsAsync","onfetchProductsStart","selectionSagas","collectionsMap","selectionRef","call","put","takeLatest","collectionRef","snapShot","concat","colSnapshot","all","googleProvider","GoogleAuthProvider","setCustomParameters","prompt","getSnapShotFromAuth","googleSignIn","signInAfterSignUP","signUp","emailSignIn","logout","isAuthenticated","onGoogleSignInStart","onEmailSignInStart","onsignUpSuccess","onSignUpStart","onLogoutStart","onCheckProfilSession","profilSagas","signInWithPopup","userSnapShot","signInWithEmailAndPassword","signOut","resolve","unsubscribe","onAuthStateChanged","userAuth","clearCartOnSignOutSuccess","onSignOutSuccess","cartSagas","rootSaga","sagaMiddleware","createSagaMiddleware","middleware","store","createStore","composeWithDevTools","applyMiddleware","run","persistor","persistStore","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","adminEmail","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","mapKey","apiUrl","cert","stripe_key","stripe_pass"],"mappings":"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","file":"static/js/main.e282d6cc.chunk.js","sourcesContent":["export const config = {\n  secrets: {\n    jwt: 'learneverything'\n  },\n  dbUrl: 'mongodb://localhost:27017/api-design-test'\n}\n","import { merge } from 'lodash'\nconst env = process.env.NODE_ENV || 'development'\n\nconst baseConfig = {\n  env,\n  isDev: env === 'development',\n  isTest: env === 'testing',\n  port: 8080,\n  secrets: {\n    jwt: process.env.JWT_SECRET,\n    jwtExp: '100d'\n  }\n}\n\nlet envConfig = {}\n\nswitch (env) {\n  case 'dev':\n  case 'development':\n    envConfig = require('./dev').config\n    break\n  case 'test':\n  case 'testing':\n    envConfig = require('./testing').config\n    break\n  default:\n    envConfig = require('./dev').config\n}\n\nexport default merge(baseConfig, envConfig)\n","import * as firebase from 'firebase/app'\n//import * as firebaseui from 'firebaseui'\nimport 'firebase/auth'\nimport 'firebase/firestore'\nimport 'firebase/functions'\nimport 'firebase/storage'\nimport options from './../../config'\nfirebase.initializeApp(options.firebaseConfig) \n \n/* firebaseApp.onLog((level='error')=> {\n  console.log(firebaseApp)\n})\n */\nexport default firebase\nexport const auth = firebase.auth()\nexport const firestore = firebase.firestore()\nexport const storageRef = firebase.storage()\nexport const {\n    Timestamp\n  } = firebase.firestore\n\n\n/**\n * tools \n * @param {string} selectionName \n */\n export const addSelection = async (selectionName) => {\n   const objectToAdd = Object.entries([])\n   let writeBatch = firestore.batch()\n   try {\n     // recup collection Ref \n     const collectionRef = await firestore.collection(selectionName)\n     //init le write batch \n     // la boucle de credations des collections  \n     const querySnapshot = await collectionRef.get()\n     if (querySnapshot.empty) {\n       objectToAdd.forEach(async entry => {\n         // creation des objects lié  la clé  key  \n         const newDocRef = collectionRef.doc(`${entry[0]}`)\n         writeBatch.set(newDocRef, entry[1])\n       })\n     }\n      writeBatch.commit().then(res => ({\n       error: null,\n       message: `batch commit ${res}`\n     }))\n   } catch (error) {\n     return {\n       error: true,\n       message: `batch commit error  ${error}`\n     }\n   }\n }\n export const transformCollectionSnapshotToMap = (selectionsSnapshot) => {\n  const transformedCollection = selectionsSnapshot.docs.map(selection => {\n    const { title, collections, id, imageUrl} = selection.data()\n    return {\n      routeName: encodeURI(title),\n      id,\n      title,\n      imageUrl,\n      collections\n    }\n  })\n     return  transformedCollection.reduce((accumulator, collection) => {\n        accumulator[collection.title.toLowerCase()]= collection\n        return accumulator\n    },{})\n}\n\nexport const createContatctDocument = (country, email, message) => {\n  if(email) {\n    firestore.collection('contact').get().then(snapshot => {\n      snapshot.docs.map(emailent => (emailent===email))\n    })\n  }  \n  const collectionRef = firestore.collection('contact')\n\n\n}\n\n/**\n * @augments (collectionRef, [IdsRef])\n */\nexport  const  readConcurrently = async (collection, ids) => {\n\n  const docSnap =  ids.map(id => collection.doc(id).get())\n  const result = await Promise.all(docSnap)\n  return result.map(v => v.data())  \n}\n\n/**\n * Call admin privileges token\n * @param {email} param0 \n */\n\nexport const adminCheck =(userRef) => {\n  userRef.getIdTokenResult().then(idTokenResult => {\n    if(idTokenResult.claims.admin) {\n      /**\n       * @todo setProfilAdmin links \n       */\n    }else {\n\n\n    }\n  })\n\n}\n/***\n * manage products collection\n */\nexport const deletProduct = (doc) => {\n\n  firestore.collection('products').doc(doc).delete()  \n}\n\nexport const updateProduct = (doc) => {\n\n  firestore.collection('products').doc(doc).delete()  \n}\n/**\n * reate galery products/ and Selections\n * @param {*} param0 \n */\nexport const storeImageRef = (user, url, fileName) =>  {\n  \n  firestore.collection('selectionGallery').add({\n    imageUrl:`${url}`,\n    admin:`${user.uid}`,\n    fileName:`selectionGallery/${fileName}`\n  }).then(() => ({message:'image is stored'}))\n  .catch((err) => ({\n    err\n  }))\n}\n\nconst deletImage = (imageId) => {\n  auth.currentUser.getIdTokenResult().then(idTokenResult => {\n    if(idTokenResult.claims.admin){\n      firestore.collection('selectionGallery').doc(imageId).delete()\n    }\n  } )\n}\n\n/**\n * Quries\n */\n\nconst querySelection = ({...arg}) => {\n\n\n  firestore.collection(arg.collection).orderBy('date', 'desc')\n  firestore.collection(arg.collection).orderBy('date', 'desc').limit(20)\n  firestore.collection(arg.collection).orderBy('date', 'desc').startAfter('las')\n  firestore.collection(arg.collection).orderBy('date', 'desc').startAt('lastweek')\n  firestore.collection(arg.collection).orderBy('date', 'desc').endAt('lastweek')\n  firestore.collection(arg.collection).orderBy('date', 'desc').endBeforet('lastweek')\n  firestore.collection(arg.collection).orderBy('date', 'desc').where('date','<=','today').where('name','==','ja')\n  firestore.collection(arg.collection).orderBy('date', 'desc').where('products','array-contains','tivres').where('name','==','ja')\n  /**\n   * thinking aboutcomposites indexe\n   */\n  firestore.collection(arg.collection).orderBy('date', 'desc').where('autor','array-contains','hicam').where('livre','==','tafsir')\n  /**\n   * Roles\n    match /posts/{documents} {\n     getRole() {\n      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles\n  }\n\n    allow read;\n    allow update: if  getRoles().hasAny (['edit','admin']) == true\n    allow write: if  getRoles().hasAny (['admin']) == true\n/// ACL\n  match /securedata/{document}\n  allow read ;\n  allow write: if resource.data.members.hasAny(request.auth.uid)\n\n*/\n\n  /**\n   *  \n   * \n   * */ \n   }  ","import firebase, {\n    firestore, auth\n} from '../../util/db/db'\n/**\n * Selections\n */\n\nexport const apifetchSelections = async () => {\n    try {\n        const selectionSnapshot = await firestore.collection('selections').get()\n        const selections = []\n        console.log({selectionSnapshot})\n        await selectionSnapshot.onSnapshot(async snapshot => {\n            console.log(`Api Fetch Selections ${snapshot.docs}`)\n             selections = await snapshot.docs.map(docRef => {\n                        return docRef.data()\n                    })\n        }) \n        return selections\n    } catch (error) {\n        throw error\n    }    \n}\n export const apiCreateCollections = async (collections) => {\n    try {\n        const collectionsRef = await firestore.collection('collections')\n        collections.forEach(collection => {\n                collectionsRef.onSnapshot(async snapshot => {\n                collectionsRef.doc(collection[0]).set(collection[1])\n           }) \n        })\n    } catch (error) {\n        throw error\n    }    \n}\n\nexport const apiProductsCollection = async ({collectionKey, products}) => {\n    try {\n        const productsRef = await firestore.collection('products')\n         const docRef = await productsRef.doc(collectionKey)     \n           const docSnapshot = docRef.get()\n           if(!docSnapshot.exists) {\n               docRef\n            .docRef.set(products)\n           } \n    \n    } catch (error) {\n        throw error\n    }    \n}\nexport const apiShopProducts = async () => {\n    try {\n        const productsRef = await firestore.collection('products')\n        const productsSnapshot = productsRef.get()\n        productsSnapshot.docs.map((colDoc) => {\n                const items = colDoc.data()\n                return items.reduce((acc, item) => {\n                    acc[item.id] = item\n                    return acc\n                }, {})\n            })\n         } catch (error) {\n        throw error\n    }\n}\n\nexport const apifetchCollections = async () => {\n    const selectionSnapshot = await firestore.collection('selections').get()\n    const collections = []\n\n    selectionSnapshot.onSnapshot(async snapshot => {\n       // console.log(`Api Fetch collections ${snapshot.docs}`)\n        collections = await snapshot.docs.map(docRef => {\n            const collection_Ref = docRef.get()\n            return collection_Ref.data()\n        })\n    })\n    return collections\n}\n/**\n * product manageement\n * @param {string} productId \n */\nexport const apifetchProductById = async (productId) => {\n     firestore.collection('products').doc(productId).get().then(snapshot => ({\n         id: snapshot.id,\n         ...snapshot.data()\n     }))\n}\nexport const apifetchProducts = async (productId) => {\n    firestore.collection('products').get().then(async snapshot => {\n        const products = await snapshot.docs.map(product => ({\n            id: product.id,\n            ...product.data()\n        }))\n        return products\n    })\n}\n//Version batch\nexport const apiaddCollectionAndDocuments = async (collectionKey, collections) => {\n    const collectionRef = firestore.collection(collectionKey)\n     const batch = firestore.batch()\n     collections.forEach(object => {\n       const newCollRef = collectionRef.doc(object.title)\n       batch.set(newCollRef,object)  \n     })\n     return await batch.commit()  \n  }\nexport const storeImage = async (file) => {\n    const metadata = {'contentType': file.type}\n    const storageRef = firebase.storage() \n    storageRef.child(`selectionGallery/${file.name}`).put(file, metadata).then(snapshot => {\n      const messageByteTransfered = snapshot.byteTransfered\n       const  uploaded =  snapshot.totalBytes\n        const snapshhorDownload =  snapshot.ref.getDownloadURL().then(url => {\n        return url\n        })\n})\n    }\n","import firebase, {\n    firestore, auth\n} from '../../util/db/db'\n\nexport const apiRegister = async ({email, password, login, ...props}) => {\n    try {\n       const userRef =  await auth.createUserWithEmailAndPassword(\n            email,\n            password\n          ) \n        const { user } = userRef\n        const userProfil = {uid: user.uid, email, login,products:[], collections:[],...props}\n        \n       const userCred = await apiCreateUserProfilDocument(userProfil)\n        \n       return (userCred)\n    } catch (error) {return Promise.reject(error.message)\n}}\n\nexport const apiCreateUserProfilDocument = async (userProfil ) => {\n    const {uid, email} = userProfil\n    if (!email) return ;\n    console.log(uid)\n    let userRef \n    try {\n      const createdAt = new Date();\n      userProfil = {...userProfil,createdAt}\n      let userRef = await firestore.doc(`/profils/${uid}`).set(userProfil)\n      } catch (error) {\n          return {\n            error : error['code']\n          }\n        }\n    return userRef\n   };\n  \n\nexport const apiGetAllProfils = async () => {\n\n    const profilCollectionSnapshot = await firestore.collection('profils').get()\n    if(!!profilCollectionSnapshot) {\n        const profils = await profilCollectionSnapshot.docs.map(profilRef => profilRef.data())\n        return {profils}\n    }else {\n        return {profils: []}\n    }\n} \nconst apiGetUserProfil = (uid) => {\n    firestore.collection('profils').doc(uid)\n    .get().then(snapshot => ({uid, ...snapshot.data()}))\n}","import { auth } from \"../../util/db/db\";\nimport { apiRegister, apiGetAllProfils} from './../api'\n/**\n * ACTION TYPE\n */\nexport const EMAIL_SIGNIN_START = 'EMAIL_SIGNIN_START';\nexport const GOOGLE_SIGNIN_START = 'GOOGLE_SIGNIN_START';\n\nexport const SIGNIN_SUCCESS = 'SIGNIN_SUCCESS'\nexport const SIGNIN_FAIL = 'SIGNIN_FAIL'\n\nexport const SIGNUP_START = 'SIGNUP_START';\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS'\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL'\n\nexport const LOGOUT_START = 'LOGOUT_START'\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS'\nexport const LOGOUT_FAIL = 'LOGOUT_FAIL'\n\nexport const CHECK_PROFIL_SESSION = 'CHECK_PROFIL_SESSION'\n\nexport const SET_CURRENT_PROFIL = 'SET_CURRENT_PROFIL'\nexport const SELECT_CURRENT_PROFIL = 'SELECT_CURRENT_PROFIL'\n\nexport const GET_ALL_PROFILS = 'GET_ALL_PROFILS'\n\nexport const ADD_TO_COLLECTION = 'ADD_TO_COLLECTION';\nexport const GET_COLLECTION = 'GET_COLLECTION';\nexport const REMOVE_FROM_COLLECTION = 'REMOVE_FROM_COLLECTION';\n\n \nexport const checkProfilSession = () => ({\n    type: CHECK_PROFIL_SESSION\n})\nexport const signUpStart = (profilCredential) => {\n    return {\n        type:SIGNUP_START,\n        payload: profilCredential \n    }\n}\nexport const  signUpSuccess = async ({user,additionalData}) => {\n        return {\n            type: SIGNUP_SUCCESS,\n            payload:{user,additionalData}\n        }\n}  \nexport const signUpFail = (error) => {\n    return {\n        type:SIGNUP_FAIL,\n        error:error\n    }\n}\nexport const emailSigninStart = (emailAndPassword) => ({\n    type: EMAIL_SIGNIN_START,\n    payload:emailAndPassword\n})\n\nexport const SigninSuccess = (profil) => ({\n    type: SIGNIN_SUCCESS,\n    payload:profil\n})\n\nexport const SigninFail = (error) => ({\n    type: SIGNIN_FAIL,\n    payload: error\n    \n})\n\nexport const googleSigninStart = () => ({\n    type: GOOGLE_SIGNIN_START,\n    \n})\n\n\nexport const setAuthToken = token => {\n    if (token) {\n        localStorage.setItem('jwtToken', `Bearer ${token}`)\n    } else {\n        localStorage.removeItem('jwtToken')\n    }\n}\n\nexport const logOutStart = () => {\n    return {\n        type: LOGOUT_START,\n    }\n}\n\nexport const logOutSuccess = () => {\n    return {\n        type: LOGOUT_SUCCESS,\n        \n    }\n}\nexport const logOutFail = (error) => {\n    return {\n        type: LOGOUT_FAIL,\n        payload:error\n    }\n}\nexport const getAllProfils = async () => {\n    const profils = await apiGetAllProfils()\n    console.log(profils) \n    return {\n        type: GET_ALL_PROFILS,\n        payload: profils\n}\n}","export  const  TOGGLE_CART_HIDDEN = 'TOGGLE_CART_HIDDEN'\nexport  const ADD_ITEM = 'ADD_ITEM'\nexport  const REMOVE_ITEM = 'REMOVE_ITEM'\nexport  const CLEAR_ITEM_FROM_CART = 'CLEAR_ITEM_FROM_CART' \nexport  const CLEAR_CART = 'CLEAR_CART' \n\n\nexport const toggleCartHidden = () => ({\n  type:TOGGLE_CART_HIDDEN\n});\n\nexport const addItem = item => ({\n  type: ADD_ITEM,\n  payload: item\n});\n\nexport const removeItem = item => ({\n  type: REMOVE_ITEM,\n  payload: item\n});\n\nexport const clearItemFromCart = item => ({\n  type: CLEAR_ITEM_FROM_CART,\n  payload: item\n});\n  \nexport const clearCart = () => ({\n  type: CLEAR_CART\n})","import { createSelector } from 'reselect';\n\nconst selectCart = state => state.cart;\n\nexport const selectCartItems = createSelector(\n  [selectCart],\n  cart => cart.cartItems\n);\n \nexport const selectCartHidden = createSelector(\n  [selectCart],\n  cart => cart.hidden\n);\n\nexport const selectCartItemsCount = createSelector(\n  [selectCartItems],\n  cartItems =>\n    cartItems.reduce(\n      (accumalatedQuantity, cartItem) =>\n        accumalatedQuantity + cartItem.quantity,\n      0\n    )\n);\n\nexport const selectCartTotal = createSelector(\n  [selectCartItems],\n  cartItems =>\n    cartItems.reduce(\n      (accumalatedQuantity, cartItem) =>\n        accumalatedQuantity + cartItem.quantity * cartItem.price,\n      0\n    )\n);\n","import styled, {css} from 'styled-components';\nimport { green1, green4 } from './../variables'\n\nexport const CartContainer = styled.div`\n  width: 5rem;\n  height: 5rem;\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n`;\n\nexport const ShoppingIcon = styled.div`\n  position:absolute;\n  font-size: 2.7rem;\n  color:${green4};\n  `;\n\nexport const ItemCountContainer = styled.span`\n  position: absolute;\n  font-size: 1.3rem;\n  top:5px;\n  \n  font-weight: bold;\n  text-align:center;\n  color:${green1};\n`;\n","/**\n * fond bouton \nexport  */\nexport const blue1 = '#ADF';\nexport const blue2 = '#5AF';\nexport const blue3 = '#08F';\nexport const blue4 =  '#025';\nexport const blue41 =  '#AFD';\n\nexport const blanc = '#DDD';\n\nexport const green1 = '#AFA';\nexport const green2 = '#AF5';\nexport const green3 = '#0F0';\nexport const green4 = '#250';\nexport const green51 = '#AA0'; \n\nexport const orange1 ='#FDA';\nexport const orange2 = '#F80'; \nexport const red1 ='#FAA';\nexport const red2 = '#F00';\nexport const redorang = '#A50'; \n\nexport const textVert = '#282';\nexport const textBleu = '#258';\nexport const textBlack = '#222';\nexport const textBlanc = '#DDD';\n\nexport const maxWidth =\"1100px\"\n\n/**\n * logo\n */\nexport const tete = orange1;\nexport const cor = red1;\nexport const yad = green2;\nexport const point = redorang;\n/**forms */\nexport const subText = green1;\nexport const mainText = textBleu;\n\n/**\n * Buttons\n */\nexport const btnV = green2;\nexport const btnB = blue3;\nexport const btnInvert = blanc;\nexport const btnGgl = blue4;\n/**\n * logo\n */\nexport const logoB = '#08F';\nexport const logV = '#AFA'","import React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport { toggleCartHidden } from '../../store/actions/cart';\nimport { selectCartItemsCount } from '../../store/selectors/cart';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faShoppingCart } from '@fortawesome/free-solid-svg-icons'\nimport {\n  CartContainer,\n  ShoppingIcon,\n  ItemCountContainer\n} from './cart-icon.styled';\n\nconst CartIcon = ({ toggleCartHidden, itemCount }) => (\n  <CartContainer onClick={toggleCartHidden}>\n    <ShoppingIcon>\n      <FontAwesomeIcon className=\"shoppingIcon\" icon={faShoppingCart} />\n    </ShoppingIcon>\n    <ItemCountContainer>{itemCount}</ItemCountContainer>\n  </CartContainer>\n);\n\nconst mapDispatchToProps = dispatch => ({\n  toggleCartHidden: () => dispatch(toggleCartHidden())\n});\n\nconst mapStateToProps = createStructuredSelector({\n  itemCount: selectCartItemsCount,\n  toggleCartHidden: toggleCartHidden\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CartIcon);\n","import styled from 'styled-components';\n\nexport const CartItemContainer = styled.div`\n  width: 100%;\n  display: flex;\n  height: 80px;\n  margin-bottom: 15px;\n`;\n\nexport const CartItemImage = styled.img`\n  width: 30%;\n`;\n\nexport const ItemDetailsContainer = styled.div`\n  width: 70%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: center;\n  padding: 10px 20px;\n`;\n","import React from 'react';\n\nimport {\n  CartItemContainer,\n  ItemDetailsContainer,\n  CartItemImage\n} from './cart-item.styled';\n\nconst CartItem = ({ item: { imageUrl, price, name, quantity } }) => (\n  <CartItemContainer>\n    <CartItemImage src={imageUrl} alt='item' />\n    <ItemDetailsContainer>\n      <span>{name}</span>\n      <span>\n        {quantity} x ${price}\n      </span>\n    </ItemDetailsContainer>\n  </CartItemContainer>\n);\n\nexport default CartItem;\n","import styled, { css } from 'styled-components';\nimport { blue4, green3,btnGgl, btnV, btnB, btnInvert, textBleu, textBlack } from './../variables'\nimport {Link} from 'react-router-dom'\n\nconst buttonStyles = css`\n  &:hover {\n    background-color: ${btnInvert};\n    color: ${blue4};\n    border: 1px solid black;\n  }\n`;\n\nconst invertedButtonStyles = css`\n  background-color: white;\n  color: black;\n  border: 1px solid black;\n\n  &:hover {\n    background-color: black;\n    color: white;\n    border: none;\n  }\n`;\n\nconst googleSignInStyles = css`\n  background-color: ${btnGgl};\n  color: ${btnInvert};\n\n`;\n\nconst getButtonStyles = props => {\n  if (props.isGoogleSignIn) {\n    return googleSignInStyles;\n  }\n\n  return props.inverted ? invertedButtonStyles : buttonStyles;\n};\n\nexport const CustomButtonContainer = styled.button`\n  min-width: 165px;\n  background-color: ${btnV};\n   width: auto;\n  height: 50px;\n  letter-spacing: 0.5px;\n  line-height: 50px;\n  padding: 0 35px 0 35px;\n  color:${textBlack};\n  font-size: 15px;\n  text-transform: uppercase;\n  font-family: 'Open Sans Condensed';\n  font-weight: bolder;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n\n  ${getButtonStyles}\n`;\nexport const CustomLinkContainer = styled(Link)`\n  min-width: 165px;\n  width: 165px;\n  height: 50px;\n  color:${textBlack};\n\n  letter-spacing: 0.5px;\n  line-height: 50px;\n  padding: 0 5px 0 5px;\n  font-size: 15px;\n  text-transform: uppercase;\n  font-family: 'Open Sans Condensed';\n  font-weight: bolder;\n  cursor: pointer;\n  display: flex;\n  background-color:${btnB};\n  justify-content: center;\n\n  ${getButtonStyles}\n`;\n\nexport const CustomInputContainer = styled.input`\nmin-width: 165px;\nwidth: 165px;\nheight: 50px;\ncolor:${textBlack} ;\nletter-spacing: 0.5px;\nline-height: 50px;\npadding: 0 5px 0 5px;\nfont-size: 15px;\ntext-transform: uppercase;\nfont-family: 'Open Sans Condensed';\nfont-weight: bolder;\ncursor: pointer;\ndisplay: flex;\nbackground-color:${btnV};\njustify-content: center;\n\n${getButtonStyles}\n`;","import React from 'react';\n\nimport { CustomInputContainer, CustomButtonContainer, CustomLinkContainer } from './CustomButton.styled';\n\nconst CustomButton = ({ children, ...props }) => {\n  if(props.link) {\n    return <CustomLinkContainer {...props}>{children}</CustomLinkContainer>\n\n  } else if(props.input) {\n    return <CustomInputContainer {...props} ></CustomInputContainer>\n\n  }\n  return <CustomButtonContainer {...props}>{children}</CustomButtonContainer>\n\n}\n\nexport default CustomButton;\n","import styled from 'styled-components';\nimport CustomButton from '../CustomButton/CustomButton';\n\nexport const CartDropdownContainer = styled.div`\n  position: absolute;\n  width: 240px;\n  height: 340px;\n  display: flex;\n  flex-direction: column;\n  padding: 20px;\n  border: 1px solid black;\n  background-color: white;\n  top: 90px;\n  right: 40px;\n  z-index: 5;\n`;\n\nexport const CartDropdownButton = styled(CustomButton)`\n  margin-top: auto;\n  font-size:10px;\n`;\n\nexport const EmptyMessageContainer = styled.span`\n  font-size: 18px;\n  margin: 50px auto;\n`;\n\nexport const CartItemsContainer = styled.div`\n  height: 240px;\n  display: flex;\n  flex-direction: column;\n  overflow: scroll;\n`;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { withRouter } from 'react-router-dom';\nimport CartItem from '../Cart-Item/Cart-Item';\nimport { selectCartItems } from '../../store/selectors/cart';\nimport { toggleCartHidden } from '../../store/actions/cart';\n\nimport {\n  CartDropdownContainer,\n  CartDropdownButton,\n  EmptyMessageContainer,\n  CartItemsContainer\n} from './cart.dropdown.styled';\n\nconst CartDropdown = ({ cartItems, history, dispatch }) => (\n  <CartDropdownContainer>\n    <CartItemsContainer>\n      {cartItems.length ? (\n        cartItems.map(cartItem => (\n          <CartItem key={cartItem.id} item={cartItem} />\n        ))\n      ) : (\n        <EmptyMessageContainer>Your cart is empty</EmptyMessageContainer>\n      )}\n    </CartItemsContainer>\n    <CartDropdownButton\n      onClick={() => {\n        history.push('/checkout');\n        dispatch(toggleCartHidden());\n      }}\n    >\n      GO TO CHECKOUT\n    </CartDropdownButton>\n  </CartDropdownContainer>\n);\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n});\n\nexport default withRouter(connect(mapStateToProps)(CartDropdown));\n","import styled, {keyframes, css}  from 'styled-components'\nimport {Link} from 'react-router-dom'\nimport {textBlanc, tete, yad, point,cor, textBlack, bleuDense,green2} from '../variables'\nimport { faTextWidth } from '@fortawesome/free-solid-svg-icons'\n\nexport const LogoContainer = styled.div`\n    position: relative;\n    font-size: 1.4rem;\n    background-color: transparent;\n    margin: -10px -20px ;\n    width:200px;\n    height:70px;\n    flex-direction:column;\n    display:flex;\n      a {\n            text-decoration:none\n    }\n    `\nexport const NameSite = styled(Link)`\n    box-sizing:border-box;\n    line-height:2rem;\n    padding:0;\n    text-decoration:none;\n    text-transform: uppercase;\n    cursor:pointer;\n    margin:50% 50%;\n    color: ${green2} !important;\n`\n\nexport const TeteLogo = styled.div`\nposition: absolute;\ntop:2px;\nleft: 47px;\nwidth:70px;\nheight:70px;\nbackground:linear-gradient(${tete},${cor});\ncolor: ${textBlanc};\nmargin:0 auto;\ntransform: rotate(-45deg);\nborder-radius: 5px;\n`\nexport const YadLogo = styled.div`\nposition: absolute;\nbackground: linear-gradient(${yad},${tete}) ;\ncolor: ${textBlanc};\ntop:25px;\nleft:80px;\nwidth:30px;\nheight:130px;\ntransform: rotate(45deg);\nborder-radius: 5px;\n`\nconst bat = keyframes`\n  from {\n    transform: scale(1.5) rotate(45deg);\n}\n\n  to {\n    transform: scale(1) rotate(45deg);\n}\n`;\n\n// Here we create a component that will rotate everything we pass in over two seconds\nexport const CorLogo = styled.div`\nposition: absolute;\nbackground: linear-gradient(${cor},${point} );\ncolor: ${textBlack};\ntop:60px;\nleft:20px;\nwidth:50px;\nheight:50px;\nz-index:1;\nanimation: ${bat} 2s linear infinite;\ntransition:transform 2s linear infinite;\nborder-radius: 3px;\n\n`\nexport const Point = styled.div`\nposition: absolute;\nbackground-color: ${point};\ncolor: ${textBlack};\ntop:125px;\nleft:30px;\nwidth:30px;\nheight:30px;\ntransform: rotate(45deg);\nborder-radius: 3px;\n`\n","import React from 'react'\nimport {TeteLogo, LogoContainer, CorLogo,YadLogo, NameSite,Point} from './logo.styled'\n\n// google, inverted, handleClick\nexport default function LogoBox({ children, ...props}) {\n    return (\n        <LogoContainer {...props}>\n            <NameSite to=\"/\"> lami1a</NameSite>\n                 \n            <TeteLogo />\n            <CorLogo />\n            <YadLogo/> \n            <Point/>\n        </LogoContainer>\n    )\n}\n","import { createSelector } from 'reselect';\n\nconst selectProfil = state => state.profil;\n\nexport const selectCurrentProfil = createSelector(\n  [selectProfil],\n  profil => profil.currentProfil\n);\n\nexport const selectProfilCollection = profilId => createSelector(\n  [selectProfil],\n  profil => profil.collection\n)\n","export const isEmpty = (value) => {\n    return ( value === undefined || \n        value === null ||\n        (typeof value === 'object' && Object.keys(value).length === 0) ||\n        (typeof value === 'string' && value.trim().length === 0) \n        ) \n        \n}","\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport {green1, green2, green3, green51, green4, btnInvert} from './../variables'\n\nexport const HeaderContainer = styled.div`\n  height: 70px;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  /* margin-bottom: 25px; */\n`;\n\nexport const LogoContainer = styled.div`\n  height: 100%; \n  padding: 2%;\n  cursor: pointer;\n  background-color:white;\n`;\n\nexport const OptionsContainer = styled.div`\n  width: 75%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n`;\n\nexport const OptionLink = styled(Link)`\n  padding: 10px 10px;\n  font-weight: lighter;\n  font-size: 1.5rem;\n  color:${green4};\n  text-decoration:none;\n  transform: scale(1.1);\n\ttransition: transform 6s cubic-bezier(0.25, 0.45, 0.45, 0.95);\n  &:hover {\n\t  cursor: pointer;\n    opacity: 0.9;\n\t  }\n\n`;\nexport const OptionLinkHide = styled(Link)`\npadding: 10px 15px;\ncursor: pointer;\ndisplay:none;\nfont-weight: lighter;\nfont-size: 1.5rem;\ncolor:${green4};\ntext-decoration:none;\n`;\nexport const MainBar =styled.div`\n\n`\nexport const SecondBar =styled.div`\n\n`","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter} from 'react-router-dom'\nimport CartIcon from '../Cart-Icon/Cart-Icon';\nimport CartDropdown from '../Cart-Dropdown/Cart-Dropdown';\nimport { createStructuredSelector } from 'reselect'\nimport LogoBox from './../Logo/Logo'\nimport { selectCurrentProfil } from '../../store/selectors/profil';\nimport { selectCartHidden } from '../../store/selectors/cart';\nimport {isEmpty} from './../../util/is-empty'\nimport { logOutStart } from './../../store/actions/profil'\nimport {\n  HeaderContainer,\n  LogoContainer,\n  OptionsContainer,\n  OptionLink,\n  MainBar,\n  OptionLinkHide,\n  SecondBar\n} from './header-styled';\nconst Header = ({ currentProfil, hidden, logOutStart }) => {\n    return (\n      <HeaderContainer>\n        <LogoContainer to='/'>\n          <LogoBox className='logo' />\n        </LogoContainer>\n        <OptionsContainer>\n          <OptionLink to='/shop'>SHOP</OptionLink>\n          <OptionLink to='/contact'>CONTACT</OptionLink>\n          { \n          (currentProfil !== null ) && (!isEmpty(currentProfil) ) ? (\n            \n           <>\n           <OptionLink to='/profil'>Profil</OptionLink>\n           <OptionLink to='/collection'>Collection</OptionLink>\n          <OptionLink to='/' onClick={logOutStart}>\n              SIGN OUT\n          </OptionLink>\n          </>\n          ): (\n              <OptionLink to='/signup'>SIGN in/up </OptionLink>\n            )}\n          <CartIcon />\n        </OptionsContainer>\n        {hidden ? null : <CartDropdown />}\n        \n      </HeaderContainer>\n    );\n\n  }\n const mapStateToProps = createStructuredSelector({\n  currentProfil: selectCurrentProfil,\n  hidden: selectCartHidden\n});\nconst mapDispatchToProps = (dispatch) => ({\n  logOutStart : () => dispatch(logOutStart())\n})\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Header))\n","import {\n  createSelector\n} from 'reselect';\n\nconst selectedSelection = state => state.selection;\n\n//const mapSelection =  new Map(selectSelection)\nexport const selectSelectedSelections = createSelector(\n  [selectedSelection],\n  selection => selection.selections\n)\n\n\nexport const selectIsSelectionFetching = createSelector(\n  [selectedSelection],\n  selection => selection.isFetching\n);\n\nexport const selectIsSelectionsLoaded = createSelector(\n  [selectedSelection],\n  selection => !!selection.selections\n);\n\nexport const selectCollectionForOverview = selectionId => createSelector(\n  [selectSelectedSelections],\n  selections => {\n    console.log(selections[selectionId])\n    return (selections ? selections[selectionId]: [])\n  }\n)\n\nexport const selectSelections = createSelector(\n  [selectSelectedSelections],\n  selections =>  selections ?  Object.keys(selections).map(selection => {\n     return selections[selection]\n    }) : []\n  )\nexport const selectProductsCollection = (selectionId) => createSelector(\n  [selectSelections],\n  selections => {\n    let products = []\n    const selection = selections.filter(selection => {\n       return selection['title'] === selectionId\n     })\n    products = Object.entries(selection[0]['collections']).map(collection => {\n      const product = {\n        collection:collection[1]['title'],\n        selection:collection[1]['selection'],\n        items:collection[1]['items']\n      }\n      return product\n    })\n    return products  \n  }\n)\nexport const selectProducts = (collectionId) => createSelector(\n  [selectSelections],\n  selections => {\n    let products = []\n    \n    let selection = selections.map(selection => {\n        const colNames = Object.entries(selection['collections'])\n      return colNames.filter(col => (col[0]=== collectionId))\n     })\n     selection = selection.filter(elem => elem.length != 0)\n     const masel = selection[0][0][1]\n      products = (selection[0][0][1]['items']).map(item => {\n     const collection = masel['title']\n     const selection = masel['selection']\n     const prod = {\n        selection,\n        collection,\n        product:item\n      }\n      return prod\n    })\n    return products  \n  }\n)\n\nexport const selectSelectionsForShopPreview = collectionId => createSelector(\n  [selectSelections],\n  selections => {\n      const productDeCollection = new Set()\n     Object.keys(selections).map(selection => {\n        const collections = Object.keys(selection['collections'])\n          if(collectionId in collections) {\n            productDeCollection.add(selection['collections'][collectionId])\n          }\n    })\n    return productDeCollection\n  }\n)\n        /* \n        export const selectSelectionForShopCollection = selectionId => createSelector(\n  [selectedSelections],\n  selections => {\n    const _sel = new Set()\n     Object.keys(selections).forEach(selection => {\n        if(selection === selectionId) {\n          _sel.add( {\n            title: selections[selection]['title'],\n            id: selections[selection]['id'],\n            imageUrl: selections[selection]['imageUrl'],\n            linkUrl: selections[selection]['linkUrl'],\n            collections: selections[selection]['collections'],\n          })\n        }}\n        )\n        return _sel\n  }\n)\nexport const selectProductsForPreview = collectionId => createSelector(\n  [selectedSelections],\n    collections => {\n    console.log(collections)\n    const cols =  collections[collectionId]\n    const colKeys = Object.keys(cols)\n    return colKeys.map(collection => {\n      return collections[collectionId][collection]\n    })\n  }\n)\n\nexport const getItemsCollection = selectionId => collectionId => createSelector(\n  [selectedSelections],\n  collections =>  {\n    const selection = collections[selectionId]\n\n  })\n\nexport const selectCollections = createSelector(\n  [selectedSelections, getItemsCollection],\n  (collections, selections) => {\n    const newCollections = []\n   // console.log(`Collections ${collections}`)\n    //console.log(selections)\n    return Object.values(collections)\n\n  })\n\n */\n\n\n  /* {\n    const mapSelection = new Map()\n    const sels = Object.keys(selection.selectons)\n    for (let sel of sels ){\n       mapSelection.set(sel, selection[sel])\n       /* \n      for (let kkey of Object.keys(value)) {\n          console.log(`--> ${JSON.stringify(kkey, null, 4)}`)\n            for (let kkkey of Object.keys(kkey)) {\n              console.log(`---> ${kkkey}`)\n            }\n    \n        } \n  }\n      console.log(`collections books ->${JSON.stringify(mapSelection.get('books'), null ,2)}`)\n      console.log(`all Collections ->${JSON.stringify(mapSelection, null ,2)}`)\n\n    return mapSelection\n  }\n) *export const selectCollections = createSelector(\n  [selectedSelection],\n  selection => {\n    console.log(`collections de selectCollection-> ${selection.collections} `)\n    return selection.collections\n  }\n) */\n/* export const selectCollections = createSelector(\n  [selectSelectedSelection],\n  selection => {\n    const sel = Object.keys(selection)\n    console.log(`Dans Mon Sel ${sel}`)\n    const  AllColl = sel.map(col => Object.keys(selection[col]))\n    return AllColl.map(coll => Object.values(selection[coll]))\n  }\n)\n */\n/* \nexport const selectCollections = createSelector(\n  [selectSelectedSelection],\n  selection => {\n    const sel = Object.keys(selection)\n    const AllColl = sel.map(col => Object.keys(selection[sel]))\n     return AllColl.map(coll => coll)\n  }\n  )\n *//* \nexport const selectProductsFromSelection = selection => {\n  return createSelector(\n    selectSelection,\n    selections => Object.values(selections[selection])\n  )\n}\n\nexport const selectProducts = collectionParam => createSelector(\n  [selectCollections],\n  (collections) => {\n    collections.filter(coll =>\n      coll[0] === collectionParam\n    )\n  }\n); */\n","import styled from 'styled-components';\nimport { green2, green4, blanc } from '../variables'\n\nexport const SelectionItemContainer = styled.div`\n\theight: ${(size) => (size ? '380px' : '240px')};\n\tmin-width: 30%;\n\toverflow: hidden;\n\tflex: 1 1 auto;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tborder: 1px solid ${green4};\n\tmargin: 0 7.5px 15px;\n\toverflow: hidden;\n  \tborder-radius:2px;\n\t&:hover {\n\t  cursor: pointer;\n\t  & .background-image {\n\t    transform: scale(1.1);\n\t    transition: transform 6s cubic-bezier(0.25, 0.45, 0.45, 0.95);\n\t  }\n\t  & .content {\n\t    opacity: 0.9;\n\t  }\n\t}\n\t&:first-child {\n\t  margin-right: 7.5px;\n\t}\n\t&:last-child {\n\t  margin-left: 7.5px;\n\t}\n`;\n\nexport const BackgroundImageContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  background-size: cover;\n  background-position: center;\n  background-image: ${({ imageUrl }) => `url(${imageUrl})`};\n`;\n\nexport const ContentContainer = styled.div`\n  height: 10rem;\n  padding: 0 25px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  border: 1px solid ${ green2 };\n  border-radius:5px;\n  background-color: ${blanc};\n  opacity: 0.8;\n  position: absolute;\n`;\n\nexport const ContentTitle = styled.span`\n  font-weight: bold;\n  margin-bottom: 6px;\n  font-size: 22px;\n  color: #4a4a4a;\n`;\n\nexport const ContentSubtitle = styled.span`\n  font-weight: lighter;\n  font-size: 1.5rem;\n  color:${green4};\n`;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport {\n  SelectionItemContainer,\n  BackgroundImageContainer,\n  ContentContainer,\n  ContentTitle,\n  ContentSubtitle\n} from './selection-item-styled';\n\nconst SelectionItem = ({ title, imageUrl, size, history, routeName, linkUrl, match }) => {\n   \n  const imageUrlrep = `./assets${imageUrl}`\n  return <SelectionItemContainer\n            size={size}\n            onClick={() => history.push(`shop/${routeName}`)\n            }\n             >\n            <BackgroundImageContainer\n              className='background-image'\n              imageUrl={imageUrlrep}\n            />\n            <ContentContainer className='content'>\n              <ContentTitle>{title.toUpperCase()}</ContentTitle>\n              <ContentSubtitle > DISCOVER </ContentSubtitle>\n            </ContentContainer>\n          </SelectionItemContainer>\n};\n\nexport default withRouter(SelectionItem);\n","import styled from 'styled-components';\n\nexport const SelectionMenuContainer = styled.div`\n  height: 100%;\n  display: flex;\n  justify-content: space-between;\n  flex:0;\n  flex-flow:wrap;\n   \n  `;\n","import { apifetchSelections, apifetchCollections} from './../api'\nimport { apiShopProducts } from '../api/collections'\n\n\n\nexport const FETCH_SELECTIONS_START = 'FETCH_SELECTIONS_START'\nexport const FETCH_SELECTIONS_SUCCESS = 'FETCH_SELECTIONS_SUCCESS'\nexport const FETCH_SELECTIONS_FAIL = 'FETCH_SELECTIONS_FAIL'\n\nexport const FETCH_COLLECTIONS_START = 'FETCH_COLLECTIONS_START'\nexport const FETCH_COLLECTIONS_SUCCESS = 'FETCH_COLLECTIONS_SUCCESS'\nexport const FETCH_COLLECTIONS_FAIL = 'FETCH_COLLECTIONS_FAIL'\n\nexport const FETCH_PRODUCTS_START = 'FETCH_PRODUCTS_START'\nexport const FETCH_PRODUCTS_SUCCESS = 'FETCH_PRODUCTS_SUCCESS'\nexport const FETCH_PRODUCTS_FAIL = 'FETCH_PRODUCTS_FAIL'\n\nexport const REMOVE_COLLECTION_START = 'REMOVE_COLLECTION_START'\nexport const REMOVE_COLLECTION_SUCCESS = 'REMOVE_COLLECTION_SUCCESS'\nexport const REMOVE_COLLECTION_FAIL = 'REMOVE_COLLECTION_FAIL'\n\nexport const REMOVE_PRODUCT_START = 'REMOVE_PRODUCT_START'\nexport const REMOVE_PRODUCT_SUCCESS = 'REMOVE_PRODUCT_SUCCESS'\nexport const REMOVE_PRODUCT_FAIL = 'REMOVE_PRODUCT_FAIL'\n\nexport const REMOVE_SELECTION_START = 'REMOVE_SELECTION_START'\nexport const REMOVE_SELECTION_SUCCESS = 'REMOVE_SELECTION_SUCCESS'\nexport const REMOVE_SELECTION_FAIL = 'REMOVE_SELECTION_FAIL'\n\nexport const ADD_COLLECTION_START = 'ADD_COLLECTION_START'\nexport const ADD_COLLECTION_SUCCESS = 'ADD_COLLECTION_SUCCESS'\nexport const ADD_COLLECTION_FAIL = 'ADD_COLLECTION_FAIL'\n\nexport const ADD_PRODUCT_START = 'ADD_PRODUCT_START'\nexport const ADD_PRODUCT_SUCCESS = 'ADD_PRODUCT_SUCCESS'\nexport const ADD_PRODUCT_FAIL = 'ADD_PRODUCT_FAIL'\n\nexport const ADD_SELECTION_START = 'ADD_SELECTION_START'\nexport const ADD_SELECTION_SUCCESS = 'ADD_SELECTION_SUCCESS'\nexport const ADD_SELECTION_FAIL = 'ADD_SELECTION_FAIL'\n\nexport const fetchSelectionsStart =  () => ({type: FETCH_SELECTIONS_START})\n\n\nexport const fetchSelectionsSuccess =  (selections) => {\n        return {\n                type: FETCH_SELECTIONS_SUCCESS,\n                payload:selections,\n                errors: null\n            }\n    }\nexport const fetchSelectionsFail =  () => {\n    return {\n        type: FETCH_SELECTIONS_FAIL,\n        errors: 'fetch selection FAil'\n    }\n}\n\nexport const fetchCollectionsSuccess = async () => {\n        try {\n            const collections = await apifetchCollections()\n            return {\n                type: FETCH_COLLECTIONS_SUCCESS,\n                payload: collections,\n                errors: null\n            }\n        } catch (err) {\n            return {\n                type: FETCH_COLLECTIONS_FAIL,\n                payload: {},\n                errors: err\n            }\n        }\n\n    }\n\nexport const fetchCollectionsFail = async () => {\n        return {\n            type: FETCH_COLLECTIONS_FAIL,\n            errors: 'Fetch FAil'\n        }\n    }\nexport const fetchProductsSuccess = async (products) => {\n    try {\n        return {\n            type: FETCH_PRODUCTS_SUCCESS,\n            payload: products,\n            errors: null\n        }\n    } catch (err) {\n        return {\n            type: FETCH_PRODUCTS_FAIL,\n            errors: err\n        }\n    }\n}\nexport const fetchProductsStart = () => {\n        return {\n            type:FETCH_PRODUCTS_START\n        }\n}\nexport const fetchProductsFail = () => {\n    return {\n        type: FETCH_PRODUCTS_FAIL,\n        errors: 'fetc products fail'\n    }\n}\nexport const addSelectionSuccess = (selection) => {\n    return {\n        type: ADD_SELECTION_SUCCESS,\n        payload: selection\n    }\n}\nexport const addSelectionFail = () => {\n    return {\n        type: ADD_SELECTION_FAIL,\n        error: 'cant add selection'\n    }\n}\n\nexport const addCollectionSuccess = (collection) => {\n    return {\n        type: ADD_COLLECTION_SUCCESS,\n        payload: collection\n\n    }\n}\nexport const addCollectionFail = () => {\n    return {\n        type: ADD_COLLECTION_FAIL,\n        error: 'add collection Fail'\n   }\n}\n\nexport const addProductSuccess = (product) => {\n    return {\n        type: ADD_PRODUCT_SUCCESS,\n        payload: product\n\n    }\n}\nexport const addProductFail = () => {\n    return {\n        type: ADD_PRODUCT_FAIL,\n        error: 'add product Fail'\n   }\n}\n\nexport const removeProductSuccess = (product) => {\n    return {\n        type: REMOVE_PRODUCT_SUCCESS,\n        payload: product\n\n    }\n}\nexport const removeProductFail = () => {\n    return {\n        type: REMOVE_PRODUCT_FAIL,\n        error: 'remove product Fail'\n   }\n}\n\n\n\nexport const removeCollectionSuccess = (collection) => {\n    return {\n        type: REMOVE_COLLECTION_SUCCESS,\n        payload: collection\n\n    }\n}\nexport const removeCollectionFail = () => {\n    return {\n        type: REMOVE_COLLECTION_FAIL,\n        error: 'add collection Fail'\n   }\n}\n\nexport const removeSelectionSuccess = (selection) => {\n    return {\n        type: REMOVE_SELECTION_SUCCESS,\n        payload: selection\n\n    }\n}\nexport const removeSelectionFail = () => {\n    return {\n        type: REMOVE_SELECTION_FAIL,\n        error: 'add collection Fail'\n   }\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { selectSelections} from './../../store/selectors/selection';\nimport SelectionItem from '../SelectionItem/Selection-Item';\nimport { SelectionMenuContainer } from './selection.styled';\nimport { fetchSelectionsStart } from './../../store/actions/selection'\nimport {firestore, transformCollectionSnapshotToMap} from './../../util/db/db'\n\n\nclass Selection extends Component {\n\n\n\n  render() {\n    const { selections } = this.props\n   \n    const menus = selections.map(selection =>{\n          const {id , ...otherProps} = selection;\n          \n        return <SelectionItem key={id} {...otherProps}></SelectionItem>\n    })\n    return (\n      <SelectionMenuContainer>\n        { menus }\n      </SelectionMenuContainer>\n    )  \n   }  \n}\nconst mapStateToProps = createStructuredSelector({\n  selections: selectSelections \n})\nconst mapDispatchToProps = (dispatch) => ({\n  fetchSelections:() => dispatch(fetchSelectionsStart())\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Selection);\n","import styled from 'styled-components'\nimport {maxWidth, green1} from '../../components/variables'\nexport const AboutContainer = styled.div`\n    max-width: ${maxWidth};\n    margin: 0 auto;\n    width:100%;\n    background-color: ${green1};\n    padding: 4rem 0;\n \n`","import React from 'react'\n\nimport {AboutContainer} from './about-styled'\nconst about = () => {\n    return (\n        \n        <AboutContainer>\n        About US Liil \n        mood \n        stat of creation \n        fun \n        society\n\n        </AboutContainer>\n    )\n}\n\nexport default about\n","import React from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\nimport axios from 'axios'\n\nconst StripeCheckoutButton = ({ price }) => {\n   require('dotenv').config()\n  \n  const priceForStripe = price * 10;\n  const publishableKey = process.env.PUBLIC_KEY;\n\n  const onToken = token => {\n    axios.post({\n      url:'payment',\n      method:'post',\n      data:{\n        amount:priceForStripe,\n        token\n      }\n   }).then(response => {\n     alert('payment successful')\n   }).catch(error => {\n    console.log(JSON.parse(error))\n     alert('Payment error! its a probleme with credit card');\n   })\n  };\n\n  return (\n    <StripeCheckout\n      label='Pay'\n      name='lami1a com.'\n      billingAddress\n      shippingAddress\n      //image='https://svgshare.com/i/CUz.svg'\n      description={`Your total is €${price}`}\n      currency=\"EUR\"\n      amount={priceForStripe}\n      panelLabel='Pay Now'\n      token={onToken}\n      stripeKey={publishableKey}\n    />\n  );\n};\n\nexport default StripeCheckoutButton;\n","import styled from 'styled-components';\n\nexport const CheckoutItemContainer = styled.div`\n  width: 100%;\n  display: flex;\n  min-height: 100px;\n  border-bottom: 1px solid darkgrey;\n  padding: 15px 0;\n  font-size: 20px;\n  align-items: center;\n`;\n\nexport const ImageContainer = styled.div`\n  width: 23%;\n  padding-right: 15px;\n\n  img {\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nexport const TextContainer = styled.span`\n  width: 23%;\n`;\n\nexport const QuantityContainer = styled(TextContainer)`\n  display: flex;\n\n  span {\n    margin: 0 10px;\n  }\n\n  div {\n    cursor: pointer;\n  }\n`;\n\nexport const RemoveButtonContainer = styled.div`\n  padding-left: 12px;\n  cursor: pointer;\n`;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport {\n  clearItemFromCart,\n  addItem,\n  removeItem\n} from './../../store/actions/cart';\n\nimport {\n  CheckoutItemContainer,\n  ImageContainer,\n  TextContainer,\n  QuantityContainer,\n  RemoveButtonContainer\n} from './checkout.item.styled';\n\nconst CheckoutItem = ({ cartItem, clearItem, addItem, removeItem }) => {\n  const { name, imageUrl, price, quantity } = cartItem;\n  return (\n    <CheckoutItemContainer>\n      <ImageContainer>\n        <img src={imageUrl} alt='item' />\n      </ImageContainer>\n      <TextContainer>{name}</TextContainer>\n      <QuantityContainer>\n        <div onClick={() => removeItem(cartItem)}>&#10094;</div>\n        <span>{quantity}</span>\n        <div onClick={() => addItem(cartItem)}>&#10095;</div>\n      </QuantityContainer>\n      <TextContainer>{price}</TextContainer>\n      <RemoveButtonContainer onClick={() => clearItem(cartItem)}>\n        &#10005;\n      </RemoveButtonContainer>\n    </CheckoutItemContainer>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  clearItem: item => dispatch(clearItemFromCart(item)),\n  addItem: item => dispatch(addItem(item)),\n  removeItem: item => dispatch(removeItem(item))\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(CheckoutItem);\n","import styled from 'styled-components';\n\nexport const CheckoutPageContainer = styled.div`\n  width: 55%;\n  min-height: 90vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 50px auto 0;\n\n  button {\n    margin-left: auto;\n    margin-top: 50px;\n  }\n`;\n\nexport const CheckoutHeaderContainer = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  justify-content: space-between;\n  border-bottom: 1px solid darkgrey;\n`;\n\nexport const HeaderBlockContainer = styled.div`\n  text-transform: capitalize;\n  width: 23%;\n\n  &:last-child {\n    width: 8%;\n  }\n`;\n\nexport const TotalContainer = styled.div`\n  margin-top: 30px;\n  margin-left: auto;\n  font-size: 36px;\n`;\n\nexport const WarningContainer = styled.div`\n  text-align: center;\n  margin-top: 40px;\n  font-size: 24px;\n  color: red;\n`;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport StripeCheckoutButton from '../../components/Stripe-Button/Stripe-Button';\nimport CheckoutItem from './../../components/Checkout-Item/Checkout-Item';\n\nimport {\n  selectCartItems,\n  selectCartTotal\n} from '../../store/selectors/cart';\n\nimport {\n  CheckoutPageContainer,\n  CheckoutHeaderContainer,\n  HeaderBlockContainer,\n  TotalContainer,\n  WarningContainer\n} from './checkout.styled';\n\nconst CheckoutPage = ({ cartItems, total }) => (\n  <CheckoutPageContainer>\n    <CheckoutHeaderContainer>\n      <HeaderBlockContainer>\n        <span>Product</span>\n      </HeaderBlockContainer>\n      <HeaderBlockContainer>\n        <span>Description</span>\n      </HeaderBlockContainer>\n      <HeaderBlockContainer>\n        <span>Quantity</span>\n      </HeaderBlockContainer>\n      <HeaderBlockContainer>\n        <span>Price</span>\n      </HeaderBlockContainer>\n      <HeaderBlockContainer>\n        <span>Remove</span>\n      </HeaderBlockContainer>\n    </CheckoutHeaderContainer>\n    {cartItems.map(cartItem => (\n      <CheckoutItem key={cartItem.id} cartItem={cartItem} />\n    ))}\n    <TotalContainer>TOTAL: ${total}</TotalContainer>\n    <WarningContainer>\n      *test credit card for payments*\n      <br />\n      4242 4242 4242 4242 - Exp: 01/20 - CVV: 123\n    </WarningContainer>\n    <StripeCheckoutButton price={total} />\n  </CheckoutPageContainer>\n);\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems,\n  total: selectCartTotal\n});\n\nexport default connect(mapStateToProps)(CheckoutPage);\n","import styled from 'styled-components';\nimport CustomButton from '../CustomButton/CustomButton';\nimport {Link} from 'react-router-dom'\nexport const CollectionItemContainer = styled.div`\n  width: 22vw;\n  display: flex;\n  flex-direction: column;\n  height: 350px;\n  align-items: center;\n  position: relative;\n\n  &:hover {\n    .image {\n      opacity: 0.8;\n    }\n\n    button {\n      opacity: 0.85;\n      display: flex;\n    }\n  }\n`;\n\nexport const AddButton = styled(CustomButton)`\n  width: 80%;\n  opacity: 0.7;\n  position: absolute;\n  top: 255px;\n  display: none;\n`;\n\nexport const BackgroundImage = styled.div`\n  width: 100%;\n  height: 95%;\n  background-size: cover;\n  background-position: center;\n  margin-bottom: 5px;\n  background-image: ${({ imageUrl }) => `url(${imageUrl})`};\n`;\n\nexport const CollectionFooterContainer = styled.div`\n  width: 100%;\n  height: 5%;\n  display: flex;\n  justify-content: space-between;\n  font-size: 18px;\n`;\n\nexport const NameContainer = styled.span`\n  width: 90%;\n  margin-bottom: 15px;\n`;\n\nexport const PriceContainer = styled.span`\n  width: 10%;\n  text-align: right;\n`;\nexport const LinkProduct = styled(Link)`\n  width:100%;\n  height:100%;\n  opacity:0.6;\n\n`","import React from 'react';\nimport { connect } from 'react-redux';\nimport { addItem } from '../../store/actions/cart';\nimport  { withRouter} from 'react-router-dom'\nimport {\n  CollectionItemContainer,\n  CollectionFooterContainer,\n  AddButton,\n  LinkProduct,\n  BackgroundImage,\n  NameContainer,\n  PriceContainer\n} from './collection-item.styled';\n\nconst CollectionItem = ({ collection, match, history,...otherProps}) => {\n  const { id, name ,edition, imageUrl, price ,desc ,tags } = collection;\n console.log({match, history, collection})\n  return (\n    <CollectionItemContainer onClick={() => history.push(`${match['url']}/${name}`)}>\n      <LinkProduct to={`/products/${name}`}>\n        <BackgroundImage className='image' imageUrl={`/assets${imageUrl}`} />\n        <CollectionFooterContainer>\n          <NameContainer>{name}</NameContainer>\n          <PriceContainer>{price}</PriceContainer>\n        </CollectionFooterContainer>\n      </LinkProduct>\n      \n    </CollectionItemContainer>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  addProduct: product => dispatch(addItem(product))\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(withRouter(CollectionItem));\n","import styled from 'styled-components';\nimport {textBlanc, blue4} from './../variables'\nexport const CollectionPreviewContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 1rem;\n`;\n\nexport const TitleContainer = styled.h1`\n  font-size: 2rem;\n  margin-bottom: 16px;\n  color:${blue4};\n  cursor: pointer;\n  &:hover {\n    color: grey;\n  }\n`;\n\nexport const PreviewCollections = styled.div`\n  display: flex;\n  flex-direction:row;\n  font-size: 18px;\n  justify-content: space-between;\n  align-items:center;\n  padding:0;\n  cursor: pointer;\n  margin:3rem 2rem 1rem;\n`;\n\nexport const PreviewCollection = styled.div`\n  display: flex;\n  flex-direction:column;\n  justify-content: center;\n  margin:-3rem 1rem 1rem;\n  background-image:${({ imageUrl }) => `url(${imageUrl})`};\n  width:100%;\n  height:300px;\n  color:${textBlanc}\n`;","import React, {Component} from 'react';\nimport { withRouter } from 'react-router-dom';\nimport CollectionItem from '../Collection-Item/Collection-Item';\n\nimport {\n  CollectionPreviewContainer,\n  TitleContainer,\n  PreviewCollection,\n  PreviewCollections\n} from './collection-preview.styled';\n\n\nconst CollectionPreview = ({collections,title, id, routeName, history, match}) => {\nconsole.log({match,history, collections})\n    return (\n     <CollectionPreviewContainer>\n          <TitleContainer onClick={() => history.push(`${match.path}/${routeName}`)}>\n          {title.toUpperCase()}\n        </TitleContainer>\n      <PreviewCollections>\n        {\n        Object.entries(collections).map((collection,i) => {\n        return (\n           <PreviewCollection  key={i} onClick={()=>\n              history.push(`/products${collection[1]['linkUrl']}`)}\n              imageUrl={ `./assets${collection[1]['imageUrl']}`} >\n              <h2>{ collection[1]['title'].toUpperCase()} </h2>\n           </PreviewCollection>\n        )\n        })\n        }\n      </PreviewCollections>\n      </CollectionPreviewContainer>\n  )\n}\n\nexport default withRouter(CollectionPreview);\n","import styled from 'styled-components';\n\nexport const SpinnerOverlay = styled.div`\n  height: 60vh;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const SpinnerContainer = styled.div`\n  display: inline-block;\n  width: 50px;\n  height: 50px;\n  border: 3px solid rgba(195, 195, 195, 0.6);\n  border-radius: 50%;\n  border-top-color: #636767;\n  animation: spin 1s ease-in-out infinite;\n  -webkit-animation: spin 1s ease-in-out infinite;\n\n  @keyframes spin {\n    to {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n  @-webkit-keyframes spin {\n    to {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n`;\n","import React from 'react';\n\nimport { SpinnerContainer, SpinnerOverlay } from './with-spinner.styles';\n\nconst WithSpinner = WrappedComponent => {\n  const Spinner = ({ isLoading,id, ...otherProps }) => {\n    return isLoading ? (\n      <SpinnerOverlay>\n        <SpinnerContainer />\n      </SpinnerOverlay>\n    ) : (\n      <WrappedComponent key={id} {...otherProps} />\n    );\n  };\n  return Spinner;\n};\n\nexport default WithSpinner;\n","import styled from 'styled-components';\n\nexport const CollectionsOverviewContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { withRouter} from 'react-router-dom'\nimport { compose } from 'redux'\nimport CollectionPreview from '../Collection-Preview/Collection-Preview';\nimport { selectSelections } from './../../store/selectors/selection';\nimport WithSpinner from './../With-Spinner/With-Spinner'\nimport { CollectionsOverviewContainer } from './collections.overview.styled';\n\nconst CollectionsOverview = ({ selections }) => {\n console.log(`collection Overview`) \n  return(\n      <CollectionsOverviewContainer>\n        { selections.map( (collection,index) => {\n          const  {id, ...otherCollectionProps} = collection;\n           return <CollectionPreview  key={index} id={id} isLoading={true}  {...otherCollectionProps}  />\n          }\n        )} \n      </CollectionsOverviewContainer>\n  );\n}\nconst mapStateToProps = createStructuredSelector({\n  selections: selectSelections\n})\n\nconst CollectionsOverviewContain = compose(\n  connect(mapStateToProps),\n  withRouter,\n  WithSpinner\n)(CollectionsOverview)\n\nexport default (CollectionsOverviewContain);\n","import styled from 'styled-components';\n\nexport const CollectionPageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const CollectionTitle = styled.h2`\n  font-size: 38px;\n  margin: 0 auto 30px;\n`;\n\nexport const CollectionItemsContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n  grid-gap: 10px;\n\n  & > div {\n    margin-bottom: 30px;\n  }\n`;\n","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector} from 'reselect'\nimport WithSpinner from './../../components/With-Spinner/With-Spinner'\nimport {compose} from 'redux'\nimport CollectionItem from '../../components/Collection-Item/Collection-Item';\nimport moduleName from 'module'\nimport { selectProductsCollection } from '../../store/selectors/selection';\nimport { fetchProducts  } from './../../store/actions/selection'\nimport {\n  CollectionPageContainer,\n  CollectionTitle,\n  CollectionItemsContainer\n} from './collection.styled';\n\nconst CollectionPage = ({ products ,match, history }) => {\nlet collection = []  \nproducts.forEach(col => {\n  console.log({col})\n  collection = (<>\n        <CollectionTitle>{` ${col['selection']} / ${col['collection']}` }</CollectionTitle>\n                <CollectionItemsContainer>\n                  {(col['items']).map(item => (\n                    <CollectionItem key={item['id']} collection={item} />\n                  ))}\n                </CollectionItemsContainer>\n          </>)\n    })\n\nreturn (\n  <CollectionPageContainer>\n    {collection}\n  </CollectionPageContainer>\n);\n};\n  \n\nconst mapStateToProps =  (state, ownProps) => createStructuredSelector({\n    products : selectProductsCollection(ownProps.match.params.selectionId)\n }) \nconst CollectionPageContain = compose(\n  connect(mapStateToProps),\n  WithSpinner)(CollectionPage)\n\n  export default CollectionPageContain;\n","\nimport React from 'react'\nimport { Route } from 'react-router-dom';\nimport CollectionsOverviewContain from '../../components/Collections-Overview/Collections-Overview';\nimport CollectionPageContain from './../collectionPage/collectionPage';\n\nconst ShopPage =({match, fetchProductsStart}) => {\n  \nreturn (\n  <div className='shop-page'>\n    <Route exact path={`${match.url}`} render={(props) => \n    <CollectionsOverviewContain  {...props} />\n    }/>\n    <Route exact path={`${match.path}/:selectionId`} render={(props) => \n    <CollectionPageContain  {...props} />\n    }/> \n  </div>\n);\n}\n\n\nexport default ShopPage;\n","import styled from 'styled-components';\nimport CustomButton from '../CustomButton/CustomButton';\n\nexport const ProductItemContainer = styled.div`\n  width: 22vw;\n  display: flex;\n  flex-direction: column;\n  height: 350px;\n  align-items: center;\n  position: relative;\n\n  &:hover {\n    .image {\n      opacity: 0.8;\n    }\n\n    button {\n      opacity: 0.85;\n      display: flex;\n    }\n  }\n`;\n\nexport const AddButton = styled(CustomButton)`\n  width: 80%;\n  opacity: 0.7;\n  position: absolute;\n  top: 255px;\n  display: none;\n`;\n\nexport const BackgroundImage = styled.div`\n  width: 100%;\n  height: 95%;\n  background-size: cover;\n  background-position: center;\n  margin-bottom: 5px;\n  background-image: ${({ imageUrl }) => `url(${imageUrl})`};\n`;\n\nexport const ProductFooterContainer = styled.div`\n  width: 100%;\n  height: 5%;\n  display: flex;\n  justify-content: space-between;\n  font-size: 18px;\n`;\n\nexport const NameContainer = styled.span`\n  width: 90%;\n  margin-bottom: 15px;\n`;\n\nexport const PriceContainer = styled.span`\n  width: 10%;\n  text-align: right;\n`;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { addItem } from '../../store/actions/cart';\nimport {compose} from 'redux'\nimport { withRouter} from 'react-router-dom'\nimport WithSpinner from './../With-Spinner/With-Spinner'\nimport {\n  ProductItemContainer,\n  ProductFooterContainer,\n  AddButton,\n  BackgroundImage,\n  NameContainer,\n  PriceContainer\n} from './product-item.styled';\n\nconst ProductItem = ({product , addProduct, match,location }) => {\n  const { name, price, imageUrl } = product;\n  console.log(match)\n  return (\n    <ProductItemContainer>\n      <BackgroundImage className='image' imageUrl={`/assets${imageUrl}`} />\n       <ProductFooterContainer>\n        <NameContainer>{name}</NameContainer>\n        <PriceContainer>{price}</PriceContainer>\n      </ProductFooterContainer>\n      <AddButton onClick={() => addProduct(product)} inverted>\n        Add to cart\n      </AddButton>\n    </ProductItemContainer>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  addProduct: product => dispatch(addItem(product))\n});\nconst ProductItemCompose = compose(\n  connect(null, mapDispatchToProps),\n  withRouter,\n  WithSpinner\n)(ProductItem)\nexport default ProductItemCompose","import styled from 'styled-components';\n\nexport const ProductsPageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const ProductsTitle = styled.h2`\n  font-size: 2rem;\n  margin: 0 auto 30px;\n`;\n\nexport const ProductsItemsContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n  grid-gap: 10px;\n\n  & > div {\n    margin-bottom: 30px;\n  }\n`;\n","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector} from 'reselect'\nimport WithSpinner from '../../components/With-Spinner/With-Spinner'\nimport {compose} from 'redux'\nimport ProductItemCompose from '../../components/Product-Item/Product-Item';\nimport { selectProducts } from '../../store/selectors/selection';\nimport {\n  ProductsPageContainer,\n  ProductsTitle,\n  ProductsItemsContainer\n} from './products-styled';\n\nconst ProductsPage = ({ products ,match, history }) => {\nlet col, sel =''\n  let productsCollection =  products.map(prod => {\n  \n  const {selection, collection, product} = prod\n  col= collection\n  sel= selection\n  const {id} = product\n  return (<ProductItemCompose key={id} product={product} />)\n  })\nreturn (\n  <ProductsPageContainer>\n  <ProductsTitle>{`${col}/${sel}` }</ProductsTitle>\n  <ProductsItemsContainer>\n             \n    {productsCollection}\n    </ProductsItemsContainer>\n  \n  </ProductsPageContainer>\n);\n};\n  \n\nconst mapStateToProps =  (state, ownProps) => createStructuredSelector({\n    products : selectProducts(ownProps.match.params.collectionId)\n }) \nconst ProductsPageContain = compose(\n  connect(mapStateToProps),\n  WithSpinner)(ProductsPage)\n\n  export default ProductsPageContain;\n","import styled from 'styled-components';\n\nexport const CollectionPageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const CollectionTitle = styled.h2`\n  font-size: 38px;\n  margin: 0 auto 30px;\n`;\n\nexport const CollectionItemsContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n  grid-gap: 10px;\n\n  & > div {\n    margin-bottom: 30px;\n  }\n`;\n","import styled from 'styled-components';\nimport {textBleu, subText} from './../../components/variables'\n\nexport const collectionContainer = styled.div`\n  display: flex;\n  margin: 0 auto;\n  flex-direction: column;\n  width: 400px;\n`;\n\nexport const collectionTitle = styled.h2`\n  margin: 10px 0;\n`;\nexport const ButtonsBarContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\nexport const Message = styled.h2`\nmargin: 10px;\ncolor:${textBleu};\n`;\nexport const addProductContainer = styled.div`\n display: flex;\n\n`\nexport const selectContainer = styled.div`\n  background: none;\n  background-color: white;\n  color: ${subText};\n  font-size: 18px;\n  padding: 10px 10px 10px 5px;\n  display: block;\n  width: 100%;\n  border: none;\n  border-radius: 0;\n  border-bottom: 1px solid ${subText};\n  margin: 25px 0;\n\n  &:focus {\n    outline: none;\n  \n }\n`\n","import styled, { css } from 'styled-components';\nimport {blue1,blue2, blue3, blue4, textBlack, } from './../variables'\n\nconst shrinkLabelStyles = css`\n  top: -14px;\n  font-size: 12px;\n  color: ${blue1};\n`;\nexport const GroupContainer = styled.div`\n  position: relative;\n  margin: 45px 0;\n  outline:none;\n  input[type='password'] {\n    letter-spacing: 0.3em;\n  }\n`;\n\nexport const FormInputContainer = styled.input`\n  background: none;\n  background-color: white;\n  color: ${textBlack};\n  font-size: 18px;\n  padding: 10px 10px 10px 5px;\n  display: block;\n  width: 100%;\n  border: none;\n  border-radius: 0;\n  border-bottom: 1px solid ${blue1};\n  margin: 25px 0;\n  &:focus {\n    outline: none;\n  }\n  &:focus + label {\n    ${shrinkLabelStyles};\n    \n  }\n`;\nexport const FormTextAreaContainer = styled.textarea`\n  background: none;\n  background-color: white;\n  color: ${textBlack};\n  font-size: 18px;\n  padding: 10px 10px 10px 5px;\n  display: block;\n  width: 100%;\n  border: none;\n  border-radius: 0;\n  border-bottom: 1px solid ${blue1};\n  margin: 25px 0;\n  &:focus {\n    outline: none;\n  }\n  &:focus + label {\n    ${shrinkLabelStyles}\n\n  }\n`;\nexport const FormInputLabel = styled.label`\n  color: ${blue4};\n  font-size: 16px;\n  font-weight: normal;\n  position: absolute;\n  pointer-events: none;\n  left: 5px;\n  top: 10px;\n  transition: 300ms ease all;\n  &.shrink {\n    ${shrinkLabelStyles}\n  }\n`;\n","import React from 'react';\n\nimport {\n  GroupContainer,\n  FormInputContainer,\n  FormTextAreaContainer,\n  FormInputLabel\n} from './FormInput-styled';\n\nconst FormInput = ({ handleChange, label, textarea, value, ...props }) => (\n  <GroupContainer>\n    {\n    textarea ? (\n      <FormTextAreaContainer onChange={handleChange} {...props} /> \n    ):\n    (<FormInputContainer onChange={handleChange} {...props} />)\n    }\n    {label ? (\n      <FormInputLabel className={(value && value.length) ? 'shrink' : ''}>\n        {label}\n      </FormInputLabel>\n    ) : null}\n  </GroupContainer>\n);\n\nexport default FormInput;\n","import React, {useState} from 'react';\nimport { connect } from 'react-redux';\n\nimport CollectionItem from '../../components/Collection-Item/Collection-Item';\nimport {createStructuredSelector} from 'reselect'\nimport { selectCurrentProfil, selectProfilCollection} from './../../store/selectors/profil'\nimport {\n  CollectionPageContainer,\n  CollectionTitle,\n  CollectionItemsContainer\n} from './collection.styled';\nimport { ButtonsBarContainer,  addProductContainer,selectContainer,\n  collectionContainer, collectionTitle, Message } from './profilCollection.styled'\nimport FormInput from './../../components/FormInput/FormInput'\nimport CustomButton from './../../components/CustomButton/CustomButton'\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst   ProfilCollectonPage =( ) => {\nconst [collection, setCollection] = useState({features:'',loading:false, product:'', image:''})\nconst notify = (message) => toast(`${message}`);\n\nconst  handleSubmit = async event => {\n  const {setCurrentProfil, match, history} = this.props\n  event.preventDefault();\n    const {collection,loading, product,image} = collection;\n   notify ('password and confirmed Fail', { appearance: 'error' })\n    }\n      \nconst handleFile = (event) => {\n  event.stopPropagation()\n  event.preventDefault() \n  const image = event.target.files[0]\n}\nconst  handleChange = event => {\n    const { name, value } = event.target;\n    setCollection({...collection, [name] : value });\n  };\n  const { features} = collection\n  const { title, products, price, description, } = collection.features\n  return (\n    <CollectionPageContainer>\n      <CollectionTitle>{title}</CollectionTitle>\n      <CollectionItemsContainer>\n        {features.map(product => (\n          <CollectionItem key={product.id} product={product} />\n        ))}\n      </CollectionItemsContainer>\n      <addProductContainer>\n      <productContainer>\n        <productTitle>Add Product</productTitle>\n        <form  onSubmit={this.handleSubmit}>\n          <FormInput\n            type='text'\n            name='title'\n            value={title}\n            onChange={this.handleChange}\n            label='Title'\n            required\n          />\n          <FormInput\n            type='text'\n            name='description'\n            value={description}\n            onChange={this.handleChange}\n            label='Description'\n            required\n          />\n          <FormInput\n            type='number'\n            name='price'\n            value={price}\n            onChange={this.handleChange}\n            label='Price'\n            required\n          />\n        <selectContainer>\n          <select name='collection' label='collection'>\n            <option value=\"dogme\">dogme</option>\n            <option value=\"sagesse\" selected>sagesse</option>\n            <option value=\"sociologie\">sociologie</option>\n          </select>\n        </selectContainer>\n          <selectContainer>\n            <Message>\n              Add image?\n            </Message>\n            <input type=\"file\" onChange={this.handleFile} required value='...galley image'/>\n          </selectContainer>\n          <ButtonsBarContainer>\n            <CustomButton type='submit'>Add</CustomButton>\n            \n              <CustomButton onClick={() => {}} > Edit</CustomButton>\n          </ButtonsBarContainer>\n        </form>\n      </productContainer>\n    </addProductContainer>\n    </CollectionPageContainer>\n  );\n  }\n\nconst mapStateToProps = (ownProps) => createStructuredSelector ({\n  \n})\n\nexport default connect(mapStateToProps)(ProfilCollectonPage);\n","import styled from 'styled-components';\nimport {textBleu} from '../../components/variables'\n\nexport const ProfilContainer = styled.div`\n  display: flex;\n  margin: 0 auto;\n  flex-direction: column;\n  width: 400px;\n`;\n\nexport const ProfilTitle = styled.h2`\n  margin: 10px 0;\n`;\nexport const ButtonsBarContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\nexport const Message = styled.h2`\nmargin: 10px;\ncolor:${textBleu}\n`;","import React, {Component} from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux'\nimport {createStructuredSelector} from 'reselect'\nimport {selectCurrentProfil, selectProfilCollection} from './../../store/selectors/profil'\n\nimport ProfilCollectonPage from './ProfilCollection';\nimport { ProfilContainer ,Message, ButtonsBarContainer, ProfilTitle} from './profil.styled'\nimport  FormInput from './../../components/FormInput/FormInput' \nimport CustomButton  from './../../components/CustomButton/CustomButton' \n\nclass ProfilPage extends Component   {\n\n  render() {\n    const { login, email, password, city, country, address} = this.props.profil\n\n    return(\n     <ProfilContainer>\n      <ProfilTitle>Profil</ProfilTitle>\n      <form  onSubmit={this.handleSubmit}>\n        <FormInput\n          type='text'\n          name='login'\n          value={login}\n          onChange={this.handleChange}\n          label='Login'\n          required\n        />\n        <FormInput\n          type='email'\n          name='email'\n          value={email}\n          onChange={this.handleChange}\n          label='Email'\n          required\n        />\n        <FormInput\n          type='password'\n          name='password'\n          value={password}\n          onChange={this.handleChange}\n          label='Password'\n          required\n        />\n        <FormInput\n          type='text'\n          name='address'\n          value={address}\n          onChange={this.handleChange}\n          label='Confirm Password'\n          required\n        />\n        \n        <FormInput\n          type='text'\n          name='city'\n          value={city}\n          onChange={this.handleChange}\n          label='Confirm Password'\n          required\n        />\n        <FormInput\n          type='text'\n          name='country'\n          value={country}\n          onChange={this.handleChange}\n          label='Confirm Password'\n          required\n        />\n        </form>\n        < ButtonsBarContainer>\n          <CustomButton type='submit'>SIGN UP</CustomButton>\n          <Message>\n            Already User?\n          </Message>\n            <CustomButton link='link' to='/signin' > SIGNIN</CustomButton>\n          </ButtonsBarContainer>\n        </ProfilContainer>\n\n      )\n    \n    \n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector ({\n  profil: selectCurrentProfil\n})\n\nexport default connect(mapStateToProps )(ProfilPage);\n\n","import styled from 'styled-components';\nimport {textBleu} from '../../components/variables'\nexport const ContactContainer = styled.div`\n  display: flex;\n  margin: 0 auto;\n  flex-direction: column;\n  width: 400px;\n`;\n\nexport const ContactTitle = styled.h2`\n  margin: 10px 0;\n`;\nexport const ButtonsBarContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\nexport const Message = styled.h2`\nmargin: 10px;\ncolor:${textBleu}\n`;","import React, { useState} from 'react'\nimport { connect } from 'react-redux'\nimport FormInput from './../../components/FormInput/FormInput';\nimport CustomButton from './../../components/CustomButton/CustomButton';\nimport {createStructuredSelector} from 'reselect'\nimport { selectCurrentProfil} from './../../store/selectors/profil'\nimport { ContactContainer, ContactTitle, ButtonsBarContainer, Message } from './contact.styled';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Contact = ({sendMessage, match, history, createMessage}) => {\n\nconst notify = (message) => toast(`${message}`);\n\n\nconst [message, setMessage] = useState({email: '',text: '',country: '', city:''})\nconst {email , text, country, city} = message\nconst handleSubmit = async event => {\n\n\n    event.preventDefault();\n    try{\n      createMessage(country, email, message).then(\n          messageRefdb =>  {\n            \n            history.push('/')\n          ('Saved Successfully', { appearance: 'success' })\n          })\n        } catch (error) {\n      notify(error.message)\n  }\n  };\n\nconst  handleChange = event => {\n    const { name, value } = event.target;\n    setMessage({...message, [name] : value });\n  };\nreturn (\n  <ContactContainer>\n      <ContactTitle>Join us</ContactTitle>\n      <form  onSubmit={handleSubmit}>\n      <FormInput\n          type='email'\n          name='email'\n          value={email}\n          onChange={handleChange}\n          label='Email'\n          required\n      />\n      <FormInput\n          type='text'\n          name='ville'\n          value={city}\n          onChange={handleChange}\n          label='Country'\n          required\n      />\n      <FormInput\n          type='text'\n          name='ville'\n          value={country}\n          onChange={handleChange}\n          label='Country'\n          required\n      />\n      <FormInput textarea\n          rows=\"5\" cols=\"33\"\n          name='message'\n          value={message}\n          onChange={handleChange}\n          label='message'\n          required\n      />\n      <ButtonsBarContainer>\n          <CustomButton type='submit'> Send</CustomButton>\n          </ButtonsBarContainer>\n      </form>\n  </ContactContainer>\n  );\n}\n\n\n\nconst mapStateToProps = createStructuredSelector ({\n    profil: selectCurrentProfil\n})\n\nexport default connect(mapStateToProps)(Contact);\n","import styled from 'styled-components';\nimport {textBleu} from './../variables'\nexport const SignUpContainer = styled.div`\n  display: flex;\n  margin: 0 auto;\n  flex-direction: column;\n  width: 400px;\n`;\n\nexport const SignUpTitle = styled.h2`\n  margin: 10px 0;\n  font-size:2rem;\n`;\nexport const ButtonsBarContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\nexport const Message = styled.h2`\nmargin: 10px;\ncolor:${textBleu}\n`;","import React, { useState} from 'react';\nimport { connect } from 'react-redux'\nimport {withRouter} from 'react-router-dom'\nimport FormInput from './../FormInput/FormInput';\nimport CustomButton from './../CustomButton/CustomButton';\nimport {  createStructuredSelector } from 'reselect'\nimport { selectCurrentProfil} from './../../store/selectors/profil'\nimport { SignUpContainer, SignUpTitle, ButtonsBarContainer, Message } from './signUp.styled';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { signUpStart } from './../../store/actions/profil'\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst SignUp = ({signUpStart, setCurrentProfil, match, history} ) => {\n  \nconst [credential, setCredential] = useState({\n        email:'', password:'',confirmPassword:'', login:''})\n  \nconst notify = (message) => toast(`${message}`);\nconst {  email, login, password, confirmPassword } = credential;\n  \nconst  handleSubmit =  event => {\n    event.preventDefault();\n    if (password !== confirmPassword) {\n      notify('password and confirmed dont match')\n      history.push('/signup')\n      return\n    }\n    try {\n      signUpStart({email,password,login})\n        notify(`signup succeed ${email}`)\n        history.push('/')\n    } catch (error) {\n      notify(error.message)\n    }\n  }\nconst handleChange = event => {\n  const { name, value } = event.target;\n    setCredential({ ...credential, [name] : value });\n}\n\n    return (\n      <SignUpContainer>\n        <SignUpTitle>Join us</SignUpTitle>\n        <form  onSubmit={handleSubmit}>\n          <FormInput\n          type='text'\n          name='login'\n          value={login}\n          onChange={handleChange}\n          label='Login'\n          required\n        />\n          <FormInput\n            name='email'\n            type='email'\n            value={email}\n            onChange={handleChange}\n            label='Email'\n            required\n          />\n          <FormInput\n            type='password'\n            name='password'\n            value={password}\n            onChange={handleChange}\n            label='Password'\n            required\n          />\n          <FormInput\n            type='password'\n            name='confirmPassword'\n            value={confirmPassword}\n            onChange={handleChange}\n            label='Confirm Password'\n            required\n          />\n          <ButtonsBarContainer>\n            <CustomButton input type='submit' value='SIGN UP' />\n            <Message>\n              Already User?\n            </Message>\n              <CustomButton link='link' to='/signin' > SIGNIN</CustomButton>\n          </ButtonsBarContainer>\n          <ToastContainer />\n        </form>\n      </SignUpContainer>\n    );\n}\n\n\nconst mapStateToProps = createStructuredSelector ({\n    profil: selectCurrentProfil\n})\n\nconst mapDispatchToProps = ( dispatch) => ({\n  signUpStart: (userCredential) => dispatch(signUpStart(userCredential))\n})\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(SignUp))\n","import styled from 'styled-components';\n\nexport const SignInContainer = styled.div`\n  \n  display: flex;\n  flex-direction: column;\n  margin:0 auto;\n  width: 400px;\n  @media (max-width: 800px) {\n    background-color:black;\n  }\n  `;\n\nexport const SignInTitle = styled.h2`\n  margin: 10px 0;\n  font-size:2rem;\n`;\n\nexport const ButtonsBarContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  \n  justify-content: space-between;\n`;\n","/**\n * 23bmgPxAML4e\n */\nimport React, { useState} from 'react';\nimport { connect } from 'react-redux'\nimport {selectCurrentProfil } from './../../store/selectors/profil'\nimport FormInput from '../FormInput/FormInput';\nimport CustomButton from '../CustomButton/CustomButton';\nimport { googleSigninStart, emailSigninStart, setCurrentProfil} from '../../store/actions/profil';\nimport { createStructuredSelector } from 'reselect'\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport {\n  SignInContainer,\n  SignInTitle,\n  ButtonsBarContainer\n} from './signIn.styled';\n\nconst SignIn = ({googleSigninStart, emailSigninStart, history}) =>  {\n  const [credential, setCredential] = useState({ email:'', password:'' })\n  \n  \nconst notify = (message) => toast(`${message}`);\n\nconst handleSubmit = async event => {\n  event.preventDefault();\n    try {\n      emailSigninStart(credential)\n      notify(`${credential} is connected`)\n      history.push(`/profil/`);\n  }catch(error) {\n    notify(`${error}` )\n}\n}\n\nconst handleChange = (event ) => {\n  const {value, name} = event.target\n  setCredential({...credential, [name]:value})\n}\nreturn (\n      <SignInContainer>\n       <SignInTitle>Sign in </SignInTitle>\n        <form onSubmit={handleSubmit}>\n          <FormInput\n            name='email'\n            type='email'\n            handleChange={handleChange }\n            value={credential['email']}\n            label='email'\n            required\n          />\n          <FormInput\n            name='password'\n            type='password'\n            value={credential['password']}\n            handleChange={handleChange}\n            label='password'\n            required\n          />\n          <ButtonsBarContainer>\n            <CustomButton type='submit'> Sign in </CustomButton>\n            <CustomButton type='button' onClick={googleSigninStart} isGoogleSignIn>\n              Google SignIn \n            </CustomButton>\n          </ButtonsBarContainer>\n          <ToastContainer />\n        </form>\n\n      </SignInContainer>\n    );\n  }\n\nconst mapStateToProps = createStructuredSelector \n({ profil: selectCurrentProfil })\n\nconst mapDispatchToProps = (dispatch) => ({ \n  googleSigninStart : () => dispatch(googleSigninStart()),\n  emailSigninStart : (email, password) => dispatch(emailSigninStart({email, password}))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\n","import styled from 'styled-components'\nimport {blanc} from './../../components/variables'\nexport const MainContainer = styled.div`\nmax-width: 1100px !important;\nmargin: 0 auto;\nwidth:100%;\nbackground: white;\ndisplay: flex;\nflex-direction: column;\ntext-align: center;\nmargin: 7rem auto 0;\nflex: 1 0 auto;\n`\n","import React, { useEffect, useState } from 'react';\nimport { Switch, Route, Redirect, withRouter} from 'react-router-dom';\nimport { connect } from 'react-redux'\nimport { createStructuredSelector} from 'reselect'\nimport Selection from '../../components/Selection/Selection'\nimport About from '../about/about'\nimport CheckoutPage from '../checkout/checkout.jsx'\nimport ShopPage from '../shop/shop.jsx'\nimport productsPage from './../productsPage/productsPage';\nimport ProfilPage from '../profil/profil.jsx'\nimport Contact from '../contact/contact'\nimport {isEmpty} from './../../util/is-empty'\nimport SignUp from './../../components/SignUp/SignUp'\nimport SignIn from '../../components/SignIn/SignIn';\nimport  { selectCurrentProfil} from './../../store/selectors/profil'\nimport { MainContainer } from'./main.styled';\n\nconst MainPage = ({ currentProfil}) => {\n\nreturn (\n    <Switch>\n        <MainContainer>\n            <Route exact path='/' component= { Selection} />\n            <Route exact path='/contact' component= {Contact} />\n            <Route exact path='/signup' render={() => {\n                return !isEmpty(currentProfil) ? (<Redirect to='/shop' />) : \n                (<SignUp/>)\n                }\n            }/>\n            \n            <Route exact path='/signin' render={ () => {\n                return !isEmpty(currentProfil) ? (<Redirect to='/shop'/>) :\n                (<SignIn />)\n                }\n            } />\n            <Route extact path='/shop' component={ShopPage} />\n            <Route exact path='/about' component= {About} />\n            <Route exact path='/checkout' component={CheckoutPage} />\n            <Route exact path='/profil' component={ProfilPage} />\n            \n            <Route exact path='/products/:collectionId' component={productsPage} />\n        </MainContainer>\n    </Switch>\n)\n    }\n\nconst mapStateToProps = createStructuredSelector ({\n    currentProfil: selectCurrentProfil\n}) \n\nexport default withRouter(connect(mapStateToProps)(MainPage))\n","import styled, { css } from 'styled-components'\nimport {Link} from 'react-router-dom'\nimport { maxWidth, blanc, green2, green4, textBlack, blue41,} from './../../components/variables'\n\nexport const FooterContainer = styled.div`\n    background-color: ${blanc};\n    flex-direction:row ;\n    display: flex;\n    max-width:${maxWidth} ;\n    justify-content: center;\n    align-items:flex-end;\n    flex-wrap:nowrap;\n    height:3rem;\n    justify-content:space-around;\n    align-content:stretch;\n`\n\nexport const NavigationContainer = styled.div`\n    padding: 1rem auto;\n    font-size: 1.4rem;\n    display: flex;\n    flex-direction:row;\n    align-items: center;\n    justify-content:space-around;\n    bottom:1rem;\n    `\n\nexport const CustomLinkContainer = styled(Link)`\n      color: ${green4};\n      text-decoration:none;\n      display:flex;\n      letter-spacing: 0.5px;\n      padding: 1rem 2rem 1rem;\n      font-size: 1.5rem;\n      font-weight:400;\n      flex-shrink:0;\n      text-transform: uppercase;\n      cursor: pointer;\n      &:hover {\n        background-color: ${blue41};\n        opacity:0.8;\n        border: none;\n        font-size: 1.5rem;\n        color:${textBlack};\n }\n `\nexport const CustomAContainer = styled.a `\n      color: ${green4};\n      text-decoration:none;\n      display:flex;\n      letter-spacing: 0.5px;\n      padding: 1rem 2rem 1rem;\n      font-size: 1.5rem;\n      font-weight:400;\n      flex-shrink:0;\n      text-transform: uppercase;\n      cursor: pointer;\n      &:hover {\n        background-color: ${blue41};\n        opacity:0.5;\n        border: none;\n        font-size: 1.5rem;\n        color:${textBlack};\n }\n `\n\nexport const CopyRight = styled.div`\n    color: ${textBlack};\n    padding: 1rem auto;\n    font-size: 1.4rem;\n    \n`\nexport const buttonStyles = css`\n  background-color: ${textBlack};\n  color: white;\n  border: none; \n  &:hover {\n    background-color: white;\n    color: black;\n    border: 1px solid black;\n  }\n`;\n\nconst invertedButtonStyles = css`\n  background-color: white;\n  color: black;\n  border: 1px solid black;\n\n  &:hover {\n    background-color: black;\n    color: white;\n    border: none;\n  }\n`;","import React from 'react'\nimport { FooterContainer, NavigationContainer, CustomLinkContainer, CopyRight, CustomAContainer } from './Footer-styled'\nimport { Router} from 'react-router-dom'\nimport LogoBox from '../../components/Logo/Logo'\nconst Footer = ({loading,error}) => {\nreturn (\n\n        <FooterContainer>\n             <NavigationContainer>\n                <CustomAContainer href='https://lami1a.org'> company </CustomAContainer> \n                <CustomLinkContainer to='/careers'>careers</CustomLinkContainer> \n                <CustomLinkContainer to='/policy'>policy</CustomLinkContainer> \n                 </NavigationContainer>\n            <CopyRight>\n                Built by &copy; \n                    <span className=\"navbar-brand \">lami1a\n                    </span>\n            </CopyRight>\n        </FooterContainer>\n)\n         \n}\nexport default (Footer)","import styled from 'styled-components'\nimport {blue1, maxWidth} from './components/variables'\n\nexport const AppContainer =  styled.div`\n  color: ${blue1};\n  padding:  auto;\n  text-align: center;\n  display: flex;\n  margin: auto;\n  position:relative;\n  flex-direction: column;\n  max-width:${maxWidth};\n  flex: 1 0 auto;\n  height:100vh;\n  `","import React, { useState, useEffect }  from 'react';\nimport {connect} from 'react-redux'\nimport { checkProfilSession} from './../src/store/actions/profil' \nimport Header from './components/Header/Header' \nimport Main from './pages/main/main'\nimport Footer from './components/Footer/Footer' \nimport {AppContainer} from './app-styled.jsx'\nimport {createStructuredSelector} from 'reselect'\nimport { fetchSelectionsStart } from './../src/store/actions/selection'\nimport {selectCurrentProfil}  from './../src/store/selectors/profil'\nimport { isEmpty } from './util/is-empty';\nconst App = ({ fetchSelectionsStart, checkProfilSession, currentProfil }) => {\n\nuseEffect(() => {\n      checkProfilSession()\n      fetchSelectionsStart()\n  }, [checkProfilSession, fetchSelectionsStart] ) \n\n  return (\n    <AppContainer>\n    <Header />\n      <Main />\n             v2 Bismi ALLAH        \n      <Footer/> \nd      </AppContainer>\n     );\n  }\n\n\nconst mapDispatchToProps = (dispatch) => ({\n  checkProfilSession: () => dispatch(checkProfilSession()),\n  fetchSelectionsStart: () => dispatch(fetchSelectionsStart())\n})\nconst mapStateToProps = createStructuredSelector({\n  currentProfil :selectCurrentProfil\n\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const removeProductsFromProfil = (products, product) => {\n    products.filter(prod => prod.id !== product.id)\n}","import {\n    \n    SIGNIN_FAIL,SIGNIN_SUCCESS, EMAIL_SIGNIN_START,\n    SIGNUP_FAIL, SIGNUP_SUCCESS,\n     LOGOUT_SUCCESS,LOGOUT_FAIL, \n    SET_CURRENT_PROFIL,\n    ADD_TO_COLLECTION,\n    GET_COLLECTION,\n    REMOVE_FROM_COLLECTION,\n    GET_ALL_PROFILS} from '../actions/profil'\n    import { removeProductsFromProfil } from './reducersUtils'\n    \n    const initialState = {\n        currentProfil: '',\n        products: '',\n        //status: user / org / fam\n        status:'user',\n        admin:false,\n        loading: false,\n        error:null\n       }\n\nconst profilReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_CURRENT_PROFIL:\n            return {\n                ...state,\n                loading: false,\n                currentProfil: action.payload,\n            };\n        case EMAIL_SIGNIN_START:\n            return {\n                ...state,\n                currentProfil: action.payload\n            }; \n        case SIGNUP_SUCCESS:\n        case SIGNIN_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                error: null,\n                currentProfil: action.payload\n            };\n        case SIGNUP_FAIL:\n        case SIGNIN_FAIL:\n        case LOGOUT_FAIL:\n            return {\n                ...state,\n                loading: false,\n                error: action.payload\n            };\n        case GET_COLLECTION:\n            return {\n                ...state,\n            };\n        case GET_ALL_PROFILS:\n            return {\n                ...state,\n                profils:action.payload\n            };\n        case ADD_TO_COLLECTION:\n            return {\n                ...state,\n                products: [...state.products, action.payload]\n            };\n        case REMOVE_FROM_COLLECTION:\n            const products = removeProductsFromProfil(state.products, action.payload)\n            return {\n                ...state,\n                products: [...products]\n            };\n        case LOGOUT_SUCCESS:\n            return {\n                ...state,\n                currentProfil:'',\n                error: null\n            };\n        default:\n            return state;\n            };\n        }\n\nexport default profilReducer;","export const addItemToCart = (cartItems, cartItemToAdd) => {\n  const existingCartItem = cartItems.find(\n    cartItem => cartItem.id === cartItemToAdd.id\n  );\n\n  if (existingCartItem) {\n    return cartItems.map(cartItem =>\n      cartItem.id === cartItemToAdd.id\n        ? { ...cartItem, quantity: cartItem.quantity + 1 }\n        : cartItem\n    );\n  }\n\n  return [...cartItems, { ...cartItemToAdd, quantity: 1 }];\n};\n\nexport const removeItemFromCart = (cartItems, cartItemToRemove) => {\n  const existingCartItem = cartItems.find(\n    cartItem => cartItem.id === cartItemToRemove.id\n  );\n\n  if (existingCartItem.quantity === 1) {\n    return cartItems.filter(cartItem => cartItem.id !== cartItemToRemove.id);\n  }\n\n  return cartItems.map(cartItem =>\n    cartItem.id === cartItemToRemove.id\n      ? { ...cartItem, quantity: cartItem.quantity - 1 }\n      : cartItem\n  );\n};\n","import { TOGGLE_CART_HIDDEN, ADD_ITEM, REMOVE_ITEM, CLEAR_CART, CLEAR_ITEM_FROM_CART } from './../actions/cart'\nimport { addItemToCart, removeItemFromCart } from './cartUtils';\n\nconst INITIAL_STATE = {\n        hidden: true,\n        cartItems: []\n  };\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case TOGGLE_CART_HIDDEN:\n      return {\n        ...state,\n        hidden: !state.hidden\n      };\n    case ADD_ITEM:\n      return {\n          ...state,\n           cartItems: addItemToCart(state.cartItems, action.payload)\n      };\n    case REMOVE_ITEM:\n      return {\n        ...state,\n        cartItems: removeItemFromCart(state.cartItems, action.payload)}\n      ;\n    case CLEAR_ITEM_FROM_CART:\n      return {\n          ...state, cartItems: state.cartItems.filter(\n          cartItem => cartItem.id !== action.payload.id\n        )\n      };\n    case CLEAR_CART:\n      return {\n          ...state, \n          cartItem:[]\n        \n      };\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;\n","import {\n    FETCH_SELECTIONS_SUCCESS,\n    FETCH_COLLECTIONS_SUCCESS,\n    FETCH_PRODUCTS_SUCCESS,\n    FETCH_SELECTIONS_FAIL,\n    INIT_COLLECTION,\n    FETCH_COLLECTION,\n    REMOVE_COLLECTION_SUCCESS,\n    REMOVE_SELECTION,\n    INIT_SELECTIONS,\n    ADD_COLLECTION_SUCCESS,\n    FETCH_PRODUCTS_FAIL,\n} from './../actions/selection'\nconst initialState = {\n        selections:{},\n        collections:{},\n        isFetching:false,\n        items:{},\n        error: '',\n        loading: false\n    };\n    \nconst selectionReducer = ( state = initialState , action) => {\n    switch (action.type) {\n        case FETCH_SELECTIONS_SUCCESS:\n           // console.log(action.payload)\n            return {\n                ...state,\n                selections: action.payload\n            };\n            \n        case FETCH_COLLECTIONS_SUCCESS:\n            return {\n                ...state,\n                collections: action.payload\n            };\n            \n        case FETCH_PRODUCTS_SUCCESS:\n            return {\n                ...state,\n                items: action.payload\n            };\n        \n\n        case ADD_COLLECTION_SUCCESS:\n            return {\n                ...state,\n                 collections: [...state.collections, action.payload]\n            };\n        \n        case REMOVE_COLLECTION_SUCCESS:\n            return {\n                ...state,\n                collections: action.payload\n            };\n        \n        default:\n            return state ;       \n    \n    }\n}\n\nexport default selectionReducer; \n","import {combineReducers } from 'redux'\nimport profilReducer from './profil'\nimport cartReducer from './cart'\nimport selectionReducer from './selection'\n//import shopReducer from './shop'\nimport { persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n    whitelist: ['cart', 'selection', 'profil'] \n  }\n\nconst rootReducer = combineReducers(\n    {   \n        profil:profilReducer,\n        cart:cartReducer,\n        selection:selectionReducer\n    }\n)\n\nexport default persistReducer(persistConfig, rootReducer)","import {  all , put , call, takeLatest } from 'redux-saga/effects'\nimport { fetchCollectionsSuccess, fetchCollectionsFail,\n     fetchSelectionsSuccess, fetchSelectionsFail,\n         fetchProductsFail, fetchProductsSuccess\n    } from '../actions/selection'\nimport { FETCH_COLLECTIONS_START, FETCH_PRODUCTS_START, FETCH_SELECTIONS_START} from './../actions/selection'\nimport {firestore} from './../../util/db/db'\nimport {transformCollectionSnapshotToMap} from './../../util/db/db'\n\n//Selections\nexport function* fetchSelectionsAsync( ) {\n    try {\n        let collectionsMap = null\n        const selectionRef = yield firestore.collection('selections')\n         const snapshot = yield selectionRef.get()\n        collectionsMap = yield call(transformCollectionSnapshotToMap, snapshot)\n        yield put(fetchSelectionsSuccess(collectionsMap))    \n        }\n    catch (error) {\n        console.log(`${error} sagas selections`)\n      yield put(fetchSelectionsFail(error.message))  \n     }\n}\nexport function* onfetchSelectionsStart() {\n    yield takeLatest(FETCH_SELECTIONS_START, fetchSelectionsAsync)\n}\n//Colection managment\nexport function* fetchCollectionsAsync( ) {\n    try {\n        const collections = []\n        const collectionRef =  firestore.collection('collections').then(collectionRef => (collectionRef.get())).then(snapShot =>\n                {\n                    snapShot.map(collection => {\n                        collections.concat(collection.data())\n                    })\n                }\n            )\n        yield put(fetchCollectionsSuccess(collections))    \n    }\n    catch (error) {\n      yield put(fetchCollectionsFail(error.message))  \n     }\n}\nexport function* onfetchCollectionsStart() {\n    yield takeLatest(FETCH_COLLECTIONS_START, fetchCollectionsAsync)\n}\n//products\nexport function* fetchProductsAsync() {\n    try {\n        const products = []\n        const collectionsSnapshot =  firestore.collection('products').get()\n        collectionsSnapshot.docs.map(colSnapshot => {\n            console.log(colSnapshot.data())\n            return products.push(colSnapshot)\n        })\n        yield put(fetchProductsSuccess(products))    \n    }\n    catch (error) {\n      yield put(fetchProductsFail(error.message))  \n     }\n}\n\nexport function* onfetchProductsStart() {\n    yield takeLatest(FETCH_PRODUCTS_START, fetchProductsAsync)\n\n} \n// Root ProfilsSagas\n\nexport function* selectionSagas() {\n     yield all([call(onfetchCollectionsStart),\n            call(onfetchProductsStart),\n             call(onfetchSelectionsStart)\n            ])\n }\n","import options from './../../config'\nimport {isEmpty } from '../is-empty'\nimport firebase, { auth, firestore} from './../db/db'\nimport bcrypt from 'bcryptjs'\n\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\n\ngoogleProvider.setCustomParameters({ prompt: 'select_account' });\n\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\n\nexport const encryptePassword = ( password ) => {\n  if (!password) {\n    return {\n      error:true,\n      message:' No password to encrypt'\n    }\n  }\n  bcrypt.hash(this.password, 8, (err, hash) => {\n    if (err) {\n      return err\n    }\n    return hash\n     })\n}\n\nexport const verifPassword = (password, hash) => {\n  const passwordHash = hash\n  return new Promise((resolve, reject) => {\n  bcrypt.compare(password, passwordHash, (err, same) => {\n    if (err) {\n      return reject(err)\n    }\n    resolve(same)\n  })\n  })\n}\n\nexport const getCurrentProfil = () => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe =  auth.onAuthStateChanged(userAuth => {\n      unsubscribe()\n      resolve(userAuth)\n    }, reject)\n})\n} \n\n\n// on envoie le nom de la collection  [selections] // et collectin 'coran / sagesse / objets ludiques / discount'\n","import {takeLatest, call, put, all} from \"redux-saga/effects\";\nimport {\n    GOOGLE_SIGNIN_START,\n    EMAIL_SIGNIN_START,\n    SIGNUP_START,\n    SigninSuccess,\n    SigninFail,\n    signUpFail,\n    signUpSuccess,\n    CHECK_PROFIL_SESSION,\n    LOGOUT_START,\n    logOutFail,\n    logOutSuccess,\n    SIGNUP_SUCCESS,\n} from './../actions/profil'\nimport {googleProvider,createUserProfilDocument, getCurrentProfil} from './../../util/db/auth.firebase'\nimport {apiRegister} from './../api'\n\nimport firebase, { auth, firestore} from './../../util/db/db'\n\nexport function* getSnapShotFromAuth({uid, email}) {\n    try {\n        yield put(SigninSuccess({\n            id:uid,\n            email\n        }))\n    } catch (error) {\n        yield put(SigninFail(error))\n    }\n}\n//Google\nexport function* googleSignIn() {\n    try {\n        const {\n            user\n        } = yield auth.signInWithPopup(googleProvider);\n        yield getSnapShotFromAuth(user)\n    } catch (error) {\n        yield put(SigninFail(error))\n    }\n}\n//SignUP\nexport function* signInAfterSignUP({payload: {user} }) {\n    yield put(getSnapShotFromAuth(user))\n}\n\nexport function* signUp({payload :{email, password, login}}) {\n    try {\n        const userRef = yield apiRegister({email, password})\n        \n        const userSnapShot = yield userRef.get()\n        yield put(signUpSuccess({\n            id: userSnapShot.id,\n            ...userSnapShot.data()\n        }))\n        \n    } catch (error) {\n        yield put(signUpFail(error))\n    } \n}\n//Email SignIn\nexport function* emailSignIn({payload :{email,password}}) {\n    try {\n        const {\n            user\n        } = yield auth.signInWithEmailAndPassword(email, password);\n         yield getSnapShotFromAuth(user)\n        \n    } catch (error) {\n        yield put(SigninFail(error))\n    }\n}\n// logout \nexport function* logout(){\n    try {\n        console.log('logout')\n         yield auth.signOut()\n        yield put(logOutSuccess())\n    } catch (error) {\n        yield put(logOutFail(error))\n    }\n} \n\n\n//handlers saga start actions\nexport function* isAuthenticated() {\n    try {\n        const userAuth = yield getCurrentProfil()\n        if(!userAuth) return\n        yield getSnapShotFromAuth(userAuth)\n    } catch (error) {\n        yield put(SigninFail(error))\n    }\n}\n\nexport function* onGoogleSignInStart() {\n    yield takeLatest(GOOGLE_SIGNIN_START, googleSignIn)\n}\n\nexport function* onEmailSignInStart() {\n    yield takeLatest(EMAIL_SIGNIN_START, emailSignIn)\n}\n\nexport function* onsignUpSuccess() {\n    yield takeLatest(SIGNUP_SUCCESS, signInAfterSignUP) \n} \n\nexport function* onSignUpStart() {\n    yield takeLatest(SIGNUP_START, signUp)\n}\nexport function* onLogoutStart() {\n    console.log('logout start')\n    yield takeLatest(LOGOUT_START, logout)\n}\nexport function* onCheckProfilSession() {\n    yield takeLatest(CHECK_PROFIL_SESSION, isAuthenticated)\n}\n\nexport function* profilSagas() {\n    yield all([    \n        call(onGoogleSignInStart),\n        call(onEmailSignInStart),\n        call(onSignUpStart),\n        call(onCheckProfilSession),\n        call(onLogoutStart),\n        call(onsignUpSuccess)\n    ])\n}","import {takeLatest, call, put, all} from \"redux-saga/effects\";\nimport { SIGNUP_SUCCESS} from './../actions/profil'\nimport { clearCart} from './../actions/cart'\nexport function* clearCartOnSignOutSuccess() {\n    yield put(clearCart())\n}\n\n\nexport function* onSignOutSuccess() {\n    yield takeLatest( SIGNUP_SUCCESS, clearCartOnSignOutSuccess)\n}\n\n\n\nexport  function* cartSagas()  {\n    yield all([\n        call(onSignOutSuccess)])\n}","import { all, call  } from 'redux-saga/effects'\nimport { selectionSagas } from './sagas/selection'\nimport { profilSagas } from './sagas/profil'\nimport { cartSagas } from './sagas/cart'\n\nexport default function* rootSaga() {\n   yield all([\n        call(selectionSagas),\n        call(profilSagas),\n        call(cartSagas)\n    ])\n}","import React from 'react'   \nimport { createStore , applyMiddleware } from 'redux'\n//import { createBrowserHistory } from 'history'\nimport logger from 'redux-logger'\nimport { persistStore } from 'redux-persist'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport createSagaMiddleware from 'redux-saga'\nimport rootReducer from './reducers'\nimport rootSaga from './rootSaga'\n//import thunk from 'redux-thunk'\n\n//React.lazy(() => import('./selectors/s'));\nconst sagaMiddleware = createSagaMiddleware()\nconst middleware = [ sagaMiddleware ]\n    \nif (process.env.NODE_ENV === 'development') {\n       middleware.push(logger)\n}\n\nexport const store = createStore( rootReducer, composeWithDevTools(applyMiddleware(...middleware)))\nsagaMiddleware.run(rootSaga)\n\nexport const persistor = persistStore(store, ()=> {\n       console.log(store)\n})\n\n/**@todo*/\n/* \nif ( process.env.NODE_ENV === 'development' )  {\nstore.subscribe(() =>{console.log(`On subscribe State is :: --> ${JSON.stringify(store.getState())}`)\n              })\n} */","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux'\nimport { BrowserRouter as Router} from 'react-router-dom'\nimport {store, persistor} from './store/store'\nimport { PersistGate } from 'redux-persist/integration/react'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store} >\n    <Router>\n    <PersistGate  persistor={ persistor }>\n      <App />\n      </PersistGate>\n    </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const config = {\n  secrets: {\n    jwt: 'think!:/'\n  },\n  adminEmail: 'kazdhicham@gmail.com',\n\n  firebaseConfig :{\n    apiKey: \"AIzaSyBK6_uM1AeQgPGL7e6qowyoeB6-sK2sQr0\",\n    authDomain: \"liism-2a462.firebaseapp.com\",\n    databaseURL: \"https://liism-2a462.firebaseio.com\",\n    projectId: \"liism-2a462\",\n    storageBucket: \"liism-2a462.appspot.com\",\n    messagingSenderId: \"135614317013\",\n    appId: \"1:135614317013:web:c0392d3131b359c6b23d5c\"\n  },\n  store:'gs://liism-2a462.appspot.com/',\n  mapKey: '5bd2LX5CpNr3dyBk8VXg9WA8lzpA4vEy',\n  apiUrl: 'http://localhost:4111',\n  cert:'/cert/liil_rest.cert',\n  key:'/cert/liil_rest.key',\n  stripe_key:'pk_test_E2lsq4J7vVsSAsCdu5lsM0PW009pnudKPw',\n  stripe_pass:'sk_test_apkqAnEZpfDCfZNxSYkmO2Jy00qwgPWGB5',\n  store: 'gs://liism-2a462.appspot.com/',\n  dbCompass:\n  'mongodb+srv://kazdhicham:1AllaHouAkbar@cluster0-jo1bg.mongodb.net/lami1a?retryWrites=true&w=majority',\n\n}\n"],"sourceRoot":""}